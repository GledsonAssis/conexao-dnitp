
export default [
  {
    action: 'create',
    controller: 'courses',
    isPrivate: true,
    method: 'post',
    path: '/courses',
  },
  {
    action: 'findAll',
    controller: 'courses',
    method: 'get',
    path: '/courses',
  },
  {
    action: 'findById',
    controller: 'courses',
    method: 'get',
    path: '/courses/:id',
  },
  {
    action: 'findAll',
    controller: 'courseImagesCarousel',
    method: 'get',
    path: '/courses/:id/images',
  },
  {
    action: 'findAllYear',
    controller: 'activities',
    method: 'get',
    path: '/activities-year',
  },
  {
    action: 'findById',
    controller: 'courseImagesCarousel',
    method: 'get',
    path: '/courses/images/:id',
  },
  {
    action: 'findAll',
    controller: 'courseAttachments',
    method: 'get',
    path: '/courses/:id/attachments',
  },
  {
    action: 'findById',
    controller: 'courseAttachments',
    method: 'get',
    path: '/courses/attachments/:id',
  },
  {
    action: 'findAll',
    controller: 'courseUserComments',
    method: 'get',
    path: '/courses/:id/comments',
  },
  {
    action: 'deleteComment',
    controller: 'courseUserComments',
    method: 'delete',
    path: '/courses/:idCourse/comments/:id',
  },
  {
    action: 'create',
    controller: 'courseUserComments',
    method: 'post',
    path: '/courses/comments',
  },
  {
    action: 'findAll',
    controller: 'projects',
    method: 'get',
    path: '/projects',
  },
  {
    action: 'findById',
    controller: 'projects',
    method: 'get',
    path: '/projects/:id',
  },
  {
    action: 'findAll',
    controller: 'projectImagesCarousel',
    method: 'get',
    path: '/projects/:id/images',
  },
  {
    action: 'findById',
    controller: 'projectImagesCarousel',
    method: 'get',
    path: '/projects/images/:id',
  },
  {
    action: 'findAll',
    controller: 'projectAttachments',
    method: 'get',
    path: '/projects/:id/attachments',
  },
  {
    action: 'findById',
    controller: 'projectAttachments',
    method: 'get',
    path: '/projects/attachments/:id',
  },
  {
    action: 'findAll',
    controller: 'projectUserComments',
    method: 'get',
    path: '/projects/:id/comments',
  },
  {
    action: 'create',
    controller: 'projectUserComments',
    isPrivate: true,
    method: 'post',
    path: '/projects/comments',
  },
  {
    action: 'update',
    controller: 'projectUserComments',
    isPrivate: true,
    method: 'put',
    path: '/projects/:idProject/comments/:id',
  },
  {
    action: 'deleteComment',
    controller: 'projectUserComments',
    method: 'delete',
    path: '/projects/:idProject/comments/:id',
  },
  {
    action: 'findAll',
    controller: 'actions',
    method: 'get',
    path: '/actions',
  },
  {
    action: 'findById',
    controller: 'actions',
    method: 'get',
    path: '/actions/:id',
  },
  {
    action: 'findAll',
    controller: 'actionImagesCarousel',
    method: 'get',
    path: '/actions/:id/images',
  },
  {
    action: 'findById',
    controller: 'actionImagesCarousel',
    method: 'get',
    path: '/actions/images/:id',
  },
  {
    action: 'findAll',
    controller: 'actionAttachments',
    method: 'get',
    path: '/actions/:id/attachments',
  },
  {
    action: 'findById',
    controller: 'actionAttachments',
    method: 'get',
    path: '/actions/attachments/:id',
  },
  {
    action: 'findAll',
    controller: 'actionUserComments',
    method: 'get',
    path: '/actions/:id/comments',
  },
  {
    action: 'findById',
    controller: 'actionUserComments',
    method: 'get',
    path: '/actions/comments/:id',
  },
  {
    action: 'create',
    controller: 'actionUserComments',
    method: 'post',
    path: '/actions/comments',
  },
  {
    action: 'deleteComment',
    controller: 'actionUserComments',
    isPrivate: true,
    method: 'delete',
    path: '/actions/:idAction/comments/:id',
  },
  {
    action: 'findById',
    controller: 'actionUserRatings',
    method: 'get',
    path: '/actions/:id/rating',
  },
  {
    action: 'createUpdate',
    controller: 'actionUserRatings',
    method: 'post',
    path: '/actions/rating',
  },
  {
    action: 'findAll',
    controller: 'states',
    method: 'get',
    path: '/states',
  },
  {
    action: 'findAll',
    controller: 'schoolBonds',
    method: 'get',
    path: '/schoolbonds',
  },
  {
    action: 'findAll',
    controller: 'cities',
    method: 'get',
    path: '/cities',
  },
  {
    action: 'findInstitutionsByCityId',
    controller: 'institutions',
    method: 'get',
    path: '/cities/:idCity/institutions',
  },
  {
    action: 'findByDnitUnitIds',
    controller: 'institutions',
    method: 'post',
    path: '/institutions/dnitunits',
  },
  {
    action: 'signUp',
    controller: 'users',
    method: 'post',
    path: '/users/signup',
  },
  {
    action: 'findEmailExist',
    controller: 'users',
    method: 'get',
    path: '/users/email-exist',
  },
  {
    action: 'findCPFAndEmail',
    controller: 'users',
    method: 'post',
    path: '/users/cpf-email',
  },
  {
    action: 'findAll',
    controller: 'userRoles',
    method: 'get',
    path: '/users/roles',
  },
  {
    action: 'profile',
    controller: 'users',
    isPrivate: true,
    method: 'get',
    path: '/users/profile',
  },
  {
    action: 'update',
    controller: 'users',
    isPrivate: true,
    method: 'put',
    path: '/users',
  },
  {
    action: 'setAvatar',
    controller: 'userAttachments',
    isPrivate: true,
    method: 'post',
    path: '/users/avatar',
  },
  {
    action: 'findListUsers',
    controller: 'users',
    isPrivate: true,
    method: 'get',
    path: '/users/find/:search?',
  },
  {
    action: 'getAvatar',
    controller: 'userAttachments',
    method: 'get',
    path: '/users/avatar/:id',
  },
  {
    action: 'findAll',
    controller: 'highlights',
    method: 'get',
    path: '/highlights',
  },
  {
    action: 'findAll',
    controller: 'trafficConcept',
    method: 'get',
    path: '/trafficConcepts',
  },
  {
    action: 'findById',
    controller: 'trafficConcept',
    method: 'get',
    path: '/trafficConcepts/:id',
  },
  {
    action: 'findAll',
    controller: 'trafficContent',
    method: 'get',
    path: '/trafficContents',
  },
  {
    action: 'findById',
    controller: 'trafficContent',
    method: 'get',
    path: '/trafficContents/:id',
  },
  {
    action: 'findById',
    controller: 'disciplines',
    method: 'get',
    path: '/disciplines/:id',
  },
  {
    action: 'findAll',
    controller: 'disciplines',
    method: 'get',
    path: '/disciplines',
  },
  {
    action: 'findIconByDisciplineId',
    controller: 'disciplines',
    method: 'get',
    path: '/disciplines/:id/icon',
  },
  {
    action: 'findAll',
    controller: 'activities',
    method: 'get',
    path: '/activities',
  },
  {
    action: 'search',
    controller: 'activities',
    isPrivate: true,
    method: 'post',
    path: '/activities/search',
  },
  {
    action: 'findById',
    controller: 'activities',
    isPrivate: true,
    method: 'get',
    path: '/activities/:id',
  },
  {
    action: 'download',
    controller: 'activityAttachments',
    method: 'get',
    isPrivate: true,
    path: '/activity/attachments/:id',
  },
  {
    action: 'findAll',
    controller: 'activityAttachments',
    method: 'get',
    path: '/activity/:id/attachments',
  },
  {
    action: 'findAll',
    controller: 'subThemes',
    method: 'get',
    path: '/activity/subthemes',
  },
  {
    action: 'findById',
    controller: 'subThemes',
    method: 'get',
    path: '/activity/subthemes/:id',
  },
  {
    action: 'findAll',
    controller: 'themes',
    method: 'get',
    path: '/activity/themes',
  },
  {
    action: 'findById',
    controller: 'themes',
    method: 'get',
    path: '/activity/themes/:id',
  },
  {
    action: 'findById',
    controller: 'schoolYear',
    method: 'get',
    path: '/schoolYear/:id',
  },
  {
    action: 'findAll',
    controller: 'schoolYear',
    method: 'get',
    path: '/schoolYear',
  },
  {
    action: 'findById',
    controller: 'fieldKnowledge',
    method: 'get',
    path: '/fieldKnowledges/:id',
  },
  {
    action: 'findAll',
    controller: 'fieldKnowledge',
    method: 'get',
    path: '/fieldKnowledges',
  },
  {
    action: 'findById',
    controller: 'knowledgeObjects',
    method: 'get',
    path: '/discipline/subjects/:id',
  },
  {
    action: 'search',
    controller: 'knowledgeObjects',
    method: 'get',
    path: '/discipline/subjects',
  },
  {
    action: 'findById',
    controller: 'trafficScope',
    method: 'get',
    path: '/trafficScopes/:id',
  },
  {
    action: 'findAll',
    controller: 'trafficScope',
    method: 'get',
    path: '/TrafficScopes',
  },
  {
    action: 'findById',
    controller: 'skill',
    method: 'get',
    path: '/skills/:id',
  },
  {
    action: 'findAll',
    controller: 'skill',
    method: 'get',
    path: '/skills',
  },
  {
    action: 'findAll',
    controller: 'projectActions',
    method: 'get',
    path: '/projects/:idProject/actions',
  },
  {
    action: 'findById',
    controller: 'projectActions',
    method: 'get',
    path: '/projects/actions/:id',
  },
  {
    action: 'findAll',
    controller: 'projectActionsAttachments',
    method: 'get',
    path: '/projects/actions/:idProjectAction/attachments',
  },
  {
    action: 'findById',
    controller: 'projectActionsAttachments',
    method: 'get',
    path: '/projects/actions/attachments/:idProjectAction',
  },
  {
    action: 'findAll',
    controller: 'projectActionsImagesCarousel',
    method: 'get',
    path: '/projects/actions/:idProjectAction/images',
  },
  {
    action: 'findById',
    controller: 'projectActionsImagesCarousel',
    method: 'get',
    path: '/projects/actions/images/:id',
  },
  {
    action: 'findAll',
    controller: 'projectActionUserComments',
    method: 'get',
    path: '/projects/actions/:idProjectAction/comments',
  },
  {
    action: 'create',
    controller: 'projectActionUserComments',
    method: 'post',
    path: '/projects/actions/comments',
  },
  {
    action: 'deleteComment',
    controller: 'projectActionUserComments',
    method: 'delete',
    path: '/projects/actions/:idProjectAction/comments/:id',
  },
  {
    action: 'findAllInbox',
    controller: 'messages',
    isPrivate: true,
    method: 'get',
    skipNewToken: true,
    path: '/messages/inbox',
  },
  {
    action: 'findAllSend',
    controller: 'messages',
    isPrivate: true,
    method: 'get',
    path: '/messages/send',
  },
  {
    action: 'findById',
    controller: 'messages',
    method: 'get',
    path: '/messages/:id',
  },
  {
    action: 'markAsRead',
    controller: 'messages',
    isPrivate: true,
    method: 'put',
    path: '/messages/read',
  },
  {
    action: 'sendMessage',
    controller: 'messages',
    method: 'post',
    path: '/messages',
  },
  {
    action: 'deleteMessage',
    controller: 'messages',
    isPrivate: true,
    method: 'delete',
    path: '/messages/:id',
  },
  {
    action: 'findAllRecipients',
    controller: 'messages',
    method: 'post',
    path: '/messages/compose/recipients',
  },
  {
    action: 'findAllMessagesTypes',
    controller: 'messages',
    method: 'get',
    path: '/messagestypes',
  },
  {
    action: 'findAllMessagesStatus',
    controller: 'messages',
    method: 'get',
    path: '/messagesstatus',
  },
  {
    action: 'create',
    controller: 'messageAttachments',
    method: 'post',
    path: '/messages/attachments',
  },
  {
    action: 'download',
    controller: 'messageAttachments',
    method: 'get',
    path: '/messages/attachments/:id',
  },
  {
    action: 'create',
    controller: 'initiative',
    method: 'post',
    path: '/initiatives',
  },
  {
    action: 'findAllSaved',
    controller: 'initiative',
    method: 'get',
    path: '/initiatives',
  },
  {
    action: 'findById',
    controller: 'initiative',
    method: 'get',
    path: '/initiatives/:id',
  },
  {
    action: 'create',
    controller: 'initiativeAttachments',
    method: 'post',
    path: '/initiatives/attachments',
  },
  {
    action: 'download',
    controller: 'initiativeAttachments',
    method: 'get',
    path: '/initiatives/attachments/:id',
  },
  {
    action: 'findById',
    controller: 'courseUserRatings',
    method: 'get',
    path: '/courses/:id/rating',
  },
  {
    action: 'createUpdate',
    controller: 'courseUserRatings',
    method: 'post',
    path: '/courses/rating',
  },
  {
    action: 'findById',
    controller: 'projectUserRatings',
    method: 'get',
    path: '/projects/:id/rating',
  },
  {
    action: 'createUpdate',
    controller: 'projectUserRatings',
    method: 'post',
    path: '/projects/rating',
  },
  {
    action: 'findById',
    controller: 'projectActionUserRatings',
    method: 'get',
    path: '/projects/actions/:id/rating',
  },
  {
    action: 'createUpdate',
    controller: 'projectActionUserRatings',
    method: 'post',
    path: '/projects/actions/rating',
  },
  {
    action: 'find',
    controller: 'generalSearch',
    method: 'post',
    path: '/general-search',
  },
  {
    action: 'create',
    controller: 'initiativeAudio',
    method: 'post',
    path: '/initiatives/audio',
  },
  {
    action: 'findById',
    controller: 'initiativeAudio',
    method: 'get',
    path: '/initiatives/audio/:id',
  },
  {
    action: 'findAll',
    controller: 'externalLinks',
    method: 'get',
    path: '/externalLinks',
  },
  {
    action: 'findById',
    controller: 'externalLinks',
    method: 'get',
    path: '/externalLinks/:id',
  },
  {
    action: 'getSurvey',
    controller: 'survey',
    isPrivate: true,
    method: 'get',
    path: '/survey',
  },
  {
    action: 'setSurvey',
    controller: 'survey',
    isPrivate: true,
    method: 'post',
    path: '/survey',
  },
  {
    action: 'findAllStatus',
    controller: 'initiative',
    method: 'get',
    path: '/initiatives-status',
  },
  {
    action: 'findAllByStatus',
    controller: 'initiative',
    method: 'post',
    path: '/initiatives-by-status',
  },
  {
    action: 'findBySuperintendences',
    controller: 'dnitUnit',
    method: 'post',
    path: '/dnitunits/local/search',
  },
  {
    action: 'findAllRegionalSuperintendence',
    controller: 'dnitUnit',
    method: 'get',
    path: '/dnitunits/superintendences/',
  },
  {
    action: 'findAllLocalUnits',
    controller: 'dnitUnit',
    method: 'get',
    path: '/dnitunits/locals/',
  },
  {
    action: 'isModerator',
    controller: 'users',
    method: 'get',
    path: '/users/:id/ismoderator',
  },
  {
    action: 'updateLastAccess',
    controller: 'users',
    method: 'post',
    path: '/users/updateLastAccess',
  }
];
