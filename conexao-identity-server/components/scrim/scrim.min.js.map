{"version":3,"file":"components/scrim/scrim.min.js","mappings":"mBACA,IAAIA,EAAsB,GCD1BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,QALjB,G,MCAxB,IAAIC,EACAP,EAAoBC,EAAEO,gBAAeD,EAAYP,EAAoBC,EAAEQ,SAAW,IACtF,IAAIC,EAAWV,EAAoBC,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UACzCD,EAAQE,SAAQR,EAAYM,EAAQA,EAAQE,OAAS,GAAGH,KAK7D,IAAKL,EAAW,MAAM,IAAIS,MAAM,yDAChCT,EAAYA,EAAUU,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFjB,EAAoBkB,EAAIX,EAAY,U,SCfpC,MAAMY,EACJC,YAAYC,EAAMC,GAChBnB,KAAKkB,KAAOA,EACZlB,KAAKmB,UAAYA,EACjBnB,KAAKoB,WACLpB,KAAKqB,eAGPD,WACMpB,KAAKmB,UAAUG,UAAUC,SAAS,UACpCvB,KAAKwB,MAAQ,QAEXxB,KAAKmB,UAAUG,UAAUC,SAAS,kBACpCvB,KAAKwB,MAAQ,gBAEXxB,KAAKmB,UAAUG,UAAUC,SAAS,cACpCvB,KAAKwB,MAAQ,YAIjBH,eACE,GAAIrB,KAAKmB,UAAUG,UAAUC,SAAS,QAAS,CAC7CvB,KAAKmB,UAAUM,iBAAiB,SAAUC,IACxC1B,KAAK2B,cAAe,EAChBD,EAAME,OAAON,UAAUC,SAAS,aAClCvB,KAAK6B,UAAUH,MAInB,MAAMI,EAAU9B,KAAKmB,UAAUY,iBAC7B,iBAAiB/B,KAAKmB,UAAUa,OAGlC,IAAK,MAAMC,KAAmBH,EAC5BG,EAAgBR,iBAAiB,SAAUC,IACzC1B,KAAKmB,UAAUG,UAAUY,OAAO,cAMxCL,UAAUH,GACRA,EAAMS,cAAcb,UAAUY,OAAO,UAGvCE,YACqB,SAAfpC,KAAKwB,OACPxB,KAAKmB,UAAUG,UAAUe,IAAI,WAInC,MAAMC,EAAY,GAClB,IAAK,MAAMC,KAAWpC,OAAOI,SAASwB,iBAAiB,aACrDO,EAAUE,KAAK,IAAIxB,EAAQ,WAAYuB,IAGzC,IAAK,MAAME,KAAgBtC,OAAOI,SAASwB,iBACzC,wBAEAU,EAAahB,iBAAiB,SAAS,KACrC,IAAK,MAAMc,KAAWD,EACpBC,EAAQH,gB,GC7DC,K","sources":["webpack://@govbr/dsgov/webpack/bootstrap","webpack://@govbr/dsgov/webpack/runtime/global","webpack://@govbr/dsgov/webpack/runtime/publicPath","webpack://@govbr/dsgov/./src/components/scrim/scrim.js","webpack://@govbr/dsgov/./src/components/scrim/examples.pug"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","class BRScrim {\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this._setType()\n    this._setBehavior()\n  }\n\n  _setType() {\n    if (this.component.classList.contains('foco')) {\n      this._type = 'foco'\n    }\n    if (this.component.classList.contains('legibilidade')) {\n      this._type = 'legibilidade'\n    }\n    if (this.component.classList.contains('inibicao')) {\n      this._type = 'inibicao'\n    }\n  }\n\n  _setBehavior() {\n    if (this.component.classList.contains('foco')) {\n      this.component.addEventListener('click', (event) => {\n        this.outsideclick = true\n        if (event.target.classList.contains('br-scrim')) {\n          this.hideScrim(event)\n        }\n      })\n\n      const allComp = this.component.querySelectorAll(\n        `[data-dismiss=${this.component.id}]`\n      )\n\n      for (const buttonComponent of allComp) {\n        buttonComponent.addEventListener('click', (event) => {\n          this.component.classList.remove('active')\n        })\n      }\n    }\n  }\n\n  hideScrim(event) {\n    event.currentTarget.classList.remove('active')\n  }\n\n  showScrim() {\n    if (this._type === 'foco') {\n      this.component.classList.add('active')\n    }\n  }\n}\nconst scrimList = []\nfor (const brScrim of window.document.querySelectorAll('.br-scrim')) {\n  scrimList.push(new BRScrim('br-scrim', brScrim))\n}\nexport default BRScrim\nfor (const buttonBloco1 of window.document.querySelectorAll(\n  '.scrimexemplo button'\n)) {\n  buttonBloco1.addEventListener('click', () => {\n    for (const brScrim of scrimList) {\n      brScrim.showScrim()\n    }\n  })\n}\n//Exemplo de scrim close\n","export default __webpack_public_path__ + \"components/scrim/examples.html\";"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","BRScrim","constructor","name","component","_setType","_setBehavior","classList","contains","_type","addEventListener","event","outsideclick","target","hideScrim","allComp","querySelectorAll","id","buttonComponent","remove","currentTarget","showScrim","add","scrimList","brScrim","push","buttonBloco1"],"sourceRoot":""}