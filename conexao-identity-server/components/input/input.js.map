{"version":3,"file":"components/input/input.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,YAAY;AACZ;AACA,2DAA2D,KAAK;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbsEAAe,uDAAO;;;;;;AC9btB;;;;;;ACAA,sEAAe,qBAAuB,mCAAmC,E;;;;;ACAzE,sEAAe,qBAAuB,iDAAiD,E;;;;;ACAvF,sEAAe,qBAAuB,+CAA+C,E;;;;;ACArF,sEAAe,qBAAuB,+CAA+C,E;;;;;ACArF,sEAAe,qBAAuB,iDAAiD,E;;;;;ACAvF,sEAAe,qBAAuB,gDAAgD,E;;;;;ACAtF,sEAAe,qBAAuB,mDAAmD,E;;;;;ACAzF,sEAAe,qBAAuB,gDAAgD,E","sources":["webpack://@govbr/dsgov/webpack/bootstrap","webpack://@govbr/dsgov/webpack/runtime/global","webpack://@govbr/dsgov/webpack/runtime/publicPath","webpack://@govbr/dsgov/./src/components/input/input.js","webpack://@govbr/dsgov/./src/components/input/_input.scss?fa22","webpack://@govbr/dsgov/./src/components/input/examples.pug","webpack://@govbr/dsgov/./src/components/input/examples/input-default.pug","webpack://@govbr/dsgov/./src/components/input/examples/input-sizes.pug","webpack://@govbr/dsgov/./src/components/input/examples/input-icons.pug","webpack://@govbr/dsgov/./src/components/input/examples/input-buttons.pug","webpack://@govbr/dsgov/./src/components/input/examples/input-inline.pug","webpack://@govbr/dsgov/./src/components/input/examples/input-highlight.pug","webpack://@govbr/dsgov/./src/components/input/examples/input-states.pug"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","class BRInput {\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this._currentFocus = -1\n    this._setBehavior()\n  }\n\n  _setBehavior() {\n    this._setPasswordViewBehavior()\n    this._setAutocompleteBehavior()\n  }\n\n  _setPasswordViewBehavior() {\n    for (const inputPassword of this.component.querySelectorAll(\n      'input[type=\"password\"]'\n    )) {\n      if (!inputPassword.disabled) {\n        for (const buttonIcon of inputPassword.parentNode.querySelectorAll(\n          '.br-button'\n        )) {\n          buttonIcon.addEventListener(\n            'click',\n            (event) => {\n              this._toggleShowPassword(event)\n            },\n            false\n          )\n        }\n      }\n    }\n  }\n\n  _toggleShowPassword(event) {\n    for (const icon of event.currentTarget.querySelectorAll('.fas')) {\n      if (icon.classList.contains('fa-eye')) {\n        icon.classList.remove('fa-eye')\n        icon.classList.add('fa-eye-slash')\n        for (const input of this.component.querySelectorAll(\n          'input[type=\"password\"]'\n        )) {\n          input.setAttribute('type', 'text')\n        }\n      } else if (icon.classList.contains('fa-eye-slash')) {\n        icon.classList.remove('fa-eye-slash')\n        icon.classList.add('fa-eye')\n        for (const input of this.component.querySelectorAll(\n          'input[type=\"text\"]'\n        )) {\n          input.setAttribute('type', 'password')\n        }\n      }\n    }\n  }\n\n  _setAutocompleteBehavior() {\n    for (const inputAutocomplete of this.component.querySelectorAll(\n      'input.search-autocomplete'\n    )) {\n      inputAutocomplete.addEventListener(\n        'input',\n        (event) => {\n          this._clearSearchItems()\n          this._buildSearchItems(event.currentTarget)\n        },\n        false\n      )\n      inputAutocomplete.addEventListener(\n        'keydown',\n        (event) => {\n          this._handleArrowKeys(event)\n        },\n        false\n      )\n    }\n  }\n\n  _buildSearchItems(element) {\n    const searchList = window.document.createElement('div')\n    searchList.setAttribute('class', 'search-items')\n    this.component.appendChild(searchList)\n    if (element.value !== '') {\n      for (const data of this.dataList) {\n        if (\n          data.substr(0, element.value.length).toUpperCase() ===\n          element.value.toUpperCase()\n        ) {\n          const item = window.document.createElement('div')\n          item.innerHTML = `<strong>${data.substr(\n            0,\n            element.value.length\n          )}</strong>`\n          item.innerHTML += data.substr(element.value.length)\n          item.innerHTML += `<input type=\"hidden\" value=\"${data}\">`\n          item.addEventListener(\n            'click',\n            (event) => {\n              for (const input of event.currentTarget.querySelectorAll(\n                'input[type=\"hidden\"]'\n              )) {\n                element.value = input.value\n              }\n              this._clearSearchItems()\n            },\n            false\n          )\n          searchList.appendChild(item)\n        }\n      }\n    } else {\n      this._clearSearchItems()\n    }\n  }\n\n  _clearSearchItems() {\n    for (const searchItems of this.component.querySelectorAll(\n      '.search-items'\n    )) {\n      for (const item of searchItems.querySelectorAll('div')) {\n        searchItems.removeChild(item)\n      }\n      this.component.removeChild(searchItems)\n    }\n  }\n\n  _handleArrowKeys(event) {\n    switch (event.keyCode) {\n      case 13:\n        if (this._currentFocus > -1) {\n          event.preventDefault()\n          for (const searchItems of this.component.querySelectorAll(\n            '.search-items'\n          )) {\n            for (const itemActive of searchItems.querySelectorAll(\n              'div.is-active'\n            )) {\n              itemActive.click()\n            }\n          }\n          this._currentFocus = -1\n        }\n        break\n      case 38:\n        if (this._currentFocus > 0) {\n          this._currentFocus -= 1\n        }\n        this._switchFocus()\n        break\n      case 40:\n        for (const searchItems of this.component.querySelectorAll(\n          '.search-items'\n        )) {\n          if (\n            this._currentFocus <\n            searchItems.querySelectorAll('div').length - 1\n          ) {\n            this._currentFocus += 1\n          }\n        }\n        this._switchFocus()\n        break\n      default:\n        break\n    }\n  }\n\n  _switchFocus() {\n    for (const searchItems of this.component.querySelectorAll(\n      '.search-items'\n    )) {\n      for (const [index, item] of searchItems\n        .querySelectorAll('div')\n        .entries()) {\n        if (index === this._currentFocus) {\n          item.classList.add('is-active')\n        }\n        if (index !== this._currentFocus) {\n          item.classList.remove('is-active')\n        }\n      }\n    }\n  }\n\n  setAutocompleteData(dataList) {\n    this.dataList = dataList\n  }\n}\nconst countries = [\n  'Afeganistão',\n  'África do Sul',\n  'Albânia',\n  'Alemanha',\n  'Andorra',\n  'Angola',\n  'Anguilla',\n  'Antártida',\n  'Antígua e Barbuda',\n  'Antilhas Holandesas',\n  'Arábia Saudita',\n  'Argélia',\n  'Argentina',\n  'Armênia',\n  'Aruba',\n  'Austrália',\n  'Áustria',\n  'Azerbaijão',\n  'Bahamas',\n  'Bahrein',\n  'Bangladesh',\n  'Barbados',\n  'Belarus',\n  'Bélgica',\n  'Belize',\n  'Benin',\n  'Bermudas',\n  'Bolívia',\n  'Bósnia-Herzegóvina',\n  'Botsuana',\n  'Brasil',\n  'Brunei',\n  'Bulgária',\n  'Burkina Fasso',\n  'Burundi',\n  'Butão',\n  'Cabo Verde',\n  'Camarões',\n  'Camboja',\n  'Canadá',\n  'Cazaquistão',\n  'Chade',\n  'Chile',\n  'China',\n  'Chipre',\n  'Cingapura',\n  'Colômbia',\n  'Congo',\n  'Coréia do Norte',\n  'Coréia do Sul',\n  'Costa do Marfim',\n  'Costa Rica',\n  'Croácia (Hrvatska)',\n  'Cuba',\n  'Dinamarca',\n  'Djibuti',\n  'Dominica',\n  'Egito',\n  'El Salvador',\n  'Emirados Árabes Unidos',\n  'Equador',\n  'Eritréia',\n  'Eslováquia',\n  'Eslovênia',\n  'Espanha',\n  'Estados Unidos',\n  'Estônia',\n  'Etiópia',\n  'Fiji',\n  'Filipinas',\n  'Finlândia',\n  'França',\n  'Gabão',\n  'Gâmbia',\n  'Gana',\n  'Geórgia',\n  'Gibraltar',\n  'Grã-Bretanha (Reino Unido, UK)',\n  'Granada',\n  'Grécia',\n  'Groelândia',\n  'Guadalupe',\n  'Guam (Território dos Estados Unidos)',\n  'Guatemala',\n  'Guernsey',\n  'Guiana',\n  'Guiana Francesa',\n  'Guiné',\n  'Guiné Equatorial',\n  'Guiné-Bissau',\n  'Haiti',\n  'Holanda',\n  'Honduras',\n  'Hong Kong',\n  'Hungria',\n  'Iêmen',\n  'Ilha Bouvet (Território da Noruega)',\n  'Ilha do Homem',\n  'Ilha Natal',\n  'Ilha Pitcairn',\n  'Ilha Reunião',\n  'Ilhas Aland',\n  'Ilhas Cayman',\n  'Ilhas Cocos',\n  'Ilhas Comores',\n  'Ilhas Cook',\n  'Ilhas Faroes',\n  'Ilhas Falkland (Malvinas)',\n  'Ilhas Geórgia do Sul e Sandwich do Sul',\n  'Ilhas Heard e McDonald (Território da Austrália)',\n  'Ilhas Marianas do Norte',\n  'Ilhas Marshall',\n  'Ilhas Menores dos Estados Unidos',\n  'Ilhas Norfolk',\n  'Ilhas Seychelles',\n  'Ilhas Solomão',\n  'Ilhas Svalbard e Jan Mayen',\n  'Ilhas Tokelau',\n  'Ilhas Turks e Caicos',\n  'Ilhas Virgens (Estados Unidos)',\n  'Ilhas Virgens (Inglaterra)',\n  'Ilhas Wallis e Futuna',\n  'índia',\n  'Indonésia',\n  'Irã',\n  'Iraque',\n  'Irlanda',\n  'Islândia',\n  'Israel',\n  'Itália',\n  'Jamaica',\n  'Japão',\n  'Jersey',\n  'Jordânia',\n  'Kênia',\n  'Kiribati',\n  'Kuait',\n  'Laos',\n  'Látvia',\n  'Lesoto',\n  'Líbano',\n  'Libéria',\n  'Líbia',\n  'Liechtenstein',\n  'Lituânia',\n  'Luxemburgo',\n  'Macau',\n  'Macedônia (República Yugoslava)',\n  'Madagascar',\n  'Malásia',\n  'Malaui',\n  'Maldivas',\n  'Mali',\n  'Malta',\n  'Marrocos',\n  'Martinica',\n  'Maurício',\n  'Mauritânia',\n  'Mayotte',\n  'México',\n  'Micronésia',\n  'Moçambique',\n  'Moldova',\n  'Mônaco',\n  'Mongólia',\n  'Montenegro',\n  'Montserrat',\n  'Myanma',\n  'Namíbia',\n  'Nauru',\n  'Nepal',\n  'Nicarágua',\n  'Níger',\n  'Nigéria',\n  'Niue',\n  'Noruega',\n  'Nova Caledônia',\n  'Nova Zelândia',\n  'Omã',\n  'Palau',\n  'Panamá',\n  'Papua-Nova Guiné',\n  'Paquistão',\n  'Paraguai',\n  'Peru',\n  'Polinésia Francesa',\n  'Polônia',\n  'Porto Rico',\n  'Portugal',\n  'Qatar',\n  'Quirguistão',\n  'República Centro-Africana',\n  'República Democrática do Congo',\n  'República Dominicana',\n  'República Tcheca',\n  'Romênia',\n  'Ruanda',\n  'Rússia (antiga URSS) - Federação Russa',\n  'Saara Ocidental',\n  'Saint Vincente e Granadinas',\n  'Samoa Americana',\n  'Samoa Ocidental',\n  'San Marino',\n  'Santa Helena',\n  'Santa Lúcia',\n  'São Bartolomeu',\n  'São Cristóvão e Névis',\n  'São Martim',\n  'São Tomé e Príncipe',\n  'Senegal',\n  'Serra Leoa',\n  'Sérvia',\n  'Síria',\n  'Somália',\n  'Sri Lanka',\n  'St. Pierre and Miquelon',\n  'Suazilândia',\n  'Sudão',\n  'Suécia',\n  'Suíça',\n  'Suriname',\n  'Tadjiquistão',\n  'Tailândia',\n  'Taiwan',\n  'Tanzânia',\n  'Território Britânico do Oceano índico',\n  'Territórios do Sul da França',\n  'Territórios Palestinos Ocupados',\n  'Timor Leste',\n  'Togo',\n  'Tonga',\n  'Trinidad and Tobago',\n  'Tunísia',\n  'Turcomenistão',\n  'Turquia',\n  'Tuvalu',\n  'Ucrânia',\n  'Uganda',\n  'Uruguai',\n  'Uzbequistão',\n  'Vanuatu',\n  'Vaticano',\n  'Venezuela',\n  'Vietnã',\n  'Zâmbia',\n  'Zimbábue',\n]\nconst inputList = []\nfor (const brInput of window.document.querySelectorAll('.br-input')) {\n  inputList.push(new BRInput('br-input', brInput))\n}\nfor (const brInput of inputList) {\n  brInput.component\n    .querySelectorAll('input.search-autocomplete')\n    .forEach(() => {\n      brInput.setAutocompleteData(countries)\n    })\n}\nexport default BRInput\n","// extracted by mini-css-extract-plugin\nexport {};","export default __webpack_public_path__ + \"components/input/examples.html\";","export default __webpack_public_path__ + \"components/input/examples/input-default.html\";","export default __webpack_public_path__ + \"components/input/examples/input-sizes.html\";","export default __webpack_public_path__ + \"components/input/examples/input-icons.html\";","export default __webpack_public_path__ + \"components/input/examples/input-buttons.html\";","export default __webpack_public_path__ + \"components/input/examples/input-inline.html\";","export default __webpack_public_path__ + \"components/input/examples/input-highlight.html\";","export default __webpack_public_path__ + \"components/input/examples/input-states.html\";"],"names":[],"sourceRoot":""}