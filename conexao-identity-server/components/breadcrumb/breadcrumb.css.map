{"version":3,"file":"components/breadcrumb/breadcrumb.css","mappings":"AAEA;EACE;EACA;AADF;AAGE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AADJ;AAGI;EACE;EACA;EACA;EACA;AADN;AAGM;EACE;EACA;AADR;AAGQ;EACE;AADV;AAKM;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAHR;ACxBI;EACE;AD0BN;ACtBI;EACE;ADwBN;AACM;EAEE;EACA;EACA;EACA;EACA;AAAR;AAEQ;EACE;EACA;AAAV;AAEU;EACE;EACA;AAAZ;AAMQ;EACE;EACA;EACA;EACA;EACA;AAJV;AAUE;EACE;EACA;EACA;EACA;EACA;AARJ;AAWM;EACE;AATR;AAYU;EACE;AAVZ;AAYY;EACE;EACA;EACA;EACA;EACA;AAVd;ACxEI;EACE;AD0EN;ACtEI;EACE;ADwEN;AE3DE;EF0EI;IACE;EAZN;EAgBE;IACE;EAdJ;AACF;AEnEE;EFqFE;IACE;IACA;IACA;IACA;IACA;EAfJ;EAkBE;;;IAGE;EAhBJ;AACF,C","sources":["webpack://@govbr/dsgov/./src/components/breadcrumb/_breadcrumb.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_states.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_grid.scss"],"sourcesContent":["@import \"../../partial/scss/base\";\n\n.#{$prefix}breadcrumb {\n  display: inline-grid;\n  position: relative;\n  // Página inicial\n  .crumb-list {\n    align-items: center;\n    border: none;\n    display: flex;\n    list-style: none;\n    margin: 0;\n    overflow-x: auto;\n    overflow-y: hidden;\n    padding: 0;    \n    // Cada item\n    .crumb {\n      align-items: center;\n      display: flex;\n      height: v(spacing-scale-5x);\n      margin: auto 0 auto -5px;\n\n      .icon {\n        color: v(color-secondary-04);\n        font-size: v(icon-size-sm);\n\n        &.fas.fa-chevron-right {\n          margin-right: -6px;\n        }\n      }\n\n      a {\n        cursor: pointer;\n        font-size: v(font-size-scale-down-01);\n        font-weight: v(font-weight-medium);\n        max-width: 180px;\n        overflow: hidden;\n        padding: 0;\n        text-decoration: none;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        @include hover;\n      }\n\n      &.home,\n      &.menu-mobil {\n        --focus-offset: calc(var(--spacing-scale-half) * -1);\n        align-items: center;\n        display: flex;\n        margin-left: 0;\n        margin-right: -3px;\n\n        .icon {\n          color: var(--interactive);\n          position: static;\n\n          &.fas.fa-chevron-right {\n            color: var(--color-secondary-04);\n            margin-right: -8px;\n          }\n        }\n      }\n      // Item ativo\n      &[data-active=\"active\"] {\n        span {\n          color: v(color-secondary-08);\n          cursor: default;\n          font-size: v(font-size-scale-down-01);\n          font-weight: v(font-weight-medium);\n          white-space: nowrap;\n        }\n      }\n    }\n  }\n\n  .br-card {\n    left: v(spacing-scale-9x);\n    position: absolute;\n    top: v(spacing-scale-7x);\n    width: fit-content;\n    z-index: var(--z-index-layer-1);\n\n    .front {\n      .content {\n        padding: 0;\n\n        .br-list {\n          .br-item {\n            cursor: pointer;\n\n            a {\n              display: inline-block;\n              max-width: 180px;\n              overflow: hidden;\n              text-overflow: ellipsis;\n              white-space: nowrap;\n            }\n            @include hover;\n          }\n        }\n      }\n    }\n  }\n\n  @include media-breakpoint-down(xs) {\n    .crumb-list .menu-mobil > {\n      .icon {\n        display: none;\n      }\n    }\n\n    .br-card {\n      left: v(spacing-scale-base);\n    }\n  }\n\n  @include media-breakpoint-down(sm) {\n    .crumb-list .crumb a {\n      display: block;\n      max-width: 180px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;            \n    }\n\n    .crumb-list .crumb.menu-mobil,\n    .crumb-list .crumb.menu-mobil + .crumb,\n    .crumb-list .crumb.home + .crumb {\n      display: flex;\n    }\n  }\n}\n","// Desabilitado\n@mixin disabled {\n  cursor: not-allowed;\n  opacity: var(--disabled);\n\n  * {\n    pointer-events: none;\n  }\n}\n\n// Hover\n@mixin hover {\n  &:not(:disabled) {\n    &:hover {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--hover)),\n      rgba(var(--interactive-rgb), var(--hover)));\n    }\n\n    &:active {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--pressed)),\n      rgba(var(--interactive-rgb), var(--pressed)));\n    }\n  }\n}\n\n/// Focus\n/// De acordo com o Fundamento Estado existem 2 tipos de focus:\n/// 1. Foco padrão: É a versão tracejada.\n/// 2. Foco tênue: É a versão atenuada.\n///\n/// Ambos podem ser aplicados em navegação por tab, porém apenas o focus tênue\n/// pode ser aplicado ao clicar no componente. Você precisará especificar se o\n/// focus será aplicado como focus ou focus-visible.\n///\n/// 1. Foco padrão:\n///    Aplicado somente em focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        @include focus-soft;\n///      }\n///\n/// 2. Foco tênue:\n///    Pode ser aplicado em focus ou focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        &:focus {\n///          outline: none;\n///        }\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n///\n///      ou\n///\n///      seletor {\n///        &:focus,\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n@mixin focus {\n  &:focus {\n    outline: none;\n  }\n\n  &.focus-visible,\n  &:focus-visible {\n    outline-color: var(--focus);\n    outline-offset: var(--focus-offset);\n    outline-style: var(--focus-style);\n    outline-width: var(--focus-width);\n  }\n}\n\n@mixin focus-soft {\n  border-color: var(--focus) !important;\n  box-shadow: 0 0 0 var(--surface-width-md) var(--focus);\n  outline: none;\n}\n\n// Ativo\n@mixin active {\n  background: var(--active);\n  color: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n  --color: var(--color-dark);\n  --color-rgb: var(--color-dark-rgb);\n  --color-hsl: var(--color-dark-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-dark);\n  --interactive-rgb: var(--interactive-dark-rgb);\n  --interactive-dark-hsl: var(--interactive-dark-hsl);\n  --visited: var(--gray-20);\n  --hover: var(--surface-opacity-sm);\n  --pressed: var(--surface-opacity-lg);\n  --focus-color: var(--gold-vivid-20);\n  --focus: var(--gold-vivid-20);\n  --active: var(--pure-0);\n}\n@mixin light-mode {\n  --color: var(--color-light);\n  --color-rgb: var(--color-light-rgb);\n  --color-hsl: var(--color-light-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-light);\n  --interactive-rgb: var(--interactive-light-rgb);\n  --interactive-hsl: var(--interactive-light-hsl);\n  --visited: var(--blue-warm-vivid-80);\n  --hover: var(--surface-opacity-xs);\n  --pressed: var(--surface-opacity-md);\n  --focus-color: var(--gold-vivid-40);\n  --focus: var(--gold-vivid-40);\n  --active: var(--blue-warm-vivid-80);\n}\n","// Dependência para calcular divisão\n@use \"sass:math\";\n\n// Função para retornar próximo breakpoint\n@function next-breakpoint($breakpoint) {\n  @if $breakpoint == \"xs\" {\n    @return \"sm\";\n  }\n  @if $breakpoint == \"sm\" {\n    @return \"md\";\n  }\n  @if $breakpoint == \"md\" {\n    @return \"lg\";\n  }\n  @if $breakpoint == \"lg\" {\n    @return \"xl\";\n  }\n}\n\n/// Aplica estilos no breakpoint informado para cima\n/// Modo de uso: @include media-breakpoint-up(sm) {}\n@mixin media-breakpoint-up($breakpoint) {\n  $size: map-get($breakpoints, $breakpoint);\n  @media (min-width: $size) {\n    @content;\n  }\n}\n\n/// Aplica estilos no breakpoint informado para baixo\n/// Modo de uso: @include media-breakpoint-down(sm) {}\n@mixin media-breakpoint-down($breakpoint) {\n  $value: map-get($breakpoints, next-breakpoint($breakpoint)) - 1px;\n  @media (max-width: $value) {\n    @content;\n  }\n}\n\n/// Cria as colunas de acordo com número de colunas informado.\n/// As colunas terão breakpoint caso seja ele seja informado.\n/// Modo de uso: @include columns(4); ou @include columns(8, \"sm\");\n@mixin columns($columns, $breakpoint: null) {\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")} {\n    flex: 1 0 0%;\n    min-width: math.div(1, $columns) * 100%;\n  }\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  @for $i from 1 through $columns {\n    .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-#{$i} {\n      flex-basis: math.div($i, $columns) * 100%;\n      max-width: math.div($i, $columns) * 100%;\n    }\n  }\n}\n\n/// Cria os containers responsivos para a Grid.\n/// A versão fluida sempre terá largura de 100%.\n/// As versões fixas recebem limite de largura de acordo com o breakpoint.\n/// Modo de uso: @include grid-breakpoint(\"576px\", \"sm\", \"tablet\");\n@mixin grid-breakpoint($var, $breakpoint, $name) {\n  @media (min-width: $var) {\n    .container,\n    .container-sm,\n    .container-md,\n    .container-lg,\n    .container-xl,\n    .container-fluid {\n      --grid-margin: var(--grid-#{$name}-margin);\n    }\n\n    .row {\n      --grid-gutter: var(--grid-#{$name}-gutter);\n    }\n    @if $breakpoint == \"sm\" {\n      .container,\n      .container-sm {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"md\" {\n      .container,\n      .container-sm,\n      .container-md {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"lg\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"xl\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg,\n      .container-xl {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @include columns($grid-desktop-columns, $breakpoint);\n  }\n}\n"],"names":[],"sourceRoot":""}