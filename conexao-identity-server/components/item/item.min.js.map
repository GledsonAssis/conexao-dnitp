{"version":3,"file":"components/item/item.min.js","mappings":"mBACA,IAAIA,EAAsB,GCD1BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,QALjB,G,MCAxB,IAAIC,EACAP,EAAoBC,EAAEO,gBAAeD,EAAYP,EAAoBC,EAAEQ,SAAW,IACtF,IAAIC,EAAWV,EAAoBC,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UACzCD,EAAQE,SAAQR,EAAYM,EAAQA,EAAQE,OAAS,GAAGH,KAK7D,IAAKL,EAAW,MAAM,IAAIS,MAAM,yDAChCT,EAAYA,EAAUU,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFjB,EAAoBkB,EAAIX,EAAY,U,SCfpC,MAAMY,EACJC,YAAYC,EAAMC,GAChBnB,KAAKkB,KAAOA,EACZlB,KAAKmB,UAAYA,EACjBnB,KAAKoB,eAGPA,eACEpB,KAAKqB,wBACLrB,KAAKsB,qBAGPD,wBACE,IAAK,MAAME,KAAYvB,KAAKmB,UAAUK,iBACpC,uCAEID,EAASE,UACXF,EAASG,aAAa,UAAW,IACjC1B,KAAKmB,UAAUQ,UAAUC,IAAI,aAE/BL,EAASM,iBAAiB,SAAUC,IAC9BA,EAAMC,cAAcN,SACtBK,EAAMC,cAAcL,aAAa,UAAW,IAC5C1B,KAAKmB,UAAUQ,UAAUC,IAAI,cAE7BE,EAAMC,cAAcC,gBAAgB,WACpChC,KAAKmB,UAAUQ,UAAUM,OAAO,gBAMxCX,qBACE,IAAK,MAAMY,KAASlC,KAAKmB,UAAUK,iBACjC,iCAEIU,EAAMT,UACRS,EAAMR,aAAa,UAAW,IAC9B1B,KAAKmB,UAAUQ,UAAUC,IAAI,aAE/BM,EAAML,iBAAiB,SAAUC,IAC/B,IAAK,MAAMK,KAAQnC,KAAKmB,UAAUiB,cAAcZ,iBAC9C,YAEA,IAAK,MAAMa,KAAaF,EAAKX,iBAC3B,iCAEIa,IAAcP,EAAMC,eACtBM,EAAUX,aAAa,UAAW,IAClCS,EAAKR,UAAUC,IAAI,cAEnBS,EAAUL,gBAAgB,WAC1BG,EAAKR,UAAUM,OAAO,iBASpC,MAAMK,EAAW,GACjB,IAAK,MAAMC,KAAUpC,OAAOI,SAASiB,iBAAiB,YACpDc,EAASE,KAAK,IAAIxB,EAAO,UAAWuB,K,GC/DvB,K","sources":["webpack://@govbr/dsgov/webpack/bootstrap","webpack://@govbr/dsgov/webpack/runtime/global","webpack://@govbr/dsgov/webpack/runtime/publicPath","webpack://@govbr/dsgov/./src/components/item/item.js","webpack://@govbr/dsgov/./src/components/item/examples.pug"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","class BRItem {\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this._setBehavior()\n  }\n\n  _setBehavior() {\n    this._setCheckboxSelection()\n    this._setRadioSelection()\n  }\n\n  _setCheckboxSelection() {\n    for (const checkbox of this.component.querySelectorAll(\n      '.br-checkbox input[type=\"checkbox\"]'\n    )) {\n      if (checkbox.checked) {\n        checkbox.setAttribute('checked', '')\n        this.component.classList.add('selected')\n      }\n      checkbox.addEventListener('click', (event) => {\n        if (event.currentTarget.checked) {\n          event.currentTarget.setAttribute('checked', '')\n          this.component.classList.add('selected')\n        } else {\n          event.currentTarget.removeAttribute('checked')\n          this.component.classList.remove('selected')\n        }\n      })\n    }\n  }\n\n  _setRadioSelection() {\n    for (const radio of this.component.querySelectorAll(\n      '.br-radio input[type=\"radio\"]'\n    )) {\n      if (radio.checked) {\n        radio.setAttribute('checked', '')\n        this.component.classList.add('selected')\n      }\n      radio.addEventListener('click', (event) => {\n        for (const item of this.component.parentElement.querySelectorAll(\n          '.br-item'\n        )) {\n          for (const radioItem of item.querySelectorAll(\n            '.br-radio input[type=\"radio\"]'\n          )) {\n            if (radioItem === event.currentTarget) {\n              radioItem.setAttribute('checked', '')\n              item.classList.add('selected')\n            } else {\n              radioItem.removeAttribute('checked')\n              item.classList.remove('selected')\n            }\n          }\n        }\n      })\n    }\n  }\n}\n\nconst itemList = []\nfor (const brItem of window.document.querySelectorAll('.br-item')) {\n  itemList.push(new BRItem('br-item', brItem))\n}\nexport default BRItem\n","export default __webpack_public_path__ + \"components/item/examples.html\";"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","BRItem","constructor","name","component","_setBehavior","_setCheckboxSelection","_setRadioSelection","checkbox","querySelectorAll","checked","setAttribute","classList","add","addEventListener","event","currentTarget","removeAttribute","remove","radio","item","parentElement","radioItem","itemList","brItem","push"],"sourceRoot":""}