{"version":3,"file":"components/checkbox/checkbox.css","mappings":"AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EAKA;EACA;AALF;AAQE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AANJ;AAQI;EACE;AANN;AAWI;EACE;EACA;EACA;EACA;AATN;AAcI;EACE;AAZN;AAgBE;EAEE;EACA;AAfJ;AAmBM;;;EC0BJ;EACA;EACA;ADxCF;AAmBM;EACE;AAjBR;AAsBI;ECjEF;EACA;AD8CF;AC5CE;EACE;AD8CJ;AAkBM;EACE;AAhBR;AAqBI;EACE;EACA;EACA;EACA;EACA;EACA;EAGA;AArBN;AAuBM;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AArBR;AAwBM;EACE;AAtBR;AA0BI;EACE,mCA7FM;AAqEZ;AA2BQ;EACE;EACA;AAzBV;AA8BI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AA5BN;AAgCM;EACE;EACA;EACA;EACA;AA9BR;AAmCM;EACE;EACA;AAjCR;AAqCI;EACE;AAnCN;AA6CM;EACE;EACA;AA3CR;AA+CM;EACE;EACA;AA7CR;AAiDM;EACE;EACA;EACA;EACA;EACA;AA/CR;AAmDQ;EACE;EACA;EACA;EACA;AAjDV;AA2DQ;EAMI;EACA;AA9DZ;AAmEU;;;;EAEE,0CAnBc;AA5C1B;AAmEQ;EACE,0CAxBgB;AAzC1B;AA8CQ;EAEI;EACA;AA7CZ;AAsDU;;;;EAEE,2CAnBc;AA/B1B;AAsDQ;EACE,2CAxBgB;AA5B1B,C","sources":["webpack://@govbr/dsgov/./src/components/checkbox/_checkbox.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_states.scss"],"sourcesContent":["@import \"../../partial/scss/base\";\n\n.#{$prefix}checkbox {\n  --checkbox-background: var(--bg-color);\n  --checkbox-color: var(--text-color);\n  --checkbox-font-weight: var(--font-weight-medium);\n  --checkbox-padding: var(--spacing-scale-base);\n  --checkbox-size: 24px;\n  --checkbox-line-height: 1.6em;\n\n  // Estados\n  $color-d: v(color-danger, $color-danger);\n  $color-s: v(color-success, $color-success);\n  display: block;\n  line-height: 0px;\n\n  // Texto\n  label {\n    color: var(--checkbox-color);\n    cursor: pointer;\n    display: inline-block;\n    font-weight: var(--checkbox-font-weight);\n    line-height: var(--checkbox-line-height);\n    min-height: var(--checkbox-size);\n    padding-left: calc(var(--checkbox-size) + var(--checkbox-padding));\n    position: relative;\n\n    &:empty {\n      padding-left: var(--checkbox-size);\n    }\n  }\n\n  &.hidden-label {\n    label {\n      padding-left: calc(var(--checkbox-size) + var(--surface-width-md) * 2);\n      text-indent: -10000px;\n      white-space: nowrap;\n      width: 0;\n    }\n  }\n\n  &.d-inline {\n    label {\n      padding-right: v(spacing-scale-4x);\n    }\n  }\n\n  input {\n    // Remover o checkbox padrão do navegador\n    opacity: 0;\n    position: absolute;\n\n    &:focus-visible,\n    &.focus-visible {\n      &:checked + label::before,\n      + label::before {\n        @include focus-soft;\n      }\n    }\n    //hover\n    &:hover:not(:disabled) {\n      + label::before {\n        background-image: linear-gradient(rgba(var(--interactive-rgb), var(--hover)),\n        rgba(var(--interactive-rgb), var(--hover)));\n      }\n    }\n\n    &:disabled + label {\n      @include disabled;\n\n      &:hover::before {\n        background-image: none;\n      }\n    }\n\n    // Caixa\n    + label {\n      align-items: flex-start;\n      cursor: pointer;\n      display: inline-block;\n      font-size: v(font-size-scale-base);\n      font-weight: v(font-weight-medium);\n      min-height: v(spacing-scale-3x);\n      // padding: v(spacing-scale-half) v(spacing-scale-4x) v(spacing-scale-base)\n      // v(spacing-scale-4x);\n      position: relative;\n\n      &::before {\n        background: v(color-secondary-01, $color-secondary-01);\n        border: 1px solid var(--color-secondary-04);\n        border-radius: 4px;\n        content: \"\";\n        height: var(--checkbox-size);\n        left: 0;\n        position: absolute;\n        width: var(--checkbox-size);\n      }\n\n      &:empty {\n        padding-left: v(spacing-scale-3x);\n      }\n    }\n\n    &[indeterminate] {\n      color: $color-d;\n\n      + label {\n        &::before {\n          background: v(color-primary-lighten-01);\n          border-color: v(color-primary-lighten-01);\n        }\n      }\n    }\n    // Checado\n    &:checked + label::after {\n      border: solid v(color-primary-lighten-01);\n      border-width: 0 3px 3px 0;\n      content: \"\";\n      height: v(icon-size-sm);\n      left: 8px;\n      position: absolute;\n      top: 4px;\n      transform: rotate(45deg);\n      width: 8px;\n    }\n\n    &:checked {\n      &[indeterminate] + label::after {\n        border-color: v(color-secondary-01);\n        border-width: 0 0 3px;\n        top: 2px;\n        transform: none;\n      }\n    }\n    // Inválido\n    &:invalid {\n      + label::before {\n        border-color: v(color-danger, $color-danger);\n        border-width: 2px;\n      }\n    }\n    // Desativado\n    &:disabled + label::before {\n      box-shadow: none;\n    }\n  }\n\n  // Versão pequena\n  &.is-small,\n  &.small,\n  &[small] {\n    input[type=\"checkbox\"] {\n      // Texto\n      + label {\n        line-height: v(spacing-scale-2xh);\n        min-height: v(spacing-scale-2xh);\n      }\n\n      // Caixa\n      + label::before {\n        height: v(spacing-scale-2xh);\n        width: v(spacing-scale-2xh);\n      }\n\n      // Checado\n      &:checked + label::after {\n        border-width: 0 2px 2px 0;\n        height: v(icon-size-sm);\n        left: 7px;\n        top: 6px;\n        width: 6px;\n      }\n\n      &:checked {\n        &[indeterminate] + label::after {\n          border-color: v(color-secondary-01);\n          border-width: 0 0 3px;\n          top: 2px;\n          transform: none;\n        }\n      }\n    }\n  }\n  @each $state, $color in (invalid, $color-d), (valid, $color-s) {\n    &.is-#{$state}:not(.is-inverted):not(.inverted):not([inverted]),\n    &.#{$state}:not(.is-inverted):not(.inverted):not([inverted]),\n    &[#{$state}]:not(.is-inverted):not(.inverted):not([inverted]) {\n      input[type=\"checkbox\"] {\n        + label::before {\n          @if ($state== \"valid\") {\n            border-color: v(color-success, $color-success);\n            border-width: 2px;\n          }\n          @if ($state== \"invalid\") {\n            border-color: v(color-danger, $color-danger);\n            border-width: 2px;\n          }\n        }\n\n        &:focus {\n          &:checked + label::before,\n          + label::before {\n            border-color: $color;\n          }\n        }\n        // Checado\n        &:checked + label::before {\n          border-color: $color;\n        }\n\n        &:checked + label::after {\n          @if ($state == \"valid\") {\n            //border-color: $color;\n          }\n        }\n      }\n    }\n  }\n}\n","// Desabilitado\n@mixin disabled {\n  cursor: not-allowed;\n  opacity: var(--disabled);\n\n  * {\n    pointer-events: none;\n  }\n}\n\n// Hover\n@mixin hover {\n  &:not(:disabled) {\n    &:hover {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--hover)),\n      rgba(var(--interactive-rgb), var(--hover)));\n    }\n\n    &:active {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--pressed)),\n      rgba(var(--interactive-rgb), var(--pressed)));\n    }\n  }\n}\n\n/// Focus\n/// De acordo com o Fundamento Estado existem 2 tipos de focus:\n/// 1. Foco padrão: É a versão tracejada.\n/// 2. Foco tênue: É a versão atenuada.\n///\n/// Ambos podem ser aplicados em navegação por tab, porém apenas o focus tênue\n/// pode ser aplicado ao clicar no componente. Você precisará especificar se o\n/// focus será aplicado como focus ou focus-visible.\n///\n/// 1. Foco padrão:\n///    Aplicado somente em focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        @include focus-soft;\n///      }\n///\n/// 2. Foco tênue:\n///    Pode ser aplicado em focus ou focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        &:focus {\n///          outline: none;\n///        }\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n///\n///      ou\n///\n///      seletor {\n///        &:focus,\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n@mixin focus {\n  &:focus {\n    outline: none;\n  }\n\n  &.focus-visible,\n  &:focus-visible {\n    outline-color: var(--focus);\n    outline-offset: var(--focus-offset);\n    outline-style: var(--focus-style);\n    outline-width: var(--focus-width);\n  }\n}\n\n@mixin focus-soft {\n  border-color: var(--focus) !important;\n  box-shadow: 0 0 0 var(--surface-width-md) var(--focus);\n  outline: none;\n}\n\n// Ativo\n@mixin active {\n  background: var(--active);\n  color: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n  --color: var(--color-dark);\n  --color-rgb: var(--color-dark-rgb);\n  --color-hsl: var(--color-dark-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-dark);\n  --interactive-rgb: var(--interactive-dark-rgb);\n  --interactive-dark-hsl: var(--interactive-dark-hsl);\n  --visited: var(--gray-20);\n  --hover: var(--surface-opacity-sm);\n  --pressed: var(--surface-opacity-lg);\n  --focus-color: var(--gold-vivid-20);\n  --focus: var(--gold-vivid-20);\n  --active: var(--pure-0);\n}\n@mixin light-mode {\n  --color: var(--color-light);\n  --color-rgb: var(--color-light-rgb);\n  --color-hsl: var(--color-light-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-light);\n  --interactive-rgb: var(--interactive-light-rgb);\n  --interactive-hsl: var(--interactive-light-hsl);\n  --visited: var(--blue-warm-vivid-80);\n  --hover: var(--surface-opacity-xs);\n  --pressed: var(--surface-opacity-md);\n  --focus-color: var(--gold-vivid-40);\n  --focus: var(--gold-vivid-40);\n  --active: var(--blue-warm-vivid-80);\n}\n"],"names":[],"sourceRoot":""}