{"version":3,"file":"components/cookiebar/cookiebar.min.js","mappings":"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","sources":["webpack://@govbr/dsgov/./src/partial/js/behavior/checkgroup.js","webpack://@govbr/dsgov/webpack/bootstrap","webpack://@govbr/dsgov/webpack/runtime/define property getters","webpack://@govbr/dsgov/webpack/runtime/global","webpack://@govbr/dsgov/webpack/runtime/hasOwnProperty shorthand","webpack://@govbr/dsgov/webpack/runtime/publicPath","webpack://@govbr/dsgov/./src/components/cookiebar/cookiebar-data.js","webpack://@govbr/dsgov/./src/components/cookiebar/cookiebar-labels.js","webpack://@govbr/dsgov/./src/components/cookiebar/cookiebar-templates.js","webpack://@govbr/dsgov/./src/components/cookiebar/jsonData.js","webpack://@govbr/dsgov/./src/components/cookiebar/selectors.js","webpack://@govbr/dsgov/./src/components/cookiebar/cookiebar.js","webpack://@govbr/dsgov/./src/components/cookiebar/examples.pug"],"sourcesContent":["/**\n * Comportamento do grupo de checkboxes\n *\n * Cada checkbox parent em uma cadeia de checkbox terá um objeto próprio para tratar\n * o seu comportamento e de seus filhos. Os eventListeners são declarados em cada objeto,\n * de modo que a execução passa por objetos diferentes quando um checkbox é pai e filho ao mesmo tempo\n *\n * O comportamento é uma sincronia entre os eventos e o objeto que executa o evento\n */\nexport default class Checkgroup {\n  /**\n   * Instancia um comportamento de grupo de checkbox\n   * @param {object} trigger - Elemento DOM que representa o checkbox acionador do comportamento\n   */\n  constructor(trigger) {\n    this.parent = trigger\n    // this.checkedLabel = trigger.dataset.checkedLabel\n    // this.uncheckedLabel = trigger.dataset.uncheckedLabel\n    this.children = this._setChildren(trigger.dataset.parent)\n  }\n\n  /**\n   * Pega dinamincamente o valor do atributo data-checked-label\n   * @type {string} - O valor do atributo data-checked-label ou o valor da label, caso não tenha o atributo\n   * @readonly\n   * @public\n   */\n  get checkedLabel() {\n    return (\n      this.parent.dataset.checkedLabel ||\n      this.parent.nextElementSibling.innerText\n    )\n  }\n\n  /**\n   * Pega dinamincamente o valor do atributo data-unchecked-label\n   * @type {string} - O valor do atributo data-unchecked-label ou o valor da label, caso não tenha o atributo\n   * @readonly\n   * @public\n   */\n  get uncheckedLabel() {\n    return (\n      this.parent.dataset.uncheckedLabel ||\n      this.parent.nextElementSibling.innerText\n    )\n  }\n\n  /**\n   * Configurar o comportamento do grupo de checkbox\n   * @public\n   */\n  setBehavior() {\n    this._setParentBehavior()\n    this._setChildBehavior()\n  }\n\n  /**\n   * Obtem todos os checkboxes filhos do checkbox pai\n   * @param {string} tag - Nome que indica a relação entre checkbox pai e checkbox filho\n   * @returns {array} - Array contendo os elementos DOM que representam os checkboxes filhos.\n   */\n  _setChildren(tag) {\n    return document.querySelectorAll(`[data-child=\"${tag}\"]`)\n  }\n\n  /**\n   * Trata do comportamento do checkbox pai\n   * @private\n   */\n  _setParentBehavior() {\n    this.parent.addEventListener('click', this._handleParentClick.bind(this))\n    this.parent.addEventListener('change', this._handleParentChange.bind(this))\n  }\n\n  /**\n   * Handler que trata o evento click no parent\n   * @private\n   */\n  _handleParentClick() {\n    if (!this.parent.hasAttribute('data-parent-sync')) {\n      this._setIndeterminateStateOnClick()\n    }\n    this._setParentCheckboxLabel()\n  }\n\n  /**\n   * Trata o estado indeterminado no evento click da etapa de interação do usuário\n   * @private\n   */\n  _setIndeterminateStateOnClick() {\n    if (this.parent.hasAttribute('indeterminate')) {\n      this.parent.removeAttribute('indeterminate')\n      this.parent.checked = true\n    }\n  }\n\n  /**\n   * Handler que trata o evento change no parent\n   * @private\n   */\n  _handleParentChange() {\n    if (!this.parent.hasAttribute('data-parent-sync')) {\n      this._changeChildState()\n      this._setParentCheckboxLabel()\n    } else {\n      this.parent.removeAttribute('data-parent-sync')\n    }\n  }\n\n  /**\n   * Trata do estado do checkboxes filhos\n   * @private\n   */\n  _changeChildState() {\n    this.children.forEach((child) => {\n      child.removeAttribute('indeterminate')\n      if (child.checked !== this.parent.checked) {\n        child.checked = this.parent.checked\n        child.dispatchEvent(new Event('change'))\n      }\n    })\n  }\n\n  /**\n   * Trata do comportamento dos checkboxes filhos\n   * @private\n   */\n  _setChildBehavior() {\n    this.children.forEach((child) => {\n      child.addEventListener('click', this._handleChildClick.bind(this))\n      child.addEventListener('change', this._handleChildChange.bind(this))\n    })\n  }\n\n  /**\n   * Handler que trata do evento click no filho\n   * @param {object} event - Objeto Event\n   * @private\n   */\n  _handleChildClick(event) {\n    event.currentTarget.setAttribute('data-child-sync', '')\n  }\n\n  /**\n   * Handler que trata do evento change no filho\n   * @param {object} event - Objeto Event\n   * @private\n   */\n  _handleChildChange(event) {\n    if (event.currentTarget.hasAttribute('data-child-sync')) {\n      this._setIndeterminateStateOnChildChange()\n      this.parent.setAttribute('data-parent-sync', '')\n      this.parent.dispatchEvent(new Event('click'))\n      this.parent.dispatchEvent(new Event('change'))\n      event.currentTarget.removeAttribute('data-child-sync')\n    }\n  }\n\n  /**\n   * Trata o estado indeterminado no evento click da etapa de sincronia\n   * @private\n   */\n  _setIndeterminateStateOnChildChange() {\n    if (this._isAllChildrenChecked()) {\n      this.parent.removeAttribute('indeterminate')\n      this.parent.checked = true\n    } else if (this._isAllChildrenUnchecked()) {\n      this.parent.removeAttribute('indeterminate')\n      this.parent.checked = false\n    } else {\n      this.parent.setAttribute('indeterminate', '')\n      this.parent.checked = true\n    }\n  }\n\n  /**\n   * Verifica se todos os checkboxes filhos estão selecionados\n   * @returns {boolean} - true se todos os checkboxes filhos estão selecionados\n   *                      false se pelo menos 1 checkbox filho não está selecionado\n   * @private\n   */\n  _isAllChildrenChecked() {\n    let allChildChecked = true\n    this.children.forEach((child) => {\n      if (!child.checked || child.hasAttribute('indeterminate')) {\n        allChildChecked = false\n      }\n    })\n    return allChildChecked\n  }\n\n  /**\n   * Verifica se todos so checkboxes filhos estão desselecionados\n   * @returns {boolean} - true se todos os checkboxes filhos estão desselecionados\n   *                      false se pelo menos 1 checkbox filho está selecionado\n   * @private\n   */\n  _isAllChildrenUnchecked() {\n    let allChildUnchecked = true\n    this.children.forEach((child) => {\n      if (child.checked) {\n        allChildUnchecked = false\n      }\n    })\n    return allChildUnchecked\n  }\n\n  /**\n   * Configura a label do checkbox pai\n   * @private\n   */\n  _setParentCheckboxLabel() {\n    if (this.parent.checked && !this.parent.hasAttribute('indeterminate')) {\n      this.parent.nextElementSibling.innerHTML = this.uncheckedLabel\n      this.parent.setAttribute('aria-label', this.uncheckedLabel)\n    } else {\n      this.parent.nextElementSibling.innerHTML = this.checkedLabel\n      this.parent.setAttribute('aria-label', this.checkedLabel)\n    }\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/** Classe que representa os dados do cookiebar */\nexport class CookiebarData {\n  /**\n   * Instancia um objeto de dados do cookiebar. Objeto contém as propriedades contidas no JSON de entrada em uma língua específica\n   * @param {string} json - JSON de entrada de dados\n   * @param {string} lang - Língua para filtrar o JSON de entrada\n   */\n  constructor(json, lang) {\n    this.PRIORITY_LEVELS = 5\n    Object.assign(this, this._filterByLang(json, lang))\n    this._setDataCoherenceByPriority(this.PRIORITY_LEVELS)\n  }\n\n  /**\n   * Filtra um JSON pela língua correspondente\n   * @param {string} json - Dados no formato JSON (array de objetos)\n   * @param {string} lang - Língua para filtrar o array vindo do json\n   * @returns Objeto javascript contendo as propriedade vindas do JSON filtradas pela língua\n   * @private\n   */\n  _filterByLang(json, lang) {\n    const list = JSON.parse(json)\n    const data = list.filter((element) => {\n      return element.lang === lang\n    })\n    if (data.length > 0) {\n      // Existe dados na lingua especificada\n      return data[0] // Retorna o primeiro. Se existir mais objetos na mesma língua, os demais serão ignorados.\n    } else {\n      // Não existe dados na lingua especificada\n      return list[0] // Retorna o primeiro que encontrar\n    }\n  }\n\n  /**\n   * Consolida os dados iniciais baseado em uma hierarquia de prioridades\n   * @private\n   */\n  _setDataCoherenceByPriority() {\n    this.selectAll = !this.allOptOut ? true : this.selectAll\n    this.cookieGroups.forEach((groupData) => {\n      groupData.groupOptOut = !this.allOptOut ? false : groupData.groupOptOut\n      groupData.groupSelected =\n        this.selectAll || !groupData.groupOptOut\n          ? true\n          : groupData.groupSelected\n      groupData.cookieList.forEach((cookieData) => {\n        cookieData.cookieOptOut = !groupData.groupOptOut\n          ? false\n          : cookieData.cookieOptOut\n        cookieData.cookieSelected =\n          groupData.groupSelected || !cookieData.cookieOptOut\n            ? groupData.groupSelected\n            : cookieData.cookieSelected\n      })\n    })\n    this._setIndeterminateState()\n  }\n\n  /**\n   * Controla a configuração do estado indeterminado dos checkboxes\n   * @private\n   */\n  _setIndeterminateState() {\n    this._setGroupIndeterminateState()\n    this._setAllIndeterminateState()\n  }\n\n  /**\n   * Trata a configuração do estado indeterminado dos checkboxes dos grupos de cookies\n   * @private\n   */\n  _setGroupIndeterminateState() {\n    this.cookieGroups.forEach((groupData) => {\n      let allChecked = true\n      let allUnchecked = true\n\n      groupData.cookieList.forEach((cookieData) => {\n        cookieData.cookieSelected\n          ? (allUnchecked = false)\n          : (allChecked = false)\n      })\n\n      groupData.groupSelected = allChecked ? true : allUnchecked ? false : true\n      groupData.groupIndeterminated = allChecked || allUnchecked ? false : true\n    })\n  }\n\n  /**\n   * Trata a configuração do estado indeterminado do checkbox geral\n   * @private\n   */\n  _setAllIndeterminateState() {\n    let allChecked = true\n    let allUnchecked = true\n    let indeterminated = false\n    this.cookieGroups.forEach((groupData) => {\n      groupData.groupSelected ? (allUnchecked = false) : (allChecked = false)\n\n      if (groupData.groupIndeterminated) {\n        indeterminated = true\n      }\n    })\n\n    this.selectAll = allChecked ? true : allUnchecked ? false : true\n    this.allIndeterminated = indeterminated\n      ? true\n      : allChecked || allUnchecked\n      ? false\n      : true\n  }\n\n  /**\n   * Calcula a quantidade de cookies selecionados em 1 grupo de cookies\n   * @param {object} groupData - Objeto com dados de 1 grupo de cookies\n   * @returns {number} - Quantidade de cookies selecionados em 1 grupo de cookies\n   * @public\n   */\n  getCookiesCheckedAmount(groupData) {\n    let count = 0\n    groupData.cookieList.forEach((cookieData) => {\n      if (cookieData.cookieSelected) count += 1\n    })\n    return count\n  }\n\n  /**\n   * Calcula a quantidade total de cookies em 1 grupo de cookies\n   * @param {object} groupData - Objeto com dados de 1 grupo de cookies\n   * @returns {number} - Quantidade total de cookies em 1 grupo de cookies\n   * @public\n   */\n  getCookiesAmount(groupData) {\n    let count = 0\n    groupData.cookieList.forEach(() => {\n      count += 1\n    })\n    return count\n  }\n\n  /**\n   * Ler um arquivo json local\n   * @param {string} path - Caminho para o arquivo\n   * @param {function} callback - Função de callback que recebe a conteúdo do arquivo\n   * @public\n   * @static\n   */\n  static loadJSON(path, callback) {\n    const rawFile = new XMLHttpRequest()\n    rawFile.overrideMimeType('application/json')\n    rawFile.open('GET', path, true)\n    rawFile.onreadystatechange = () => {\n      if (rawFile.readyState === 4 && rawFile.status === 200) {\n        callback(rawFile.responseText)\n      }\n    }\n    rawFile.send(null)\n  }\n}\n","/** Classe para tratamento das labels do cookiebar */\nexport class CookiebarLabels {\n  /**\n   * Instancia um objeto de labels do cookiebar\n   * @param {object} data - Objeto de dados do cookiebar\n   */\n  constructor(data) {\n    this.data = data\n  }\n\n  /**\n   * Trata a label para a informação de atualização\n   * @returns {string} - Label para a informação de atualização\n   * @public\n   */\n  setLastUpdateLabel() {\n    return this.data.lastUpdateLabel || 'Última atualização'\n  }\n\n  /**\n   * Trata a label para o título da lista de grupos de cookies\n   * @returns {string} - Label para o título da lista de grupos de cookies\n   * @public\n   */\n  setCookieGroupsLabel() {\n    return this.data.cookieGroupsLabel || 'Classes de cookies'\n  }\n\n  /**\n   * Trata a label para o checkbox geral desselecionado\n   * @returns {string} - Label para o checkbox geral desselecionado\n   * @public\n   */\n  setUnselectAllLabel() {\n    return this.data.unselectAllLabel || 'Desselecionar tudo'\n  }\n\n  /**\n   * Trata a label para o checkbox geral selecionado\n   * @returns {string} - Label para o checkbox geral selecionado\n   * @public\n   */\n  setSelectAllLabel() {\n    return this.data.selectAllLabel || 'Selecionar tudo'\n  }\n\n  /**\n   * Trata a label para o checkbox geral\n   * @returns {string} - Label para o checkbox geral\n   * @public\n   */\n  setCheckAllLabel() {\n    if (this.data.selectAll && !this.data.allIndeterminated) {\n      return this.setUnselectAllLabel()\n    } else {\n      return this.setSelectAllLabel()\n    }\n  }\n\n  /**\n   * Trata a label para o checkbox do grupo de cookies desselecionado\n   * @returns {string} - Label para o checkbox do grupo de cookies desselecionado\n   * @public\n   */\n  setUnselectAllGroupLabel() {\n    return this.data.unselectAllGroupLabel || 'Desselecionar toda classe'\n  }\n\n  /**\n   * Trata a label para o checkbox do grupo de cookies selecionado\n   * @returns {string} - Label para o checkbox do grupo de cookies selecionado\n   * @public\n   */\n  setSelectAllGroupLabel() {\n    return this.data.selectAllGroupLabel || 'Selecionar toda classe'\n  }\n\n  /**\n   * Trata a label para o checkbox do grupo de cookies\n   * @param {object} groupData - Objeto com dados de 1 grupo de cookies\n   * @returns {string} - Label para checkbox do grupo de cookies\n   * @public\n   */\n  setCheckGroupLabel(groupData) {\n    if (groupData.groupSelected && !groupData.groupIndeterminated) {\n      return this.setUnselectAllGroupLabel()\n    } else {\n      return this.setSelectAllGroupLabel()\n    }\n  }\n\n  /**\n   * Trata a label para o grupo de cookies 'opt-in'\n   * @returns {string} - Label para grupo de cookies 'opt-in'\n   * @public\n   */\n  setAlwaysActiveLabel() {\n    return this.data.alwaysActiveLabel || 'Sempre ativo'\n  }\n\n  /**\n   * Trata a label para cookie habilitado\n   * @returns {string} - Label para cookie habilitado\n   * @publi\n   */\n  setCheckCookieEnabledLabel() {\n    return this.data.onLabel || 'Ligado'\n  }\n\n  /**\n   * Trata a label para cookie desabilitado\n   * @returns {string} - Label para cookie desabilitado\n   * @public\n   */\n  setCheckCookieDisabledLabel() {\n    return this.data.offLabel || 'Desligado'\n  }\n\n  /**\n   * Trata a label para o nome do cookie\n   * @returns {string} - Label para o nome do cookie\n   * @public\n   */\n  setCookieNameLabel() {\n    return this.data.cookieNameLabel || 'Cookies'\n  }\n\n  /**\n   * Trata a label para o vencimento do cookie\n   * @returns {string} - Label para o vencimento do cookie\n   * @public\n   */\n  setCookieExpiresLabel() {\n    return this.data.expiresLabel || 'Vencimento'\n  }\n\n  /**\n   * Trata a label para o domínio do cookie\n   * @returns {string} - Label para o domínio do cookie\n   * @public\n   */\n  setCookieDomainLabel() {\n    return this.data.domainLabel || 'Domínio'\n  }\n\n  /**\n   * Trata a label para e empresa do cookie\n   * @returns {string} - Label para a empresa do cookie\n   * @public\n   */\n  setCookieEnterpriseLabel() {\n    return this.data.enterpriseLabel || 'Empresa'\n  }\n\n  /**\n   * Trata a label para a finalidade do cookie\n   * @returns {string} - Label para a finalidade do cookie\n   * @public\n   */\n  setCookiePurposeLabel() {\n    return this.data.purposeLabel || 'Finalidade'\n  }\n\n  /**\n   * Trata a label para a descrição do cookie\n   * @returns {string} - Label para a descrição do cookie\n   * @public\n   */\n  setCookieDescriptionLabel() {\n    return this.data.descriptionLabel || 'Descrição'\n  }\n\n  /**\n   * Trata a label para o botão de políticas/definições de cookies\n   * @returns {string} - Label para o botão de políticas/definições de cookies\n   * @public\n   */\n  setPoliticsButtonLabel() {\n    return this.data.allOptOut\n      ? this.data.optOutButton || 'Definir Cookies'\n      : this.data.optInButton || 'Ver Política de Cookies'\n  }\n\n  /**\n   * Trata a label para o botão de aceite\n   * @returns {string} - Label para o botão de aceite\n   * @public\n   */\n  setAcceptButtonLabel() {\n    return this.data.acceptButton || 'Aceitar'\n  }\n}\n","import { CookiebarLabels } from './cookiebar-labels'\n\n/** Classe que contém os templates do cookiebar */\nexport class CookiebarTemplates {\n  /**\n   * Instancia um objeto template com os dados do cookiebar\n   * @param {object} data - Objeto de dados do cookiebar\n   */\n  constructor(data) {\n    this.data = data\n    this.labels = new CookiebarLabels(this.data)\n  }\n\n  /**\n   * Cria um template para a área de conteúdo global\n   * @returns {string} - Elemento DOM que representa a área de conteúdo global\n   * @public\n   */\n  setGlobalContentArea() {\n    return `<div class=\"br-modal\">\n              <div class=\"br-card\" id=\"card0\">\n                <div class=\"container-fluid p-1 p-2xh\">\n                  <div class=\"wrapper p-2xh\">\n                    ${this._setIntroductoryContentArea()}\n                    <div class=\"br-modal-body\">\n                      ${this._setInfoText()}\n                      ${this._setMainContentArea()}\n                      ${this._setComplementaryContentArea()}\n                    </div>\n                  </div>\n                  ${this._setActionArea()}\n                </div>\n              </div>\n            </div>`\n  }\n\n  /**\n   * Cria um template para a área de conteúdo introdutório\n   * @returns {string} - Elemento DOM que representa a área de conteúdo introdutório\n   * @private\n   */\n  _setIntroductoryContentArea() {\n    return `<div class=\"br-modal-header entry-content\">\n              ${this._setMainTitle()}\n              ${this._setLastUpdate()}\n              ${this._setEntryText()}\n            </div>`\n  }\n\n  /**\n   * Cria um template para a área de conteúdo principal\n   * @returns {string} - Elemento DOM que representa a área de conteúdo principal\n   * @private\n   */\n  _setMainContentArea() {\n    return `<div class=\"br-list main-content\">\n              ${this._setMainContentHeader()}\n              ${this._setCookieGroups()}\n              ${\n                this.data.noteList && this.data.noteList.length\n                  ? this._setNotifications()\n                  : ''\n              }\n            </div>`\n  }\n\n  /**\n   * Cria um template para a área de acões\n   * @returns {string} - Elemento DOM que representa a área de ações\n   * @private\n   */\n  _setActionArea() {\n    return `<div class=\"br-modal-footer actions justify-content-end\">\n              ${this._setPoliticsButton()}\n              ${this._setAcceptButton()}\n            </div>`\n  }\n\n  /**\n   * Cria um template para o título principal\n   * @returns {string} - Elemento DOM que representa o título principal\n   * @private\n   */\n  _setMainTitle() {\n    return `<div class=\"br-modal-title\">\n              <div class=\"row\">\n                <div class=\"col-sm\">\n                  <h1>${this.data.mainTitle}</h1>\n                </div>\n                <div class=\"col-sm-auto order-first order-sm-last\">\n                  ${this._setCloseButton()}\n                </div>\n              </div>\n            </div>`\n  }\n\n  /**\n   * Cria um template para informações sobre atualização\n   * @returns {string} - Elemento DOM que representa a informação sobre atualização\n   * @private\n   */\n  _setLastUpdate() {\n    return `<p class=\"last-update\">${this.labels.setLastUpdateLabel()}: <span>${\n      this.data.lastUpdate\n    }</span></p>`\n  }\n\n  /**\n   * Cria um template para o texto introdutório\n   * @returns {string} - Elemento DOM que representa o texto introdutório\n   * @private\n   */\n  _setEntryText() {\n    return `<p class=\"entry-text\">${this.data.entryText}</p>`\n  }\n\n  /**\n   * Cria um template para o texto descritivo\n   * @returns {string} - Elemento DOM que representa o texto descritivo\n   * @private\n   */\n  _setInfoText() {\n    return `<p class=\"info-text\">${this.data.infoText}</p>`\n  }\n\n  /**\n   * Cria um template para o header da área de conteúdo principal\n   * @returns {string} - Elemeto DOM que representa o header da área de conteúdo principal\n   * @private\n   */\n  _setMainContentHeader() {\n    return `<div class=\"header\">\n              <div class=\"row justify-content-between flex-fill\">\n                <div class=\"col-12 col-sm align-self-center mb-2\">\n                  <div class=\"title\">${this.labels.setCookieGroupsLabel()}</div>\n                </div>\n                <div class=\"col-12 align-self-center\">\n                  ${this.data.allOptOut ? this._setCheckAll() : ''}\n                </div>\n                <div class=\"col-12 text-sm-right message mt-1\">\n                  ${this.setAllAlertMessage()}\n                </div>\n              </div>\n            </div>`\n  }\n\n  /**\n   * Cria um template para o grupo de cookies\n   * @returns {string} - Elemento DOM que representa os grupos de cookies\n   * @private\n   */\n  _setCookieGroups() {\n    let groupTemplates = ''\n    this.data.cookieGroups.forEach((groupData, groupIndex) => {\n      groupTemplates += `<hr>\n                          <div class=\"br-item group-info\">\n                            <div class=\"row mb-1\">\n                              <div class=\"col-12 col-sm align-self-center order-4 order-sm-1\">\n                                ${this._setGroupName(groupData)}\n                              </div>\n                              <div class=\"col align-self-center order-1 order-sm-2\">\n                                ${\n                                  groupData.groupOptOut\n                                    ? this._setCheckGroup(groupData, groupIndex)\n                                    : `<span class=\"always-active float-sm-right\">\n                                      ${this.labels.setAlwaysActiveLabel()}\n                                    </span>`\n                                }\n                              </div>\n                              <div class=\"col col-sm-auto align-self-center order-2 order-sm-3\">\n                                ${this._setGroupButton()}\n                              </div>\n                              <div class=\"col-12 col-sm-12 order-3 order-sm-4 text-sm-right message mt-1 mb-1\">\n                                ${this.setGroupAlertMessage(groupData)}\n                              </div>\n                            </div>\n                            <div class=\"row\">\n                              <div class=\"col\">\n                                <p class=\"group-description\">${this._setGroupDescription(\n                                  groupData\n                                )}</p>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"br-list cookie-info\">\n                            <div class=\"br-item\">\n                              <div class=\"row\">\n                                <div class=\"col\">\n                                  ${this._setCookieInfo(groupData, groupIndex)}\n                                </div>\n                              </div>\n                            </div>\n                          </div>`\n    })\n    return groupTemplates\n  }\n\n  /**\n   * Cria um template para o nome do grupo de cookies\n   * @param {object} groupData - Objeto com dados de 1 grupo de cookies\n   * @returns {string} - Elemento DOM que representa o nome do grupo de cookies\n   * @orivate\n   */\n  _setGroupName(groupData) {\n    return `<span class=\"group-name\" title=\"Expandir\">${\n      groupData.groupName\n    }</span>\n              <span class=\"cookies-checked\" title=\"Expandir\">(${\n                groupData.groupOptOut\n                  ? `${this.data.getCookiesCheckedAmount(groupData)} de `\n                  : ''\n              }</span><span class=\"group-size\" title=\"Expandir\">${this.data.getCookiesAmount(\n      groupData\n    )})</span>`\n  }\n\n  /**\n   * Cria um template para a descrição do grupo de cookies\n   * @param {object} groupData - Objeto com dados de 1 grupo de cookies\n   * @returns {string} - Elemento DOM que representa a descrição do grupo de cookies\n   * @private\n   */\n  _setGroupDescription(groupData) {\n    return `<p class=\"group-description\">${groupData.groupText}</p>`\n  }\n\n  /**\n   * Cria um template para as informações dos cookies\n   * @param {object} groupData - Objeto com dados de 1 grupo de cookies\n   * @param {number} groupIndex - Índice do grupo de cookies\n   * @returns {string} - Elemento DOM que representa as informações dos cookies\n   * @private\n   */\n  _setCookieInfo(groupData, groupIndex) {\n    let cookieTemplates = ''\n    groupData.cookieList.forEach((cookieData, cookieIndex) => {\n      cookieTemplates += `<div class=\"br-card\">\n                            <div class=\"card-content\">\n                              <div class=\"row mb-1\">\n                                <div class=\"col-12 text-right\">\n                                  ${\n                                    cookieData.cookieOptOut\n                                      ? this._setCheckCookie(\n                                          groupIndex,\n                                          cookieData,\n                                          cookieIndex\n                                        )\n                                      : ''\n                                  }\n                                </div>\n                                <div class=\"col-12 message text-right mb-1 mt-1\">\n                                  ${this.setCookieAlertMessage(cookieData)}\n                                </div>\n                              </div>\n                              <div class=\"row\">\n                                <div class=\"fixed-width cookie-term\">\n                                  <span>${this.labels.setCookieNameLabel()}</span>\n                                </div>\n                                <div class=\"col-12 col-sm mb-1 cookie-data\">\n                                  <span>${cookieData.cookieName}</span>\n                                </div>\n                              </div>\n                              <div class=\"row\">\n                                <div class=\"fixed-width cookie-term\">\n                                  <span>${this.labels.setCookieExpiresLabel()}</span>\n                                </div>\n                                <div class=\"col-12 col-sm mb-1 cookie-data\">\n                                  <span>${cookieData.expires}</span>\n                                </div>\n                              </div>\n                              <div class=\"row\">\n                                <div class=\"fixed-width cookie-term\">\n                                  <span>${this.labels.setCookieDomainLabel()}</span>\n                                </div>\n                                <div class=\"col-12 col-sm mb-1 cookie-data\">\n                                  <span>${cookieData.domain}</span>\n                                </div>\n                              </div>\n                              <div class=\"row\">\n                                <div class=\"fixed-width cookie-term\">\n                                  <span>${this.labels.setCookieEnterpriseLabel()}</span>\n                                </div>\n                                <div class=\"col-12 col-sm mb-1 cookie-data\">\n                                  <span>${cookieData.entreprise}</span>\n                                </div>\n                              </div>\n                              <div class=\"row\">\n                                <div class=\"fixed-width cookie-term\">\n                                  <span>${this.labels.setCookiePurposeLabel()}</span>\n                                </div>\n                                <div class=\"col-12 col-sm mb-1 cookie-data\">\n                                  <span>${cookieData.purpose}</span>\n                                </div>\n                              </div>\n                              <div class=\"row\">\n                                <div class=\"fixed-width cookie-term\">\n                                  <span>${this.labels.setCookieDescriptionLabel()}</span>\n                                </div>\n                                <div class=\"col-12 col-sm mb-1 cookie-data\">\n                                  <span>${cookieData.description}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>`\n    })\n    return cookieTemplates\n  }\n\n  /**\n   * Cria um template para a lista de notificações\n   * @returns {string} - Elemento DOM que representa a lista de notificações\n   * @private\n   */\n  _setNotifications() {\n    return `<hr>\n            <div class=\"br-item\">\n              <div class=\"row\">\n                <div class=\"col align-self-center\">\n                  <span class=\"group-name\" title=\"Expandir\">\n                    ${this.data.noteTitle}</span>\n                </div>\n                <div class=\"col-auto\">\n                  ${this._setGroupButton()}\n                </div>\n              </div>\n            </div>\n            <div class=\"br-list\">\n              ${this._setNotificationInfo()}\n            </div>\n            <hr>`\n  }\n\n  /**\n   * Cria um template para as informações das notificações\n   * @returns {string} - Elemento DOM que representa as informações das notificações\n   * @private\n   */\n  _setNotificationInfo() {\n    let notificationTemplates = ''\n    this.data.noteList.forEach((notificationData) => {\n      notificationTemplates += `<div class=\"br-item notes\">\n                                  <div class=\"row\">\n                                    <div class=\"col\">\n                                      <p>${notificationData.question}</p>\n                                      <p>${notificationData.answer}</p>\n                                    </div>\n                                  </div>\n                                </div>`\n    })\n    return notificationTemplates\n  }\n\n  /**\n   * Cria um template para a área de conteúdo complementar\n   * @returns {string} - Elemento DOM que representa a área de conteúdo complementar\n   * @private\n   */\n  _setComplementaryContentArea() {\n    return `<div class=\"br-list complementary-content\">\n              ${this._setLinkInfo()}\n            </div>`\n  }\n\n  /**\n   * Cria um templata para as informações dos links\n   * @returns {string} - Elemento DOM que representa as informações dos links\n   * @private\n   */\n  _setLinkInfo() {\n    let linkTemplates = ''\n    this.data.links.forEach((linkData) => {\n      linkTemplates += `<div class=\"br-item text-center\">\n                          <div class=\"row\">\n                            <div class=\"col\">\n                              <a href=\"${linkData.url}\">${linkData.name}<i class=\"fas fa-external-link-alt\" aria-hidden=\"true\"></i>\n                              </a>\n                            </div>\n                          </div>\n                        </div>`\n    })\n    return linkTemplates\n  }\n\n  /**\n   * Cria um template pra o botão de políticas de cookies\n   * @returns {string} - Elemento DOM que representa o botão de politicas de cookies\n   * @private\n   */\n  _setPoliticsButton() {\n    return `<button class=\"br-button secondary small\" type=\"button\" aria-label=\"${this.labels.setPoliticsButtonLabel()}\">${this.labels.setPoliticsButtonLabel()}</button>`\n  }\n\n  /**\n   * Cria um template pra o botão de aceite\n   * @returns {string} - Elemento DOM que representa o botão de aceite\n   * @private\n   */\n  _setAcceptButton() {\n    return `<button class=\"br-button primary small\" type=\"button\" aria-label=\"${this.labels.setAcceptButtonLabel()}\">${this.labels.setAcceptButtonLabel()}</button>`\n  }\n  /**\n   * Cria um template para o botão de fechar\n   * @returns {string} - Elemento DOM que represeta o botão de fechar\n   * @private\n   */\n  _setCloseButton() {\n    return `<button class=\"br-button close circle small float-right\" type=\"button\" data-dismiss=\"br-modal\" aria-label=\"${\n      this.data.closeLabel || 'fechar'\n    }\">\n              <i class=\"fas fa-times\"></i>\n            </button>`\n  }\n\n  /**\n   * Cria um template para botão de abrir/fechar do brupo de cookies\n   * @returns {string} - Elemento DOM que representa o botão de abrir/fechar do grupo de cookies\n   * @private\n   */\n  _setGroupButton() {\n    return `<button class=\"br-button circle small float-right\" type=\"button\" title=\"Expandir\" aria-label=\"Expandir\">\n              <i class=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n            </button>`\n  }\n\n  /**\n   * Cria um template para o checkbox de seleção geral\n   * @returns {string} - Elemento DOM que representa o checkbox de seleção geral\n   * @private\n   */\n  _setCheckAll() {\n    return `<div class=\"br-checkbox\">\n              <input\n                id=\"check-all\"\n                name=\"check-all\"\n                type=\"checkbox\"\n                aria-label=\"${this.labels.setCheckAllLabel()}\"\n                ${this.data.selectAll ? 'checked' : ''}\n                ${this.data.allIndeterminated ? 'indeterminate' : ''}\n                tabindex=\"0\"\n                data-parent=\"check-all\"\n                data-checked-label=\"${this.labels.setSelectAllLabel()}\"\n                data-unchecked-label=\"${this.labels.setUnselectAllLabel()}\"\n              />\n              <label for=\"check-all\">\n                ${this.labels.setCheckAllLabel()}\n              </label>\n            </div>`\n  }\n\n  /**\n   * Cria um template para o checkbox de seleção do grupo de cookies\n   * @param {object} groupData - Objeto com dados de 1 grupo de cookies\n   * @param {number} groupIndex - Índice do grupo de cookies\n   * @returns {string} - Elemento DOM que representa o checkbox de seleção do grupo de cookies\n   * @private\n   */\n  _setCheckGroup(groupData, groupIndex) {\n    return `<div class=\"br-checkbox\">\n              <input\n                id=\"${`check-group-${groupIndex}`}\"\n                name=\"${`check-group-${groupIndex}`}\"\n                type=\"checkbox\"\n                aria-label=\"${this.labels.setCheckGroupLabel(groupData)}\"\n                ${groupData.groupSelected ? 'checked' : ''}\n                ${groupData.groupIndeterminated ? 'indeterminate' : ''}\n                tabindex=\"0\"\n                data-child=\"check-all\"\n                data-parent=\"${`check-group-${groupIndex}`}\"\n                data-checked-label=\"${this.labels.setSelectAllGroupLabel()}\"\n                data-unchecked-label=\"${this.labels.setUnselectAllGroupLabel()}\"\n              />\n              <label for=\"${`check-group-${groupIndex}`}\">\n                ${this.labels.setCheckGroupLabel(groupData)}\n              </label>\n            </div>`\n  }\n\n  /**\n   * Cria um template para checkbox(switch) de seleção do cookie\n   * @param {number} groupIndex - Índice do grupo de cookies\n   * @param {object} cookieData - Objeto com dados de 1 cookie\n   * @param {number} cookieIndex - Índice do cookie\n   * @returns {string} - Elemento DOM que representa o checkbox(switch) de seleção do cookie\n   * @private\n   */\n  _setCheckCookie(groupIndex, cookieData, cookieIndex) {\n    return `<div class=\"br-switch small icon\">\n              <input\n                id=\"${`check-cookie-${groupIndex}-${cookieIndex}`}\"\n                name=\"${`check-cookie-${groupIndex}-${cookieIndex}`}\"\n                type=\"checkbox\"\n                ${cookieData.cookieSelected ? 'checked' : ''}\n                tabindex=\"-1\"\n                data-child=\"${`check-group-${groupIndex}`}\"\n              />\n              <label\n                for=\"${`check-cookie-${groupIndex}-${cookieIndex}`}\"\n                aria-label=\"${\n                  cookieData.cookieSelected\n                    ? this.labels.setCheckCookieEnabledLabel()\n                    : this.labels.setCheckCookieDisabledLabel()\n                }\">\n              </label>\n              <div\n                class=\"switch-data\"\n                data-enabled=\"${this.labels.setCheckCookieEnabledLabel()}\"\n                data-disabled=\"${this.labels.setCheckCookieDisabledLabel()}\">\n              </div>\n            </div>`\n  }\n\n  /**\n   * Cria um template para a mensagem de alerta geral\n   * @returns {string} - Elemento DOM que representa a mensagem de alerta geral ou uma string vazia\n   * @public\n   */\n  setAllAlertMessage() {\n    return this.data.allAlertMessage\n      ? `<span class=\"feedback warning ${\n          !this.data.selectAll || this.data.allIndeterminated ? '' : 'd-none'\n        }\" role=\"alert\">\n                <i class=\"fas fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n                ${this.data.allAlertMessage}\n              </span>`\n      : ''\n  }\n\n  /**\n   * Cria um template para a mensagem de alerta para o grupo de cookies\n   * @param {object} groupData - Objeto com dados de 1 grupo de cookies\n   * @returns {string} - Elemento DOM que representa a mensagem de alerta para o grupo de cookies\n   * @public\n   */\n  setGroupAlertMessage(groupData) {\n    return groupData.groupAlertMessage\n      ? `<span class=\"feedback warning ${\n          !groupData.groupSelected || groupData.groupIndeterminated\n            ? ''\n            : 'd-none'\n        }\" role=\"alert\">\n          <i class=\"fas fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n          ${groupData.groupAlertMessage}\n        </span>`\n      : ''\n  }\n\n  /**\n   * Cria um template para a mensagem de alerta para o cookie\n   * @param {object} cookieData - Objeto com dados de 1 cookie\n   * @returns {string} - Elemento DOM que representa a mensagem de alerta para o cookie\n   * @public\n   */\n  setCookieAlertMessage(cookieData) {\n    return cookieData.alertMessage\n      ? `<span class=\"feedback warning ${\n          !cookieData.cookieSelected ? '' : 'd-none'\n        }\" role=\"alert\">\n          <i class=\"fas fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n          ${cookieData.alertMessage}\n        </span>`\n      : ''\n  }\n}\n","const jsonData = `[\n  {\n    \"lang\": \"pt-br\",\n    \"allOptOut\": true,\n    \"acceptButton\": \"Aceitar\",\n    \"optOutButton\": \"Definir Cookies\",\n    \"optInButton\": \"Ver Política de Cookies\",\n    \"infoText\": \"Minim pariatur amet laboris sint consectetur enim do voluptate\",\n    \"mainTitle\": \"Exercitation et proident\",\n    \"lastUpdate\": \"01/02/2021\",\n    \"entryText\": \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus aspernatur neque culpa nisi alias. Voluptatem dicta nihil magnam, cumque voluptatum animi distinctio molestias recusandae ipsam, sapiente unde error repellendus quibusdam?\",\n    \"selectAll\": false,\n    \"allAlertMessage\": \"Ao desativar essa opção, sua navegação ficará comprometida\",\n    \"closeLabel\": \"fechar\",\n    \"lastUpdateLabel\": \"Última atualização\",\n    \"cookieGroupsLabel\": \"Classes de cookies\",\n    \"selectAllLabel\": \"Selecionar tudo\",\n    \"unselectAllLabel\": \"Desselecionar tudo\",\n    \"selectAllGroupLabel\": \"Selecionar toda classe\",\n    \"unselectAllGroupLabel\": \"Desselecionar toda classe\",\n    \"onLabel\": \"Ligado\",\n    \"offLabel\": \"Desligado\",\n    \"alwaysActiveLabel\": \"Sempre ativo\",\n    \"cookieNameLabel\": \"Cookies\",\n    \"expiresLabel\": \"Vencimento\",\n    \"domainLabel\": \"Domínio\",\n    \"enterpriseLabel\": \"Empresa\",\n    \"purposeLabel\": \"Finalidade\",\n    \"descriptionLabel\": \"Descrição\",\n    \"cookieGroups\": [\n      {\n        \"groupId\": \"necessarios\",\n        \"groupName\": \"Estritamente necessários\",\n        \"groupOptOut\": false,\n        \"groupSelected\": false,\n        \"groupAlertMessage\": \"Alerta group 0\",\n        \"groupText\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum delectus fuga omnis, placeat harum id aliquam, blanditiis consectetur est cupiditate ipsam alias vitae veritatis beatae, aperiam totam assumenda. Sed, modi!\",\n        \"cookieList\": [\n          {\n            \"cookieId\": \"necessario-1\",\n            \"cookieOptOut\": false,\n            \"cookieSelected\": false,\n            \"alertMessage\": \"Alerta group 0 - cookie 0\",\n            \"cookieName\": \"optimizelyEndUserId\",\n            \"expires\": \"30 minutos\",\n            \"domain\": \"serpro.gov.br\",\n            \"entreprise\": \"Serpro\",\n            \"purpose\": \"Autorização\",\n            \"description\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Qui numquam inventore fuga consectetur minus accusantium sapiente, distinctio dolorum illum, doloremque rem deleniti recusandae quod rerum quidem amet? Unde, laudantium cum.\"\n          },\n          {\n            \"cookieId\": \"necessario-2\",\n            \"cookieOptOut\": false,\n            \"cookieSelected\": false,\n            \"alertMessage\": \"Alerta group 0 - cookie 1\",\n            \"cookieName\": \"optimizelyEndUserId\",\n            \"expires\": \"30 minutos\",\n            \"domain\": \"serpro.gov.br\",\n            \"entreprise\": \"Serpro\",\n            \"purpose\": \"Autorização\",\n            \"description\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Qui numquam inventore fuga consectetur minus accusantium sapiente, distinctio dolorum illum, doloremque rem deleniti recusandae quod rerum quidem amet? Unde, laudantium cum.\"\n          }\n        ]\n      },\n      {\n        \"groupId\": \"desempenho\",\n        \"groupName\": \"Desempenho, funcionamento, marketing e personalização\",\n        \"groupOptOut\": true,\n        \"groupSelected\": true,\n        \"groupAlertMessage\": \"Alerta group 1\",\n        \"groupText\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum delectus fuga omnis, placeat harum id aliquam, blanditiis consectetur est cupiditate ipsam alias vitae veritatis beatae, aperiam totam assumenda. Sed, modi!\",\n        \"cookieList\": [\n          {\n            \"cookieId\": \"desempenho-2\",\n            \"cookieOptOut\": true,\n            \"cookieSelected\": false,\n            \"alertMessage\": \"Alerta group 1 - cookie 1\",\n            \"cookieName\": \"optimizelyEndUserId\",\n            \"expires\": \"30 minutos\",\n            \"domain\": \"serpro.gov.br\",\n            \"entreprise\": \"Serpro\",\n            \"purpose\": \"Autorização\",\n            \"description\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Qui numquam inventore fuga consectetur minus accusantium sapiente, distinctio dolorum illum, doloremque rem deleniti recusandae quod rerum quidem amet? Unde, laudantium cum.\"\n          },\n          {\n            \"cookieId\": \"desempenho-2\",\n            \"cookieOptOut\": true,\n            \"cookieSelected\": false,\n            \"cookieName\": \"optimizelyEndUserId\",\n            \"expires\": \"30 minutos\",\n            \"domain\": \"serpro.gov.br\",\n            \"entreprise\": \"Serpro\",\n            \"purpose\": \"Autorização\",\n            \"description\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Qui numquam inventore fuga consectetur minus accusantium sapiente, distinctio dolorum illum, doloremque rem deleniti recusandae quod rerum quidem amet? Unde, laudantium cum.\"\n          }\n        ]\n      },\n      {\n        \"groupId\": \"experiencia\",\n        \"groupName\": \"Experiência do site\",\n        \"groupOptOut\": true,\n        \"groupSelected\": false,\n        \"groupAlertMessage\": \"Ao desativar essa opção, sua navegação ficará comprometida\",\n        \"groupText\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum delectus fuga omnis, placeat harum id aliquam, blanditiis consectetur est cupiditate ipsam alias vitae veritatis beatae, aperiam totam assumenda. Sed, modi!\",\n        \"cookieList\": [\n          {\n            \"cookieId\": \"experiencia-1\",\n            \"cookieOptOut\": false,\n            \"cookieSelected\": false,\n            \"alertMessage\": \"Alerta group 2 - cookie 0\",\n            \"cookieName\": \"optimizelyEndUserId\",\n            \"expires\": \"30 minutos\",\n            \"domain\": \"serpro.gov.br\",\n            \"entreprise\": \"Serpro\",\n            \"purpose\": \"Autorização\",\n            \"description\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Qui numquam inventore fuga consectetur minus accusantium sapiente, distinctio dolorum illum, doloremque rem deleniti recusandae quod rerum quidem amet? Unde, laudantium cum.\"\n          },\n          {\n            \"cookieId\": \"experiencia-2\",\n            \"cookieOptOut\": true,\n            \"cookieSelected\": false,\n            \"cookieName\": \"optimizelyEndUserId\",\n            \"expires\": \"30 minutos\",\n            \"domain\": \"serpro.gov.br\",\n            \"entreprise\": \"Serpro\",\n            \"purpose\": \"Autorização\",\n            \"description\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Qui numquam inventore fuga consectetur minus accusantium sapiente, distinctio dolorum illum, doloremque rem deleniti recusandae quod rerum quidem amet? Unde, laudantium cum.\"\n          }\n        ]\n      }\n    ],\n    \"noteTitle\": \"Aviso sobre cookies\",\n    \"noteList\": [\n      {\n        \"question\": \"O que são cookies?\",\n        \"answer\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam eius distinctio rerum ad, maxime alias vel minima, asperiores sequi eveniet non optio officiis quaerat reiciendis quae odio explicabo ut debitis?\"\n      },\n      {\n        \"question\": \"Durabilidade?\",\n        \"answer\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam eius distinctio rerum ad, maxime alias vel minima, asperiores sequi eveniet non optio officiis quaerat reiciendis quae odio explicabo ut debitis?\"\n      },\n      {\n        \"question\": \"Proveniência?\",\n        \"answer\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam eius distinctio rerum ad, maxime alias vel minima, asperiores sequi eveniet non optio officiis quaerat reiciendis quae odio explicabo ut debitis?\"\n      },\n      {\n        \"question\": \"Finalidade?\",\n        \"answer\": \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam eius distinctio rerum ad, maxime alias vel minima, asperiores sequi eveniet non optio officiis quaerat reiciendis quae odio explicabo ut debitis?\"\n      }\n    ],\n    \"links\": [\n      {\n        \"name\": \"Declaração de Conformidade com os Princípios de Proteção de Dados\",\n        \"url\": \"#\"\n      }\n    ]\n  }\n]`\n\nexport default jsonData\n","/** Constantes representando seletores para o cookiebar */\nexport const POLITICS_BUTTON = '.actions .br-button.secondary'\nexport const ACCEPT_BUTTON = '.actions .br-button.primary'\nexport const ACTION_BUTTONS = `${POLITICS_BUTTON}, ${ACCEPT_BUTTON}`\nexport const CLOSE_BUTTON = '.br-modal-header .br-button.close'\nexport const CONTAINER_FLUID = '.br-modal > .br-card .container-fluid'\nexport const WRAPPER = '.br-modal > .br-card .wrapper'\nexport const MODAL_FOOTER = '.br-modal > .br-card .br-modal-footer'\nexport const GROUP_INFO = '.main-content .group-info'\nexport const COOKIE_CARD = '.main-content .cookie-info .br-card'\nexport const BROAD_ALERT =\n  '.header .row:nth-child(1) div:nth-child(3) .feedback'\nexport const GROUP_ALERT = '.row:nth-child(1) div:nth-child(4) .feedback'\nexport const COOKIE_ALERT = '.row:nth-child(1) div:nth-child(2) .feedback'\nexport const BR_CHECKBOX = '.br-checkbox input[type=\"checkbox\"]'\nexport const BR_SWITCH = '.br-switch input[type=\"checkbox\"]'\nexport const CHECKBOX = `${BR_CHECKBOX}, ${BR_SWITCH}`\nexport const PARENT_CHECKBOX = '.main-content .br-checkbox input[data-parent]'\nexport const COOKIES_CHECKED = '.main-content .br-item .cookies-checked'\nexport const GROUP_BUTTON = '.main-content .br-item .br-button'\nexport const GROUP_NAME = '.main-content .br-item .group-name'\nexport const GROUP_SIZE = '.main-content .br-item .group-size'\nexport const BUTTON_ICON = '.br-button i.fas'\n","import Checkgroup from '../../partial/js/behavior/checkgroup'\nimport { CookiebarData } from './cookiebar-data'\nimport { CookiebarTemplates } from './cookiebar-templates'\nimport jsonData from './jsonData'\nimport * as selectors from './selectors'\n\n/** Classe para instanciar um objeto cookiebar */\nexport default class BRCookiebar {\n  /**\n   * Instancia um objeto cookiebar\n   * @param {object} objeto - Objeto para destructuring com as propriedades abaixo\n   * @property {string} name - Nome do componente em minúsculo (br-cookiebar)\n   * @property {object} component - Objeto referenciando a raiz do componente DOM\n   * @property {string} json - JSON de entrada com dados do cookiebar\n   * @property {string} lang - Lingua para filtrar o JSON de entrada\n   * @property {string} mode - Mode de renderização do cookibar ('default' | 'open')\n   * @property {function} callback - Chamada no aceite do cookiebar com o JSON de saída como argumento\n   */\n  constructor({ name, component, json, lang, mode = 'default', callback }) {\n    this.name = name\n    this.component = component\n    this.data = new CookiebarData(json, lang)\n    this.templates = new CookiebarTemplates(this.data)\n    this.mode = mode\n    this.callback = callback\n    this._setUp()\n  }\n\n  /**\n   * Controla a instanciação do cookiebar\n   * @private\n   */\n  _setUp() {\n    this._buildCookiebar()\n    this._setBehavior()\n    this._showCookiebar()\n  }\n\n  /**\n   * Controla a construção do cookiebar com o uso de templates\n   * @private\n   */\n  _buildCookiebar() {\n    this.component.innerHTML = this.templates.setGlobalContentArea()\n  }\n\n  /**\n   * Controla o comportamento dos itens interativos do cookiebar\n   * @private\n   */\n  _setBehavior() {\n    this._setAcceptButtonBehavior()\n    this._setPoliticsButtonBehavior()\n    this._setCloseButtonBehavior()\n    this._setToggleGroupBehavior()\n    this._setCheckboxBehavior()\n    this._setSelectionBehavior()\n    this._setWindowResizeBehavior()\n  }\n\n  /**\n   * Trata o comportamento do botão de aceite do cookiebar\n   * @private\n   */\n  _setAcceptButtonBehavior() {\n    const acceptButton = this.component.querySelector(selectors.ACCEPT_BUTTON)\n\n    // Trata o aceite do cookiebar\n    acceptButton.addEventListener('click', () => {\n      this._hideCookiebar()\n      // this._resetCookiebar()\n      document.body.style.overflowY = 'auto'\n      this.callback(this._setOutputJSON())\n    })\n\n    // (Navegação por teclado) Mantém o foco no cookiebar quando ele está aberto\n    acceptButton.addEventListener('keydown', (event) => {\n      if (event.key === 'Tab') {\n        if (!this.component.classList.contains('default')) {\n          this.component.focus()\n        }\n      }\n    })\n\n    this._setActionButtonResponsive(acceptButton)\n  }\n\n  /**\n   * Trata o comportamento do botão de políticas/definições de cookies\n   * @private\n   */\n  _setPoliticsButtonBehavior() {\n    this.component\n      .querySelectorAll(selectors.POLITICS_BUTTON)\n      .forEach((politicsButton) => {\n        // Expande o cookiebar\n        politicsButton.addEventListener('click', () => {\n          politicsButton.classList.add('d-none')\n          this.component.classList.remove('default')\n          this.component.focus()\n          document.body.style.overflowY = 'hidden'\n          this._setOpenView()\n        })\n\n        this._setActionButtonResponsive(politicsButton)\n      })\n  }\n\n  /**\n   * Trata o comportamento do botão de fechar do cookiebar no modo open\n   * @orivate\n   */\n  _setCloseButtonBehavior() {\n    this.component\n      .querySelectorAll(selectors.CLOSE_BUTTON)\n      .forEach((closeButton) => {\n        // encolhe o cookiebar (volta ao cookiebar default)\n        closeButton.addEventListener('click', () => {\n          this.component.classList.add('default')\n          switch (this.mode) {\n            case 'open':\n              this._hideCookiebar()\n            // this._resetCookiebar()\n            default:\n          }\n\n          this.component\n            .querySelector(selectors.POLITICS_BUTTON)\n            .classList.remove('d-none')\n          document.body.style.overflowY = 'auto'\n\n          this._setDefaultView()\n        })\n      })\n  }\n\n  /**\n   * Trata o redimensionamento da tela\n   * @private\n   */\n  _setWindowResizeBehavior() {\n    window.addEventListener('resize', () => {\n      if (!this.component.classList.contains('default')) {\n        this._setOpenView()\n      }\n      this.component\n        .querySelectorAll(selectors.ACTION_BUTTONS)\n        .forEach((button) => {\n          this._setActionButtonResponsive(button)\n        })\n    })\n  }\n\n  /**\n   * Trata a responsividade de um botão de ação baseado na largura da tela\n   * @param {object} button - Elemento DOM que representa um botão de ação\n   * @private\n   */\n  _setActionButtonResponsive(button) {\n    if (window.matchMedia('(max-width: 574px)').matches) {\n      button.classList.add('block')\n    }\n    if (window.matchMedia('(min-width: 575px)').matches) {\n      button.classList.remove('block')\n    }\n  }\n\n  /**\n   * Trata a abertura/fechamento do grupo de cookies\n   * @private\n   */\n  _setToggleGroupBehavior() {\n    this.component\n      .querySelectorAll(\n        `${`${selectors.GROUP_BUTTON}, ${selectors.GROUP_NAME}, ${selectors.COOKIES_CHECKED}, ${selectors.GROUP_SIZE}`}`\n      )\n      .forEach((clickable) => {\n        clickable.addEventListener(\n          'click',\n          this._handleToggleGroupClick.bind(this)\n        )\n      })\n  }\n\n  /**\n   * Handler que trata do evento de click no grupo\n   * @param {object} event - Objeto Event\n   * @private\n   */\n  _handleToggleGroupClick(event) {\n    const element = this._getParentElementByClass(\n      event.currentTarget,\n      'br-item'\n    )\n    if (element.classList.contains('open')) {\n      element.classList.remove('open')\n      element.nextElementSibling\n        .querySelectorAll(selectors.BR_SWITCH)\n        .forEach((check) => {\n          check.setAttribute('tabindex', -1)\n        })\n      this._setGroupAttributes(element, 'Expandir')\n      this._toggleIcon(element, 'fa-angle-up', 'fa-angle-down')\n    } else {\n      element.classList.add('open')\n      element.nextElementSibling\n        .querySelectorAll(selectors.BR_SWITCH)\n        .forEach((check) => {\n          check.setAttribute('tabindex', 0)\n        })\n      this._setGroupAttributes(element, 'Retrair')\n      this._toggleIcon(element, 'fa-angle-down', 'fa-angle-up')\n      this._scrollUp(element)\n    }\n  }\n\n  /**\n   * Trata do comportamento do grupo de checkboxes do cookiebar\n   * @private\n   */\n  _setCheckboxBehavior() {\n    this.component\n      .querySelectorAll(selectors.PARENT_CHECKBOX)\n      .forEach((trigger) => {\n        this.checkgroupBehavior = new Checkgroup(trigger)\n        this.checkgroupBehavior.setBehavior()\n      })\n  }\n\n  /**\n   * Trata da seleção dos checkboxes\n   * @private\n   */\n  _setSelectionBehavior() {\n    this.component.querySelectorAll(selectors.CHECKBOX).forEach((checkbox) => {\n      checkbox.addEventListener('change', this._controlSelection.bind(this))\n    })\n  }\n\n  /**\n   * Handler para o evento change na seleção dos checkboxes\n   * @param {object} event - Objeto eventDOM\n   * @private\n   */\n  _controlSelection(event) {\n    const segment = event.currentTarget.id.split('-')\n    switch (segment[1]) {\n      case 'all':\n        this._setCheckAllBehavior(event.currentTarget)\n        break\n      case 'group':\n        this._setCheckgroupBehavior(event.currentTarget, segment[2])\n        break\n      case 'cookie':\n        this._setCheckCookieBehavior(\n          event.currentTarget,\n          segment[2],\n          segment[3]\n        )\n        break\n      default:\n    }\n  }\n\n  /**\n   * Trata a seleção do checkbox geral\n   * @param {object} checkbox - Elemento DOM que represeta um checkbox geral\n   * @private\n   */\n  _setCheckAllBehavior(checkbox) {\n    this.data.selectAll = checkbox.checked\n    this.data.allIndeterminated = checkbox.hasAttribute('indeterminate')\n      ? true\n      : false\n    this._displayBroadAlertMessage()\n  }\n\n  /**\n   * Trata da seleção do checkbox de grupo\n   * @param {object} checkbox - Elemento DOM que represta um checkbox de grupo\n   * @param {number} groupIndex - Índice do grupo\n   * @private\n   */\n  _setCheckgroupBehavior(checkbox, groupIndex) {\n    this.data.cookieGroups[groupIndex].groupSelected = checkbox.checked\n    this.data.cookieGroups[groupIndex].groupIndeterminated =\n      checkbox.hasAttribute('indeterminate') ? true : false\n    this.data.cookieGroups[groupIndex].cookieList.forEach(\n      (cookieData, cookieIndex) => {\n        if (!cookieData.cookieOptOut) {\n          cookieData.cookieSelected = checkbox.checked\n          this._displayCookieAlertMessage(groupIndex, cookieIndex)\n        }\n      }\n    )\n    this._displayGroupAlertMessage(groupIndex)\n  }\n\n  /**\n   * Trata da seleção do checkbox de cookie\n   * @param {object} checkbox - Elemento DOM que represeta um checkbox de cookie\n   * @param {number} groupIndex - Índice do grupo\n   * @param {number} cookieIndex - Índicd do cookie dentro do grupo\n   * @private\n   */\n  _setCheckCookieBehavior(checkbox, groupIndex, cookieIndex) {\n    this.data.cookieGroups[groupIndex].cookieList[cookieIndex].cookieSelected =\n      checkbox.checked\n    this._displayCookieAlertMessage(groupIndex, cookieIndex)\n  }\n\n  /**\n   * Controla a apresentação da mensagem geral\n   * @private\n   */\n  _displayBroadAlertMessage() {\n    this.component\n      .querySelectorAll(selectors.BROAD_ALERT)\n      .forEach((broadAlert) => {\n        if (\n          this.data.allAlertMessage &&\n          (!this.data.selectAll || this.data.allIndeterminated)\n        ) {\n          broadAlert.classList.remove('d-none')\n        } else {\n          broadAlert.classList.add('d-none')\n        }\n      })\n  }\n\n  /**\n   * Controla a apresentação da mensagem de grupo\n   * @param {number} groupIndex - Índice do grupo\n   * @private\n   */\n  _displayGroupAlertMessage(groupIndex) {\n    const group = this.component.querySelectorAll(selectors.GROUP_INFO)[\n      groupIndex\n    ]\n    group.querySelectorAll(selectors.GROUP_ALERT).forEach((groupAlert) => {\n      if (\n        this.data.cookieGroups[groupIndex].groupAlertMessage &&\n        (!this.data.cookieGroups[groupIndex].groupSelected ||\n          this.data.cookieGroups[groupIndex].groupIndeterminated)\n      ) {\n        groupAlert.classList.remove('d-none')\n      } else {\n        groupAlert.classList.add('d-none')\n      }\n    })\n  }\n\n  /**\n   * Controla a apresentação da mensagem de cookie\n   * @param {number} groupIndex - Índice do grupo\n   * @param {number} cookieIndex - Índice do cookie dentro do grupo\n   */\n  _displayCookieAlertMessage(groupIndex, cookieIndex) {\n    const group = this.component.querySelectorAll(selectors.GROUP_INFO)[\n      groupIndex\n    ]\n    const cookie = group.nextElementSibling.querySelectorAll(\n      selectors.COOKIE_CARD\n    )[cookieIndex]\n    cookie.querySelectorAll(selectors.COOKIE_ALERT).forEach((cookieAlert) => {\n      if (\n        this.data.cookieGroups[groupIndex].cookieList[cookieIndex]\n          .alertMessage &&\n        !this.data.cookieGroups[groupIndex].cookieList[cookieIndex]\n          .cookieSelected\n      ) {\n        cookieAlert.classList.remove('d-none')\n      } else {\n        cookieAlert.classList.add('d-none')\n      }\n    })\n  }\n\n  /**\n   * Busca um elemento DOM pai com uma determinada classe\n   * @param {object} element - Elemento DOM\n   * @param {string} className - Nome de uma classe para busca\n   * @returns {object} - Elemento DOM representando que contém uma determinada classe\n   * @private\n   */\n  _getParentElementByClass(element, className) {\n    while (!element.classList.contains(className)) {\n      element = element.parentNode\n    }\n    return element\n  }\n\n  /**\n   * Troca a classe do icone\n   * @param {object} element - Elemento DOM referente ao icone\n   * @param {string} oldIcon - Classe do icone que será retirada\n   * @param {string} newIcon - Classe do icone que será incluido\n   * @private\n   */\n  _toggleIcon(element, oldIcon, newIcon) {\n    element.querySelectorAll(selectors.BUTTON_ICON).forEach((icon) => {\n      icon.classList.remove(oldIcon)\n      icon.classList.add(newIcon)\n    })\n  }\n\n  /**\n   * Trata a label do atributo title e aria-label\n   * @param {object} element - Elemento DOM referente ao grupo\n   * @param {string} label - Label para o title e aria-label\n   * @private\n   */\n  _setGroupAttributes(element, label) {\n    element\n      .querySelectorAll(\n        `${`${selectors.GROUP_BUTTON}, ${selectors.GROUP_NAME}, ${selectors.COOKIES_CHECKED}, ${selectors.GROUP_SIZE}`}`\n      )\n      .forEach((item) => {\n        item.setAttribute('title', label)\n        item.setAttribute('aria-label', label)\n      })\n  }\n\n  /**\n   * Trata a rolagem da tela do grupo de cookies aberto\n   * @param {object} element - Elemento DOM que representa a grupo de cookies\n   * @private\n   */\n  _scrollUp(element) {\n    setTimeout(() => {\n      this.component.querySelectorAll(selectors.WRAPPER).forEach(() => {\n        setTimeout(() => {\n          element.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start',\n          })\n        }, 150)\n      }, 5000)\n    })\n  }\n\n  /**\n   * Mostra o cookiebar na tela com foco e no modo escolhido\n   * @private\n   */\n  _showCookiebar() {\n    this.component.classList.remove('d-none')\n    this.component.focus()\n    switch (this.mode) {\n      case 'open':\n        this.component.classList.remove('default')\n        this.component\n          .querySelectorAll(selectors.POLITICS_BUTTON)\n          .forEach((button) => {\n            button.classList.add('d-none')\n          })\n        document.body.style.overflowY = 'hidden'\n        this._setOpenView()\n      default:\n    }\n  }\n\n  /**\n   * Oculta o cookiebar na tela\n   * @private\n   */\n  _hideCookiebar() {\n    this.component.classList.add('d-none')\n  }\n\n  /**\n   * Configura a altura da parte rolável do cookiebar de acordo com a altura da janela\n   * @private\n   */\n  _setOpenView() {\n    const wrapper = this.component.querySelector(selectors.WRAPPER)\n    const containerFluid = this.component.querySelector(\n      selectors.CONTAINER_FLUID\n    )\n    const modalFooter = this.component.querySelector(selectors.MODAL_FOOTER)\n    const padding = window\n      .getComputedStyle(containerFluid, null)\n      .getPropertyValue('padding-top')\n      .match(/\\d+/)\n    const height = `${\n      window.innerHeight - padding * 2 - modalFooter.offsetHeight\n    }px`\n    wrapper.style.height = height\n  }\n\n  /**\n   * Configura a altura do cookiebar no modo default\n   * @private\n   */\n  _setDefaultView() {\n    this.component.querySelector(selectors.WRAPPER).removeAttribute('style')\n  }\n\n  /**\n   * Cria o JSON de saída do cookiebar\n   * @returns {string} - JSON de saída do cookiebar\n   * @private\n   */\n  _setOutputJSON() {\n    this.output = {}\n    this.output.selectAll = this.data.allIndeterminated\n      ? 'indeterminated'\n      : this.data.selectAll\n    this.output.cookieGroups = []\n    this.data.cookieGroups.forEach((groupData) => {\n      const cookies = []\n      groupData.cookieList.forEach((cookieData) => {\n        cookies.push({\n          cookieId: cookieData.cookieId,\n          cookieSelected: cookieData.cookieSelected,\n        })\n      })\n      this.output.cookieGroups.push({\n        groupId: groupData.groupId,\n        groupSelected: groupData.groupIndeterminated\n          ? 'indeterminated'\n          : groupData.groupSelected,\n        cookieList: cookies,\n      })\n    })\n    return JSON.stringify(this.output)\n  }\n\n  static createCookiebar(json, callback) {\n    const brCookiebar = document.createElement('div')\n    brCookiebar.classList.add('br-cookiebar', 'default', 'd-none')\n    brCookiebar.setAttribute('tabindex', 1)\n\n    document.body.appendChild(brCookiebar)\n\n    const params = {\n      name: 'br-cookiebar',\n      component: brCookiebar,\n      lang: 'pt-br',\n      mode: 'default',\n      json,\n      callback,\n    }\n\n    return new BRCookiebar(params)\n  }\n}\n\n/**\n * Função callback de exemplo\n * @param {string} json - JSON com os dados de resposta do cookiebar\n */\nfunction showOutput(json) {\n  // console.log(JSON.parse(json))\n  // console.log(json)\n}\n\n/** Exemplo de instanciação de um objeto cookiebar */\nconst cookiebarList = []\nfor (const brCookiebar of window.document.querySelectorAll('.br-cookiebar')) {\n  const params = {\n    name: 'br-cookiebar',\n    component: brCookiebar,\n    lang: 'pt-br',\n    mode: 'default',\n    json: jsonData,\n    callback: showOutput,\n  }\n  // CookiebarData.loadJSON('./data.json', (response) => {\n  //   return (params.json = response)\n  // })\n  cookiebarList.push(new BRCookiebar(params))\n}\n\n/** Exemplo de instanciação do cookibar apenas sem necessidade de um HTML base */\n// BRCookiebar.createCookiebar(jsonData, showOutput)\n","export default __webpack_public_path__ + \"components/cookiebar/examples.html\";"],"names":["Checkgroup","constructor","trigger","this","parent","children","_setChildren","dataset","checkedLabel","nextElementSibling","innerText","uncheckedLabel","setBehavior","_setParentBehavior","_setChildBehavior","tag","document","querySelectorAll","addEventListener","_handleParentClick","bind","_handleParentChange","hasAttribute","_setIndeterminateStateOnClick","_setParentCheckboxLabel","removeAttribute","checked","_changeChildState","forEach","child","dispatchEvent","Event","_handleChildClick","_handleChildChange","event","currentTarget","setAttribute","_setIndeterminateStateOnChildChange","_isAllChildrenChecked","_isAllChildrenUnchecked","allChildChecked","allChildUnchecked","innerHTML","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","CookiebarData","json","lang","PRIORITY_LEVELS","assign","_filterByLang","_setDataCoherenceByPriority","list","JSON","parse","data","filter","element","selectAll","allOptOut","cookieGroups","groupData","groupOptOut","groupSelected","cookieList","cookieData","cookieOptOut","cookieSelected","_setIndeterminateState","_setGroupIndeterminateState","_setAllIndeterminateState","allChecked","allUnchecked","groupIndeterminated","indeterminated","allIndeterminated","getCookiesCheckedAmount","count","getCookiesAmount","static","path","callback","rawFile","XMLHttpRequest","overrideMimeType","open","onreadystatechange","readyState","status","responseText","send","CookiebarLabels","setLastUpdateLabel","lastUpdateLabel","setCookieGroupsLabel","cookieGroupsLabel","setUnselectAllLabel","unselectAllLabel","setSelectAllLabel","selectAllLabel","setCheckAllLabel","setUnselectAllGroupLabel","unselectAllGroupLabel","setSelectAllGroupLabel","selectAllGroupLabel","setCheckGroupLabel","setAlwaysActiveLabel","alwaysActiveLabel","setCheckCookieEnabledLabel","onLabel","setCheckCookieDisabledLabel","offLabel","setCookieNameLabel","cookieNameLabel","setCookieExpiresLabel","expiresLabel","setCookieDomainLabel","domainLabel","setCookieEnterpriseLabel","enterpriseLabel","setCookiePurposeLabel","purposeLabel","setCookieDescriptionLabel","descriptionLabel","setPoliticsButtonLabel","optOutButton","optInButton","setAcceptButtonLabel","acceptButton","CookiebarTemplates","labels","setGlobalContentArea","_setIntroductoryContentArea","_setInfoText","_setMainContentArea","_setComplementaryContentArea","_setActionArea","_setMainTitle","_setLastUpdate","_setEntryText","_setMainContentHeader","_setCookieGroups","noteList","_setNotifications","_setPoliticsButton","_setAcceptButton","mainTitle","_setCloseButton","lastUpdate","entryText","infoText","_setCheckAll","setAllAlertMessage","groupTemplates","groupIndex","_setGroupName","_setCheckGroup","_setGroupButton","setGroupAlertMessage","_setGroupDescription","_setCookieInfo","groupName","groupText","cookieTemplates","cookieIndex","_setCheckCookie","setCookieAlertMessage","cookieName","expires","domain","entreprise","purpose","description","noteTitle","_setNotificationInfo","notificationTemplates","notificationData","question","answer","_setLinkInfo","linkTemplates","links","linkData","url","name","closeLabel","allAlertMessage","groupAlertMessage","alertMessage","POLITICS_BUTTON","ACCEPT_BUTTON","ACTION_BUTTONS","WRAPPER","GROUP_INFO","BR_SWITCH","CHECKBOX","COOKIES_CHECKED","GROUP_BUTTON","GROUP_NAME","GROUP_SIZE","BRCookiebar","component","mode","templates","_setUp","_buildCookiebar","_setBehavior","_showCookiebar","_setAcceptButtonBehavior","_setPoliticsButtonBehavior","_setCloseButtonBehavior","_setToggleGroupBehavior","_setCheckboxBehavior","_setSelectionBehavior","_setWindowResizeBehavior","querySelector","_hideCookiebar","body","style","overflowY","_setOutputJSON","classList","contains","focus","_setActionButtonResponsive","politicsButton","add","remove","_setOpenView","closeButton","_setDefaultView","button","matchMedia","matches","clickable","_handleToggleGroupClick","_getParentElementByClass","check","_setGroupAttributes","_toggleIcon","_scrollUp","checkgroupBehavior","checkbox","_controlSelection","segment","id","split","_setCheckAllBehavior","_setCheckgroupBehavior","_setCheckCookieBehavior","_displayBroadAlertMessage","_displayCookieAlertMessage","_displayGroupAlertMessage","broadAlert","groupAlert","cookieAlert","className","parentNode","oldIcon","newIcon","icon","label","item","setTimeout","scrollIntoView","behavior","block","wrapper","containerFluid","modalFooter","padding","getComputedStyle","getPropertyValue","match","height","innerHeight","offsetHeight","output","cookies","push","cookieId","groupId","stringify","brCookiebar","createElement","appendChild","showOutput","cookiebarList","params"],"sourceRoot":""}