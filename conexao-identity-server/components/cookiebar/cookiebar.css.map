{"version":3,"file":"components/cookiebar/cookiebar.css","mappings":"AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AADF;ACQE;EDHM;IACE;EAFR;AACF;ACYE;ED9BF;IAyBI;EAHF;EAOM;IACE;EALR;EAQM;IACE;IACA;EANR;EAaM;IACE;EAXR;EAaQ;IACE;EAXV;EAeM;IACE;EAbR;EAkBE;IACE;EAhBJ;EAoBI;IACE;EAlBN;EAsBM;IACE;EApBR;EAyBE;;IAEE;EAvBJ;AACF;AA0BE;EACE;AAxBJ;AA0BI;EACE;AAxBN;AA2BI;EACE;AAzBN;AA4BI;EACE;AA1BN;AA6BI;EACE;AA3BN;AA+BM;EACE;AA7BR;AAgCM;EACE;AA9BR;AAkCI;EACE;AAhCN;AAmCI;EACE;AAjCN;AAwCQ;EACE;AAtCV;AA0CU;EACE;EACA;AAxCZ;AA4CY;EACE;AA1Cd;AAkDE;EACE;EACA;AAhDJ;AAmDE;EACE;AAjDJ;AAoDE;EACE;EACA;EACA;EACA;AAlDJ;AAqDE;EACE;EACA;AAnDJ;AAuDI;EACE;EACA;EACA;EACA;EACA;AArDN;AAwDI;EACE;EACA;EACA;AAtDN;AAyDI;EACE;EACA;AAvDN;AAyDM;EACE;EACA;AAvDR;AA4DE;EACE;EACA;AA1DJ;AA4DI;EACE;AA1DN;AA6DI;EACE;EACA;EACA;AA3DN;AA8DI;;EAEE;AA5DN;AAgEM;EACE;AA9DR;AAiEU;EACE;AA/DZ;AAuEI;EACE;AArEN;AAyEE;;;EAGE;EACA;AAvEJ;AA4EM;EACE;AA1ER;AA8EI;EACE;AA5EN;AA+EI;EACE;AA7EN;AAgFI;EACE;EACA;AA9EN;AAiFQ;EACE;AA/EV;AAoFQ;EACE;AAlFV;AAuFI;EACE;AArFN;AA2FI;;EACE;EACA;EACA;EACA;AAxFN;AA2FI;;EACE;EACA;AAxFN;AA4FE;EACE;EACA;AA1FJ;AA8FI;EACE;AA5FN;AA+FI;EACE;AA7FN;AAkGI;EACE;AAhGN;AAoGE;EACE;EACA;EACA;EACA;AAlGJ;AAqGE;EACE;AAnGJ;AAqGI;EACE;AAnGN;AAqGM;EACE;EACA;AAnGR;AAwGE;EACE;AAtGJ,C","sources":["webpack://@govbr/dsgov/./src/components/cookiebar/_cookiebar.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_grid.scss"],"sourcesContent":["@import \"../../partial/scss/base\";\n\n.#{$prefix}cookiebar {\n  --cookiebar-shadow: var(--surface-shadow-lg-up);\n  --cookiebar-layer: var(--z-index-layer-4);\n  bottom: 0;\n  box-shadow: var(--cookiebar-shadow);\n  color: v(color-secondary-08);\n  cursor: default;\n  font-family: inherit;\n  font-size: v(font-size-scale-up-01);\n  left: 0;\n  outline: none;\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: var(--cookiebar-layer);\n  @include media-breakpoint-up(sm) {\n    .actions {\n      .br-button {\n        &.secondary {\n          margin-right: v(spacing-scale-5x);\n        }\n      }\n    }\n  }\n  @include media-breakpoint-down(xs) {\n    font-size: v(font-size-scale-down-01);\n\n    .actions {\n      .br-button {\n        &.primary {\n          margin-bottom: v(spacing-scale-2xh);\n        }\n\n        &.secondary {\n          margin-bottom: v(spacing-scale-2xh);\n          margin-right: 0;\n        }\n      }\n    }\n\n    .br-modal-header {\n      &.entry-content {\n        .br-modal-title {\n          margin-bottom: 0;\n\n          p {\n            font-size: v(font-size-scale-up-02);\n          }\n        }\n\n        .last-update {\n          font-size: v(font-size-scale-down-01);\n        }\n      }\n    }\n\n    .group-description {\n      font-size: v(font-size-scale-down-01);\n    }\n\n    .br-switch {\n      label {\n        font-size: v(font-size-scale-down-01);\n      }\n\n      .switch-data {\n        &::before {\n          font-size: v(font-size-scale-down-01);\n        }\n      }\n    }\n\n    .group-name,\n    .group-size {\n      font-size: v(font-size-scale-down-01);\n    }\n  }\n\n  &.default {\n    top: unset;\n\n    .entry-content {\n      display: none;\n    }\n\n    .info-text {\n      display: block;\n    }\n\n    .main-content {\n      display: none;\n    }\n\n    .complementary-content {\n      display: none;\n    }\n\n    .br-modal {\n      > .br-card {\n        --card-shadow: var(--surface-offset-none);\n      }\n\n      .wrapper {\n        overflow-y: unset;\n      }\n    }\n\n    .actions {\n      border-top: none;\n    }\n\n    .container-fluid.p-2xh {\n      padding-bottom: var(--spacing-scale-3x) !important;\n    }\n  }\n\n  .br-item {\n    .br-checkbox {\n      input {\n        + label {\n          padding-left: calc(var(--checkbox-padding) + var(--checkbox-size));\n        }\n\n        &:checked {\n          + label::after {\n            left: 8px;\n            top: 4px;\n          }\n\n          &[indeterminate] {\n            + label::after {\n              top: 2px;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .row {\n    float: none;\n    width: auto;\n  }\n\n  .entry-text {\n    margin-bottom: 0;\n  }\n\n  .wrapper {\n    display: flex;\n    flex-direction: column;\n    overflow-y: scroll;\n    padding-top: 6px !important;\n  }\n\n  .info-text {\n    display: none;\n    line-height: v(font-lineheight-medium);\n  }\n\n  .br-modal-header {\n    .br-modal-title {\n      font-size: v(font-size-scale-up-06);\n      margin-bottom: 0;\n      margin-right: 0;\n      max-height: unset;\n      width: auto;\n    }\n\n    .close {\n      margin-top: v(spacing-scale-base);\n      opacity: 1;\n      position: static;\n    }\n\n    .last-update {\n      font-size: v(font-size-scale-base);\n      font-weight: v(font-weight-semi-bold);\n\n      span {\n        display: inline-block;\n        margin-left: v(spacing-scale-half);\n      }\n    }\n  }\n\n  .br-modal-body {\n    flex: 1;\n    margin: 0;\n\n    &:focus {\n      outline: none;\n    }\n\n    .br-list .br-list {\n      max-height: 0;\n      overflow: hidden;\n      transition: all 400ms ease-in-out;\n    }\n\n    .br-list .br-item.open + .br-list,\n    .br-list .br-item.open .br-list {\n      max-height: 200em;\n    }\n\n    .br-list {\n      .header {\n        display: block;\n\n        .row {\n          div:nth-child(2) {\n            flex: 0 0 185px;\n          }\n        }\n      }\n    }\n  }\n\n  .br-modal-footer {\n    &.actions {\n      padding-top: var(--spacing-scale-2xh);\n    }\n  }\n\n  .group-name,\n  .cookies-checked,\n  .group-size {\n    color: var(--color-primary-default);\n    cursor: pointer;\n  }\n\n  .group-info {\n    .row {\n      div:nth-child(2) {\n        flex: 0 0 225px;\n      }\n    }\n\n    .fa {\n      font-weight: 900;\n    }\n\n    .group-size {\n      display: inline-block;\n    }\n\n    &.selected {\n      background-color: v(color-secondary-01);\n      color: v(color-secondary-08);\n\n      .br-checkbox {\n        input + label {\n          color: v(color-secondary-08) !important;\n        }\n      }\n\n      .feedback {\n        &.warning {\n          color: v(color-secondary-08);\n        }\n      }\n    }\n\n    .br-button {\n      color: v(color-primary-default);\n    }\n  }\n\n  .group-info,\n  .cookie-info {\n    .br-switch {\n      margin-bottom: var(--spacing-scale-2x);\n      margin-top: var(--spacing-scale-2x);\n      padding: v(spacing-scale-half);\n      width: 120px;\n    }\n\n    .fixed-width {\n      padding-left: v(spacing-scale-base);\n      width: 100px;\n    }\n  }\n\n  .always-active {\n    color: v(color-highlight);\n    font-weight: v(font-weight-semi-bold);\n  }\n\n  .cookie-info {\n    .br-card {\n      margin-bottom: var(--card-margin);\n    }\n\n    .cookie-term {\n      font-weight: v(font-weight-semi-bold);\n    }\n  }\n\n  .notes {\n    p:first-child {\n      font-weight: v(font-weight-semi-bold);\n    }\n  }\n\n  .actions {\n    border-top: 1px solid v(color-secondary-05);\n    padding-left: v(spacing-scale-3x);\n    padding-right: v(spacing-scale-2xh);\n    padding-top: v(spacing-scale-3x);\n  }\n\n  .complementary-content {\n    padding: v(spacing-scale-base) 0;\n\n    a {\n      color: v(color-primary-default);\n\n      &:hover {\n        font-weight: v(font-weight-bold);\n        text-decoration: underline;\n      }\n    }\n  }\n\n  [class^=\"container\"] {\n    --grid-margin: 0;\n  }\n}\n","// Dependência para calcular divisão\n@use \"sass:math\";\n\n// Função para retornar próximo breakpoint\n@function next-breakpoint($breakpoint) {\n  @if $breakpoint == \"xs\" {\n    @return \"sm\";\n  }\n  @if $breakpoint == \"sm\" {\n    @return \"md\";\n  }\n  @if $breakpoint == \"md\" {\n    @return \"lg\";\n  }\n  @if $breakpoint == \"lg\" {\n    @return \"xl\";\n  }\n}\n\n/// Aplica estilos no breakpoint informado para cima\n/// Modo de uso: @include media-breakpoint-up(sm) {}\n@mixin media-breakpoint-up($breakpoint) {\n  $size: map-get($breakpoints, $breakpoint);\n  @media (min-width: $size) {\n    @content;\n  }\n}\n\n/// Aplica estilos no breakpoint informado para baixo\n/// Modo de uso: @include media-breakpoint-down(sm) {}\n@mixin media-breakpoint-down($breakpoint) {\n  $value: map-get($breakpoints, next-breakpoint($breakpoint)) - 1px;\n  @media (max-width: $value) {\n    @content;\n  }\n}\n\n/// Cria as colunas de acordo com número de colunas informado.\n/// As colunas terão breakpoint caso seja ele seja informado.\n/// Modo de uso: @include columns(4); ou @include columns(8, \"sm\");\n@mixin columns($columns, $breakpoint: null) {\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")} {\n    flex: 1 0 0%;\n    min-width: math.div(1, $columns) * 100%;\n  }\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  @for $i from 1 through $columns {\n    .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-#{$i} {\n      flex-basis: math.div($i, $columns) * 100%;\n      max-width: math.div($i, $columns) * 100%;\n    }\n  }\n}\n\n/// Cria os containers responsivos para a Grid.\n/// A versão fluida sempre terá largura de 100%.\n/// As versões fixas recebem limite de largura de acordo com o breakpoint.\n/// Modo de uso: @include grid-breakpoint(\"576px\", \"sm\", \"tablet\");\n@mixin grid-breakpoint($var, $breakpoint, $name) {\n  @media (min-width: $var) {\n    .container,\n    .container-sm,\n    .container-md,\n    .container-lg,\n    .container-xl,\n    .container-fluid {\n      --grid-margin: var(--grid-#{$name}-margin);\n    }\n\n    .row {\n      --grid-gutter: var(--grid-#{$name}-gutter);\n    }\n    @if $breakpoint == \"sm\" {\n      .container,\n      .container-sm {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"md\" {\n      .container,\n      .container-sm,\n      .container-md {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"lg\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"xl\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg,\n      .container-xl {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @include columns($grid-desktop-columns, $breakpoint);\n  }\n}\n"],"names":[],"sourceRoot":""}