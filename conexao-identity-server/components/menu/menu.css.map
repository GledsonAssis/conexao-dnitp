{"version":3,"file":"components/menu/menu.css","mappings":"AAydA;EAxcE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAyFA;EA4EA;AAlLF;AAuBE;EACE;AArBJ;AAwBE;EACE;EACA;EACA;EACA;EACA;AAtBJ;AAyBE;EACE;EACA;EAEA;EACA;EACA;AAxBJ;AA6BI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AA3BN;AA8BI;EACE;EACA;AA5BN;AA+BI;EACE;AA7BN;AAwCE;EACE;EACA;EACA;EACA;AAtCJ;AAwCI;EACE;EACA;EACA;EACA;EACA;AAtCN;AAwCM;EACE;AAtCR;AAwCQ;EACE;AAtCV;AAmDE;EACE;EACA;AAjDJ;AAoDI;;EAEE;EACA;AAlDN;AAqDI;EACE;AAnDN;AA0DU;EACE;AAxDZ;AA8DQ;EACE;AA5DV;AA8DU;EACE;AA5DZ;AAoEM;EACE;AAlER;AAsEQ;EACE;AApEV;AA2EM;EACE;EACA;AAzER;AA8EU;EACE;AA5EZ;AChGE;;;;;;;EDiLY;AAxEd;AA6EQ;EACE;AA3EV;AA2FE;EACE;AAzFJ;AA2FI;EACE;EACA;EACA;EACA;EACA;EACA;AAzFN;AA4FI;EACE;EACA;EACA;AA1FN;AA4FM;EACE;AA1FR;AA4FQ;EACE;AA1FV;AE5HI;EACE;AF8HN;AE1HI;EACE;AF4HN;AA0FI;EACE;EACA;AAxFN;AA0FM;EACE;AAxFR;AA4FI;EACE;AA1FN;AAsGE;EACE;EACA;EACA;AApGJ;AAsGI;EACE;AApGN;AAuGI;EACE;AArGN;AAyGE;EACE;AAvGJ;AA6GI;EACE;EACA;AA3GN;AA+GM;EACE;EACA;EACA;EACA;EACA;AA7GR;AA+GQ;EACE;AA7GV;AAgHQ;EACE;AA9GV;ACjLE;;;;;;;EDiSU;AAvGZ;AA4GM;EACE;AA1GR;AA6GM;EACE;AA3GR;AAoHM;EACE;AAlHR;AAiHM;EACE;AA/GR;AA8GM;EACE;AA5GR;AAqHI;;EAEE;AAnHN;AG7LE;EH6SA;IAMI;EAlHJ;AACF;AGlME;EH0TI;IACE;EArHN;EAwHI;IACE;EAtHN;EAyHI;IACE;EAvHN;EA4HM;IACE;EA1HR;AACF;AAkIE;EACE;AAhIJ;AAmIM;EACE;AAjIR;AAoIM;EACE;AAlIR;AAsII;EACE;EACA;EACA;EACA;EACA;AApIN;AAqIM;EACE;AAnIR;AAuII;EACE;EACA;EACA;AArIN;AAwII;EACE;AAtIN;AAyII;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAvIN;AAyIM;EACE;EACA;AAvIR;AC1QE;;;;;;;EDmZQ;AAhIV;AAoIM;EACE;EACA;AAlIR;AGvQE;EHiZI;IACE;EAvIN;EA0II;IACE;EAxIN;EA2II;IACE;EAzIN;AACF;AAkJI;EACE;AAhJN;AAoJI;EE9bF;EACA;AF6SF;AE3SE;EACE;AF6SJ;AAsJM;EACE;EACA;EACA;AApJR;AAsJQ;EACE;AApJV;AE9SI;EACE;AFgTN;AE5SI;EACE;AF8SN,C","sources":["webpack://@govbr/dsgov/./src/components/menu/_menu.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_icons.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_states.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_grid.scss"],"sourcesContent":["@import \"../../partial/scss/base\";\n\n@mixin menu {\n  @include menu-tokens;\n  @include menu-base;\n  @include menu-header;\n  @include menu-body;\n  @include menu-footer;\n  @include menu-items;\n  @include menu-side-menu;\n  @include menu-items-sizes;\n  @include menu-push;\n  @include menu-contextual;\n  @include menu-states;\n}\n\n@mixin menu-tokens {\n  --menu-zindex: var(--z-index-layer-3);\n  --menu-zindex-push: var(--z-index-layer-0);\n  --menu-scrim: var(--surface-overlay-scrim);\n  --menu-background: var(--bg-color);\n  --menu-background-submenu: var(--color-secondary-02);\n  --menu-logo: 40px;\n  --menu-title: var(--text-color);\n  --menu-divider: var(--color-secondary-04);\n  --menu-item-background: transparent;\n  --menu-item-color: var(--interactive);\n  --menu-item-padding: var(--menu-item-medium);\n  --menu-item-small: var(--spacing-scale-base);\n  --menu-item-medium: var(--spacing-scale-2x);\n  --menu-item-large: var(--spacing-scale-3x);\n}\n\n@mixin menu-base {\n  // A base é aplicado no seguinte html:\n  // <div class=\"br-menu\">\n  //   <div class=\"menu-trigger\">\n  //   <div class=\"menu-container\">\n  //     <div class=\"menu-scrim\">\n  //     <div class=\"menu-panel\">\n  .menu-container {\n    display: none;\n  }\n\n  .menu-scrim {\n    background: var(--menu-scrim);\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n  }\n\n  .menu-panel {\n    --focus-offset: calc(var(--spacing-scale-half) * -1);\n    background: var(--menu-background);\n    // box-shadow: var(--menu-shadow);\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n  }\n\n  // Menu ativo\n  &.active {\n    .menu-container {\n      bottom: 0;\n      display: block;\n      left: 0;\n      position: fixed;\n      right: 0;\n      top: 0;\n      z-index: var(--menu-zindex);\n    }\n\n    .menu-panel {\n      position: relative;\n      z-index: calc(var(--menu-zindex) + 1);\n    }\n\n    .menu-scrim {\n      position: absolute;\n    }\n  }\n}\n\n@mixin menu-header {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-header\">\n  //   <div class=\"menu-close\">\n  //   <div class=\"menu-title\">\n\n  .menu-header {\n    align-items: center;\n    border-bottom: 1px solid var(--menu-divider);\n    display: flex;\n    padding: var(--spacing-scale-base) var(--spacing-scale-base);\n\n    .menu-title {\n      align-items: center;\n      display: flex;\n      flex: 1;\n      font-size: var(--menu-title);\n      margin-left: var(--spacing-scale-base);\n\n      img {\n        max-height: var(--menu-logo);\n\n        + * {\n          margin-left: var(--spacing-scale-base);\n        }\n      }\n    }\n  }\n}\n\n@mixin menu-body {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-body\">\n  //   <div class=\"folder\">\n\n  /* stylelint-disable no-descending-specificity */\n  .menu-body {\n    flex: 1;\n    overflow-y: auto;\n\n    // Resetar estilos\n    ul,\n    li {\n      margin: 0;\n      padding: 0;\n    }\n\n    ul {\n      list-style: none;\n    }\n\n    .menu-folder {\n      // Aplica separador entre pastas\n      > ul {\n        > li:last-child {\n          > .menu-item {\n            border-bottom: 1px solid var(--menu-divider);\n          }\n        }\n      }\n      // Cor de fundo para nível 2\n      > .menu-item {\n        + ul {\n          background: var(--menu-background-submenu);\n\n          .menu-item {\n            padding-left: var(--spacing-scale-5x);\n          }\n        }\n      }\n    }\n\n    // Aplica separador no menu dropdown de primeiro nível\n    .drop-menu {\n      > .menu-item {\n        border-bottom: 1px solid var(--menu-divider);\n      }\n\n      &.active {\n        > .menu-item {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    // Estilo padrão para menu dropdown e side menu\n    .drop-menu {\n      > ul {\n        background: var(--menu-background-submenu);\n        display: none;\n      }\n\n      &.active {\n        > .menu-item {\n          &:not(:hover) {\n            --menu-item-background: var(--menu-background);\n          }\n\n          .support {\n            @include icon {\n              transform: rotate(180deg);\n            }\n          }\n        }\n\n        > ul {\n          display: block;\n        }\n      }\n    }\n  }\n  /* stylelint-enable no-descending-specificity */\n}\n\n@mixin menu-footer {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-footer\">\n  //   <div class=\"menu-logos\">\n  //   <div class=\"menu-links\">\n  //   <div class=\"menu-social\">\n  //   <div class=\"menu-info\">\n\n  .menu-footer {\n    border-top: 1px solid var(--menu-divider);\n\n    .menu-logos {\n      border-bottom: 1px solid var(--menu-divider);\n      column-gap: var(--spacing-scale-2x);\n      display: grid;\n      grid-template-columns: 1fr 1fr 1fr;\n      padding: var(--spacing-scale-base) var(--spacing-scale-5x);\n      row-gap: var(--spacing-scale-2x);\n    }\n\n    .menu-links {\n      --focus-offset: var(--spacing-scale-half);\n      border-bottom: 1px solid var(--menu-divider);\n      padding: var(--spacing-scale-2x) var(--spacing-scale-5x);\n\n      a {\n        display: block;\n\n        &:not(:last-child) {\n          margin-bottom: var(--spacing-scale-2x);\n        }\n        @include hover;\n      }\n    }\n\n    .menu-social {\n      border-bottom: 1px solid var(--menu-divider);\n      padding: var(--spacing-scale-base) var(--spacing-scale-5x);\n\n      .sharegroup {\n        display: flex;\n      }\n    }\n\n    .menu-info {\n      padding: var(--spacing-scale-2x);\n    }\n  }\n}\n\n@mixin menu-items {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-item\">\n  //   <div class=\"icon\">\n  //   <div class=\"content\">\n  //   <div class=\"support\">\n\n  .menu-item {\n    background: var(--menu-item-background);\n    display: flex;\n    padding: var(--menu-item-padding) var(--spacing-scale-2x);\n\n    .icon {\n      margin-right: var(--spacing-scale-2x);\n    }\n\n    .content {\n      flex: 1;\n    }\n  }\n\n  a.menu-item {\n    color: var(--menu-item-color);\n  }\n}\n\n@mixin menu-side-menu {\n  .side-menu {\n    > ul {\n      background: var(--menu-background-submenu);\n      display: none;\n    }\n\n    &.active {\n      > .menu-item {\n        --interactive-rgb: var(--rgb-primary-darken-01);\n        --menu-item-color: var(--active);\n        --menu-item-background: var(--menu-background);\n        flex-direction: row-reverse;\n        font-weight: var(--font-weight-semi-bold);\n\n        .icon {\n          margin-right: 0;\n        }\n\n        .support {\n          margin-right: var(--spacing-scale-2x);\n          @include icon {\n            transform: rotate(180deg);\n          }\n        }\n      }\n\n      > ul {\n        display: block;\n      }\n\n      .menu-item {\n        padding-left: var(--spacing-scale-2x) !important;\n      }\n    }\n  }\n}\n\n@mixin menu-items-sizes {\n  @each $size in \"small\", \"medium\", \"large\" {\n    &.#{$size} {\n      .menu-item {\n        --menu-item-padding: var(--menu-item-#{$size});\n      }\n    }\n  }\n}\n\n@mixin menu-push {\n  // Mobile First\n  &.push {\n    .menu-trigger,\n    .menu-scrim {\n      display: none;\n    }\n    @include media-breakpoint-up(sm) {\n      --menu-zindex: var(--menu-zindex-push);\n    }\n  }\n\n  // Tablet\n  @include media-breakpoint-up(sm) {\n    &.push {\n      .menu-header {\n        display: none;\n      }\n\n      .menu-panel {\n        height: auto;\n      }\n\n      .menu-scrim {\n        display: none;\n      }\n\n      // Menu ativo\n      &.active {\n        .menu-container {\n          position: static;\n        }\n      }\n    }\n  }\n}\n\n@mixin menu-contextual {\n  // Mobile First\n  &.contextual {\n    overflow: auto;\n\n    .menu-body .menu-folder {\n      > .menu-item + ul .menu-item {\n        padding-left: var(--spacing-scale-2x);\n      }\n\n      > ul > li:last-child > .menu-item {\n        border-bottom: none;\n      }\n    }\n\n    .menu-trigger {\n      bottom: 0;\n      left: 0;\n      position: fixed;\n      right: 0;\n      z-index: calc(var(--menu-zindex) - 1);\n      .#{$prefix}button {\n        --button-radius: 0;\n      }\n    }\n\n    .menu-container {\n      display: none;\n      flex-direction: column-reverse;\n      position: static;\n    }\n\n    .menu-panel {\n      height: auto;\n    }\n\n    &.active {\n      bottom: 0;\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      justify-content: flex-end;\n      left: 0;\n      position: fixed;\n      right: 0;\n      z-index: var(--menu-zindex);\n\n      .menu-trigger {\n        position: relative;\n        z-index: calc(var(--menu-zindex) + 1);\n        @include icon {\n          transform: rotate(180deg);\n        }\n      }\n\n      .menu-container {\n        display: flex;\n        overflow: auto;\n      }\n    }\n  }\n\n  // Tablet\n  @include media-breakpoint-up(md) {\n    &.contextual {\n      .menu-trigger {\n        display: none;\n      }\n\n      .menu-scrim {\n        position: static;\n      }\n\n      .menu-container {\n        display: block;\n      }\n    }\n  }\n}\n\n@mixin menu-states {\n  // Aplicáveis para item texto e link\n  .menu-item {\n    // Escondido\n    &[hidden] {\n      display: none;\n    }\n\n    // Desativado\n    &:disabled {\n      @include disabled;\n    }\n  }\n\n  // Aplicável somente para links\n  a.menu-item {\n    &:not(:disabled) {\n      // Ativo\n      &.active {\n        --interactive-rgb: var(--rgb-secondary-01);\n        --menu-item-background: var(--active);\n        --menu-item-color: var(--color-secondary-01);\n\n        &:focus {\n          outline-color: var(--color-support-10);\n        }\n      }\n\n      // Hover\n      @include hover;\n    }\n  }\n}\n\n.#{$prefix}menu {\n  @include menu;\n}\n","@mixin icon-size($value) {\n  @include icon {\n    --icon-size: #{$value};\n  }\n}\n\n@mixin icon {\n  .svg-inline--fa,\n  .fa,\n  .fab,\n  .fad,\n  .fal,\n  .far,\n  .fas {\n    @content;\n  }\n}\n","// Desabilitado\n@mixin disabled {\n  cursor: not-allowed;\n  opacity: var(--disabled);\n\n  * {\n    pointer-events: none;\n  }\n}\n\n// Hover\n@mixin hover {\n  &:not(:disabled) {\n    &:hover {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--hover)),\n      rgba(var(--interactive-rgb), var(--hover)));\n    }\n\n    &:active {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--pressed)),\n      rgba(var(--interactive-rgb), var(--pressed)));\n    }\n  }\n}\n\n/// Focus\n/// De acordo com o Fundamento Estado existem 2 tipos de focus:\n/// 1. Foco padrão: É a versão tracejada.\n/// 2. Foco tênue: É a versão atenuada.\n///\n/// Ambos podem ser aplicados em navegação por tab, porém apenas o focus tênue\n/// pode ser aplicado ao clicar no componente. Você precisará especificar se o\n/// focus será aplicado como focus ou focus-visible.\n///\n/// 1. Foco padrão:\n///    Aplicado somente em focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        @include focus-soft;\n///      }\n///\n/// 2. Foco tênue:\n///    Pode ser aplicado em focus ou focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        &:focus {\n///          outline: none;\n///        }\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n///\n///      ou\n///\n///      seletor {\n///        &:focus,\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n@mixin focus {\n  &:focus {\n    outline: none;\n  }\n\n  &.focus-visible,\n  &:focus-visible {\n    outline-color: var(--focus);\n    outline-offset: var(--focus-offset);\n    outline-style: var(--focus-style);\n    outline-width: var(--focus-width);\n  }\n}\n\n@mixin focus-soft {\n  border-color: var(--focus) !important;\n  box-shadow: 0 0 0 var(--surface-width-md) var(--focus);\n  outline: none;\n}\n\n// Ativo\n@mixin active {\n  background: var(--active);\n  color: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n  --color: var(--color-dark);\n  --color-rgb: var(--color-dark-rgb);\n  --color-hsl: var(--color-dark-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-dark);\n  --interactive-rgb: var(--interactive-dark-rgb);\n  --interactive-dark-hsl: var(--interactive-dark-hsl);\n  --visited: var(--gray-20);\n  --hover: var(--surface-opacity-sm);\n  --pressed: var(--surface-opacity-lg);\n  --focus-color: var(--gold-vivid-20);\n  --focus: var(--gold-vivid-20);\n  --active: var(--pure-0);\n}\n@mixin light-mode {\n  --color: var(--color-light);\n  --color-rgb: var(--color-light-rgb);\n  --color-hsl: var(--color-light-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-light);\n  --interactive-rgb: var(--interactive-light-rgb);\n  --interactive-hsl: var(--interactive-light-hsl);\n  --visited: var(--blue-warm-vivid-80);\n  --hover: var(--surface-opacity-xs);\n  --pressed: var(--surface-opacity-md);\n  --focus-color: var(--gold-vivid-40);\n  --focus: var(--gold-vivid-40);\n  --active: var(--blue-warm-vivid-80);\n}\n","// Dependência para calcular divisão\n@use \"sass:math\";\n\n// Função para retornar próximo breakpoint\n@function next-breakpoint($breakpoint) {\n  @if $breakpoint == \"xs\" {\n    @return \"sm\";\n  }\n  @if $breakpoint == \"sm\" {\n    @return \"md\";\n  }\n  @if $breakpoint == \"md\" {\n    @return \"lg\";\n  }\n  @if $breakpoint == \"lg\" {\n    @return \"xl\";\n  }\n}\n\n/// Aplica estilos no breakpoint informado para cima\n/// Modo de uso: @include media-breakpoint-up(sm) {}\n@mixin media-breakpoint-up($breakpoint) {\n  $size: map-get($breakpoints, $breakpoint);\n  @media (min-width: $size) {\n    @content;\n  }\n}\n\n/// Aplica estilos no breakpoint informado para baixo\n/// Modo de uso: @include media-breakpoint-down(sm) {}\n@mixin media-breakpoint-down($breakpoint) {\n  $value: map-get($breakpoints, next-breakpoint($breakpoint)) - 1px;\n  @media (max-width: $value) {\n    @content;\n  }\n}\n\n/// Cria as colunas de acordo com número de colunas informado.\n/// As colunas terão breakpoint caso seja ele seja informado.\n/// Modo de uso: @include columns(4); ou @include columns(8, \"sm\");\n@mixin columns($columns, $breakpoint: null) {\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")} {\n    flex: 1 0 0%;\n    min-width: math.div(1, $columns) * 100%;\n  }\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  @for $i from 1 through $columns {\n    .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-#{$i} {\n      flex-basis: math.div($i, $columns) * 100%;\n      max-width: math.div($i, $columns) * 100%;\n    }\n  }\n}\n\n/// Cria os containers responsivos para a Grid.\n/// A versão fluida sempre terá largura de 100%.\n/// As versões fixas recebem limite de largura de acordo com o breakpoint.\n/// Modo de uso: @include grid-breakpoint(\"576px\", \"sm\", \"tablet\");\n@mixin grid-breakpoint($var, $breakpoint, $name) {\n  @media (min-width: $var) {\n    .container,\n    .container-sm,\n    .container-md,\n    .container-lg,\n    .container-xl,\n    .container-fluid {\n      --grid-margin: var(--grid-#{$name}-margin);\n    }\n\n    .row {\n      --grid-gutter: var(--grid-#{$name}-gutter);\n    }\n    @if $breakpoint == \"sm\" {\n      .container,\n      .container-sm {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"md\" {\n      .container,\n      .container-sm,\n      .container-md {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"lg\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"xl\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg,\n      .container-xl {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @include columns($grid-desktop-columns, $breakpoint);\n  }\n}\n"],"names":[],"sourceRoot":""}