{"version":3,"file":"components/footer/footer.min.css","mappings":"AA2JA,WA9IE,mDACA,yCACA,0CACA,0BACA,0BACA,wEACA,6BACA,6BASA,oCANA,oCACA,0CACA,0BACA,aACF,CAIE,+BC8DA,0BACA,kCACA,kCACA,0BACA,sCACA,8CACA,mDACA,yBACA,kCACA,oCACA,mCACA,6BACA,sBD/DF,CANE,yCAEE,oCACA,gCAoBJ,CAlBI,oGCmEF,2BACA,mCACA,mCACA,0BACA,uCACA,+CACA,+CACA,oCACA,kCACA,oCACA,mCACA,6BACA,kCD9CF,CA3BE,iBACE,kCA6BJ,CA3BI,qBACE,qCACA,kCA6BN,CAxBE,oBAEE,mBACA,YAyBJ,CCxEI,yCACE,qHD0EN,CCtEI,0CACE,yHDwEN,CA7BI,2BACE,sBA+BN,CA5BI,6BACE,MA8BN,CA1BI,+BACE,aACA,cA4BN,CE9EE,yBFqDQ,4DACE,aACA,mBA4BV,CAzBQ,iDACE,MA2BV,CAvBM,wCACE,sBACA,0BAyBR,CACF,CAtBM,uCACE,UAwBR,CAlBM,yFAEE,UAoBR,CAlBQ,2GACE,oBAIA,qBAHA,YACA,oCACA,YAEA,iBACA,gBACA,gBACA,kCACA,sBAqBV,CAjBM,iFAEE,YACA,SAmBR,CE3GE,yBFqFI,iFAKI,0BACA,cAsBR,CAnBU,gRACE,4CA0BZ,CACF,CAlBE,2BACE,QAoBJ,CAhBI,wBACE,wCACA,qCAkBN,CE1IE,yBF8HE,iBACE,iBAeJ,CACF","sources":["webpack://@govbr/dsgov/./src/components/footer/_footer.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_states.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_grid.scss"],"sourcesContent":["@import \"../../partial/scss/base\";\n\n@mixin footer-init {\n  @include footer-tokens;\n  @include footer-appearance;\n  @include footer-dark;\n  @include footer-light;\n  @include footer-logo;\n  @include footer-list;\n  @include footer-social;\n  @include footer-info;\n}\n@mixin footer-tokens {\n  --footer-background: var(--color-primary-darken-02);\n  --footer-color: var(--color-secondary-01);\n  --footer-border: var(--color-secondary-04);\n  --footer-logo-height: 48px;\n  --footer-logo-width: 180px;\n  --footer-logo-padding: var(--spacing-scale-6x) 0 var(--spacing-scale-4x);\n  --footer-assigns-height: 46px;\n  --footer-assigns-width: 180px;\n}\n@mixin footer-appearance {\n  background: var(--footer-background);\n  border-top: 1px solid var(--footer-border);\n  color: var(--footer-color);\n  display: block;\n}\n@mixin footer-dark {\n  --bg-color: var(--footer-background);\n  @include dark-mode;\n  .#{$prefix}item {\n    @include dark-mode;\n  }\n}\n@mixin footer-light {\n  &[inverted],\n  &.inverted {\n    --footer-background: var(--bg-color);\n    --footer-color: var(--text-color);\n    @include light-mode;\n    .#{$prefix}item {\n      @include light-mode;\n    }\n  }\n}\n@mixin footer-logo {\n  .logo {\n    padding: var(--footer-logo-padding);\n\n    img {\n      max-height: var(--footer-logo-height);\n      max-width: var(--footer-logo-widht);\n    }\n  }\n}\n@mixin footer-list {\n  .#{$prefix}item {\n    @include hover;\n    align-items: center;\n    display: flex;\n\n    &.active {\n      background: transparent;\n    }\n\n    .content {\n      flex: 1;\n    }\n  }\n  .#{$prefix}list {\n    &.horizontal {\n      display: flex;\n      flex-wrap: wrap;\n      @include media-breakpoint-up(md) {\n        .#{$prefix}item {\n          .support:last-child {\n            display: none;\n            pointer-events: none;\n          }\n\n          .content {\n            flex: 1;\n          }\n        }\n        // evita collapse no breakpoint\n        .#{$prefix}list {\n          background-image: none;\n          max-height: 200em !important;\n        }\n      }\n\n      .header {\n        width: 100%;\n      }\n      //  Para ser compatível com outros navegadores no\n      //  uso máximo de 2 linhas, foram adicionados os\n      //  comandos line-height e max-height.\n\n      .#{$prefix}item,\n      .#{$prefix}list .#{$prefix}item {\n        height: 4em;\n\n        .content {\n          box-orient: vertical;\n          display: box;\n          font-weight: var(--font-weight-bold);\n          height: auto;\n          -webkit-line-clamp: 2;\n          line-height: 16px;\n          max-height: 32px;\n          overflow: hidden;\n          padding: 0 var(--spacing-scale-2x);\n          text-overflow: ellipsis;\n        }\n      }\n\n      .col,\n      [class*=\"col-\"] {\n        flex-grow: 0;\n        padding: 0;\n        @include media-breakpoint-down(sm) {\n          flex-basis: 100% !important;\n          max-width: 100%;\n          .#{$prefix}item.header.active {\n            border-bottom: 1px solid var(--footer-border);\n            + .#{$prefix}list {\n              border-bottom: 1px solid var(--footer-border);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n@mixin footer-social {\n  .social-network {\n    border: 0;\n  }\n\n  .assigns {\n    img {\n      max-height: var(--footer-assigns-height);\n      max-width: var(--footer-assigns-width);\n    }\n  }\n}\n@mixin footer-info {\n  @include media-breakpoint-up(md) {\n    .info {\n      text-align: center;\n    }\n  }\n}\n\n.#{$prefix}footer {\n  @include footer-init;\n  // --text-color: var(--color-secondary-01);\n  // @include dark-mode;\n  // background: v(color-primary-darken-02);\n  // color: v(color-secondary-01);\n  // display: block;\n  // @include media-breakpoint-up(md) {\n  // \t.#{$prefix}list .#{$prefix}item .support {\n  // \t\tdisplay: none;\n  // \t\tpointer-events: none;\n  // \t}\n  // }\n\n  // .logo {\n  // \tpadding: v(spacing-scale-6x) 0 v(spacing-scale-4x);\n  // \timg {\n  // \t\tmax-height: 48px;\n  // \t\tmax-width: 180px;\n  // \t}\n  // }\n\n  // .assigns {\n  // \timg {\n  // \t\tmax-height: 46px;\n  // \t\tmax-width: 180px;\n  // \t}\n  // }\n\n  // .social-network {\n  // \tborder: 0;\n  // }\n\n  // .#{$prefix}divider {\n  // \t--divider-color: var(--divider-dark);\n\n  // \t&:first-child {\n  // \t\tborder-top: 1px solid var(--color-secondary-04);\n  // \t}\n  // }\n\n  // &[inverted],\n  // &.inverted {\n  // \t--interactive-rgb: var(--rgb-primary-default);\n  // \t--hover: var(--surface-opacity-sm, 0.16);\n  // \t--focus-color: var(--color-support-03);\n  // \t--text-color: var(--color-secondary-08);\n  // \tbackground: v(color-secondary-01);\n  // \tborder-top: 1px solid v(color-secondary-04);\n  // \tcolor: v(--color-secondary-08);\n  // \t.#{$prefix}item {\n  // \t\t--item-background: var(--color-secondary-01);\n  // \t\t--item-color: var(--color-secondary-08);\n  // \t\t&.header {\n  // \t\t\t.content,\n  // \t\t\t.support {\n  // \t\t\t\tcolor: var(--item-color);\n  // \t\t\t}\n  // \t\t}\n  // \t}\n\n  // \t.#{$prefix}divider {\n  // \t\t--divider-color: var(--divider-light);\n  // \t}\n  // }\n}\n","// Desabilitado\n@mixin disabled {\n  cursor: not-allowed;\n  opacity: var(--disabled);\n\n  * {\n    pointer-events: none;\n  }\n}\n\n// Hover\n@mixin hover {\n  &:not(:disabled) {\n    &:hover {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--hover)),\n      rgba(var(--interactive-rgb), var(--hover)));\n    }\n\n    &:active {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--pressed)),\n      rgba(var(--interactive-rgb), var(--pressed)));\n    }\n  }\n}\n\n/// Focus\n/// De acordo com o Fundamento Estado existem 2 tipos de focus:\n/// 1. Foco padrão: É a versão tracejada.\n/// 2. Foco tênue: É a versão atenuada.\n///\n/// Ambos podem ser aplicados em navegação por tab, porém apenas o focus tênue\n/// pode ser aplicado ao clicar no componente. Você precisará especificar se o\n/// focus será aplicado como focus ou focus-visible.\n///\n/// 1. Foco padrão:\n///    Aplicado somente em focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        @include focus-soft;\n///      }\n///\n/// 2. Foco tênue:\n///    Pode ser aplicado em focus ou focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        &:focus {\n///          outline: none;\n///        }\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n///\n///      ou\n///\n///      seletor {\n///        &:focus,\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n@mixin focus {\n  &:focus {\n    outline: none;\n  }\n\n  &.focus-visible,\n  &:focus-visible {\n    outline-color: var(--focus);\n    outline-offset: var(--focus-offset);\n    outline-style: var(--focus-style);\n    outline-width: var(--focus-width);\n  }\n}\n\n@mixin focus-soft {\n  border-color: var(--focus) !important;\n  box-shadow: 0 0 0 var(--surface-width-md) var(--focus);\n  outline: none;\n}\n\n// Ativo\n@mixin active {\n  background: var(--active);\n  color: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n  --color: var(--color-dark);\n  --color-rgb: var(--color-dark-rgb);\n  --color-hsl: var(--color-dark-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-dark);\n  --interactive-rgb: var(--interactive-dark-rgb);\n  --interactive-dark-hsl: var(--interactive-dark-hsl);\n  --visited: var(--gray-20);\n  --hover: var(--surface-opacity-sm);\n  --pressed: var(--surface-opacity-lg);\n  --focus-color: var(--gold-vivid-20);\n  --focus: var(--gold-vivid-20);\n  --active: var(--pure-0);\n}\n@mixin light-mode {\n  --color: var(--color-light);\n  --color-rgb: var(--color-light-rgb);\n  --color-hsl: var(--color-light-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-light);\n  --interactive-rgb: var(--interactive-light-rgb);\n  --interactive-hsl: var(--interactive-light-hsl);\n  --visited: var(--blue-warm-vivid-80);\n  --hover: var(--surface-opacity-xs);\n  --pressed: var(--surface-opacity-md);\n  --focus-color: var(--gold-vivid-40);\n  --focus: var(--gold-vivid-40);\n  --active: var(--blue-warm-vivid-80);\n}\n","// Dependência para calcular divisão\n@use \"sass:math\";\n\n// Função para retornar próximo breakpoint\n@function next-breakpoint($breakpoint) {\n  @if $breakpoint == \"xs\" {\n    @return \"sm\";\n  }\n  @if $breakpoint == \"sm\" {\n    @return \"md\";\n  }\n  @if $breakpoint == \"md\" {\n    @return \"lg\";\n  }\n  @if $breakpoint == \"lg\" {\n    @return \"xl\";\n  }\n}\n\n/// Aplica estilos no breakpoint informado para cima\n/// Modo de uso: @include media-breakpoint-up(sm) {}\n@mixin media-breakpoint-up($breakpoint) {\n  $size: map-get($breakpoints, $breakpoint);\n  @media (min-width: $size) {\n    @content;\n  }\n}\n\n/// Aplica estilos no breakpoint informado para baixo\n/// Modo de uso: @include media-breakpoint-down(sm) {}\n@mixin media-breakpoint-down($breakpoint) {\n  $value: map-get($breakpoints, next-breakpoint($breakpoint)) - 1px;\n  @media (max-width: $value) {\n    @content;\n  }\n}\n\n/// Cria as colunas de acordo com número de colunas informado.\n/// As colunas terão breakpoint caso seja ele seja informado.\n/// Modo de uso: @include columns(4); ou @include columns(8, \"sm\");\n@mixin columns($columns, $breakpoint: null) {\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")} {\n    flex: 1 0 0%;\n    min-width: math.div(1, $columns) * 100%;\n  }\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  @for $i from 1 through $columns {\n    .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-#{$i} {\n      flex-basis: math.div($i, $columns) * 100%;\n      max-width: math.div($i, $columns) * 100%;\n    }\n  }\n}\n\n/// Cria os containers responsivos para a Grid.\n/// A versão fluida sempre terá largura de 100%.\n/// As versões fixas recebem limite de largura de acordo com o breakpoint.\n/// Modo de uso: @include grid-breakpoint(\"576px\", \"sm\", \"tablet\");\n@mixin grid-breakpoint($var, $breakpoint, $name) {\n  @media (min-width: $var) {\n    .container,\n    .container-sm,\n    .container-md,\n    .container-lg,\n    .container-xl,\n    .container-fluid {\n      --grid-margin: var(--grid-#{$name}-margin);\n    }\n\n    .row {\n      --grid-gutter: var(--grid-#{$name}-gutter);\n    }\n    @if $breakpoint == \"sm\" {\n      .container,\n      .container-sm {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"md\" {\n      .container,\n      .container-sm,\n      .container-md {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"lg\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"xl\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg,\n      .container-xl {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @include columns($grid-desktop-columns, $breakpoint);\n  }\n}\n"],"names":[],"sourceRoot":""}