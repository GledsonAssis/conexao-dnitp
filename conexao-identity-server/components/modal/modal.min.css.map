{"version":3,"file":"components/modal/modal.min.css","mappings":"AAuBE,yBCsEA,UACE,UA1FF,CA4FE,oBACE,eA1FJ,CA6FE,mBACE,eA3FJ,CA8FE,oBACE,eA5FJ,CA+FE,uCAEE,eA9FJ,CACF,CAkGA,UA5GE,4BAcF,CAZE,iBACE,uCACA,iBAcJ,CAZI,wBACE,kBACA,QACA,sCAcN,CAVE,gBACE,uCACA,wBACA,kBACA,gDACA,eAYJ,CAVI,0BACE,oBAYN,CC0BE,sBACE,YDxBJ,CC2BE,4DAEE,2BACA,mCACA,iCACA,gCD1BJ,CAfE,eACE,kCAiBJ,CAdE,iBACE,aACA,cAgBJ,CCUE,kBACE,YDRJ,CCWE,oDAEE,2BACA,mCACA,iCACA,gCDVJ,CAjBE,mBACE,uCACA,eAmBJ,CAhBE,iBACE,SACA,4EAEA,sCACA,aACA,sCACA,6CACA,8CACA,cACA,gCACA,YACA,UAiBJ,CAfI,oCACE,SAiBN,CAdI,0CACE,oCAgBN,CAbI,0CACE,oCAeN,CAZI,wBACE,YAcN,CAVM,gDACE,oCAYR,CC/BE,uBACE,YDiCJ,CC9BE,8DAEE,2BACA,mCACA,iCACA,gCD+BJ","sources":["webpack://@govbr/dsgov/./src/partial/scss/mixins/_grid.scss","webpack://@govbr/dsgov/./src/components/modal/_modal.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_states.scss"],"sourcesContent":["// Dependência para calcular divisão\n@use \"sass:math\";\n\n// Função para retornar próximo breakpoint\n@function next-breakpoint($breakpoint) {\n  @if $breakpoint == \"xs\" {\n    @return \"sm\";\n  }\n  @if $breakpoint == \"sm\" {\n    @return \"md\";\n  }\n  @if $breakpoint == \"md\" {\n    @return \"lg\";\n  }\n  @if $breakpoint == \"lg\" {\n    @return \"xl\";\n  }\n}\n\n/// Aplica estilos no breakpoint informado para cima\n/// Modo de uso: @include media-breakpoint-up(sm) {}\n@mixin media-breakpoint-up($breakpoint) {\n  $size: map-get($breakpoints, $breakpoint);\n  @media (min-width: $size) {\n    @content;\n  }\n}\n\n/// Aplica estilos no breakpoint informado para baixo\n/// Modo de uso: @include media-breakpoint-down(sm) {}\n@mixin media-breakpoint-down($breakpoint) {\n  $value: map-get($breakpoints, next-breakpoint($breakpoint)) - 1px;\n  @media (max-width: $value) {\n    @content;\n  }\n}\n\n/// Cria as colunas de acordo com número de colunas informado.\n/// As colunas terão breakpoint caso seja ele seja informado.\n/// Modo de uso: @include columns(4); ou @include columns(8, \"sm\");\n@mixin columns($columns, $breakpoint: null) {\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")} {\n    flex: 1 0 0%;\n    min-width: math.div(1, $columns) * 100%;\n  }\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  @for $i from 1 through $columns {\n    .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-#{$i} {\n      flex-basis: math.div($i, $columns) * 100%;\n      max-width: math.div($i, $columns) * 100%;\n    }\n  }\n}\n\n/// Cria os containers responsivos para a Grid.\n/// A versão fluida sempre terá largura de 100%.\n/// As versões fixas recebem limite de largura de acordo com o breakpoint.\n/// Modo de uso: @include grid-breakpoint(\"576px\", \"sm\", \"tablet\");\n@mixin grid-breakpoint($var, $breakpoint, $name) {\n  @media (min-width: $var) {\n    .container,\n    .container-sm,\n    .container-md,\n    .container-lg,\n    .container-xl,\n    .container-fluid {\n      --grid-margin: var(--grid-#{$name}-margin);\n    }\n\n    .row {\n      --grid-gutter: var(--grid-#{$name}-gutter);\n    }\n    @if $breakpoint == \"sm\" {\n      .container,\n      .container-sm {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"md\" {\n      .container,\n      .container-sm,\n      .container-md {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"lg\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"xl\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg,\n      .container-xl {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @include columns($grid-desktop-columns, $breakpoint);\n  }\n}\n","@import \"../../partial/scss/base\";\n\n@mixin modal-token {\n  --modal-z-index: var(--z-index-layer-4);\n}\n\n@mixin modal {\n  z-index: var(--modal-z-index);\n\n  &-header {\n    margin-bottom: v(spacing-scale-3xh);\n    position: relative;\n\n    .close {\n      position: absolute;\n      right: 0;\n      top: calc(#{v(spacing-scale-half)} * -1);\n    }\n  }\n\n  &-title {\n    font-size: var(--font-size-scale-up-01);\n    font-weight: var(--$font-weight-bold);\n    margin: 0 40px 0 0;\n    max-height: calc(var(--font-size-scale-up-01) * 3);\n    overflow: hidden;\n\n    &.is-inline {\n      -webkit-line-clamp: 1;\n      // max-height: $h3-font-size * 2;\n    }\n    @include focus;\n  }\n\n  &-body {\n    margin: 0 0 v(spacing-scale-5x);\n  }\n\n  &-footer {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  p {\n    @include focus;\n  }\n\n  /*** Div sombreada e com scroll se necessário para modal de termo de aceite ***/\n  .br-card {\n    --card-shadow: var(--surface-shadow-lg);\n    margin-bottom: 0;\n  }\n\n  .terms {\n    border: 0;\n    box-shadow: var(--surface-shadow-sm-inset),\n      var(--surface-shadow-sm-inset-up);\n    font-size: v(font-size-scale-base);\n    height: 216px;\n    margin-bottom: var(--spacing-scale-2x);\n    margin-left: calc(#{v(spacing-scale-2x)} * -1);\n    margin-right: calc(#{v(spacing-scale-2x)} * -1);\n    overflow: auto;\n    padding: var(--spacing-scale-2x);\n    resize: none;\n    width: auto;\n\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n\n    &::-webkit-scrollbar-track {\n      background: v(color-secondary-03);\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background: v(color-secondary-06);\n    }\n\n    &:active {\n      outline: none;\n    }\n\n    &:hover {\n      &::-webkit-scrollbar-thumb {\n        background: v(color-secondary-07);\n      }\n    }\n    @include focus;\n  }\n}\n\n@include media-breakpoint-up(sm) {\n  .#{$prefix}modal {\n    width: auto;\n\n    &.is-xsmall {\n      max-width: 220px;\n    }\n\n    &.is-small {\n      max-width: 300px;\n    }\n\n    &.is-medium {\n      max-width: 500px;\n    }\n\n    &.is-large,\n    &.is-scroll {\n      max-width: 640px;\n    }\n  }\n}\n\n.#{$prefix}modal {\n  @include modal;\n}\n","// Desabilitado\n@mixin disabled {\n  cursor: not-allowed;\n  opacity: var(--disabled);\n\n  * {\n    pointer-events: none;\n  }\n}\n\n// Hover\n@mixin hover {\n  &:not(:disabled) {\n    &:hover {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--hover)),\n      rgba(var(--interactive-rgb), var(--hover)));\n    }\n\n    &:active {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--pressed)),\n      rgba(var(--interactive-rgb), var(--pressed)));\n    }\n  }\n}\n\n/// Focus\n/// De acordo com o Fundamento Estado existem 2 tipos de focus:\n/// 1. Foco padrão: É a versão tracejada.\n/// 2. Foco tênue: É a versão atenuada.\n///\n/// Ambos podem ser aplicados em navegação por tab, porém apenas o focus tênue\n/// pode ser aplicado ao clicar no componente. Você precisará especificar se o\n/// focus será aplicado como focus ou focus-visible.\n///\n/// 1. Foco padrão:\n///    Aplicado somente em focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        @include focus-soft;\n///      }\n///\n/// 2. Foco tênue:\n///    Pode ser aplicado em focus ou focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        &:focus {\n///          outline: none;\n///        }\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n///\n///      ou\n///\n///      seletor {\n///        &:focus,\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n@mixin focus {\n  &:focus {\n    outline: none;\n  }\n\n  &.focus-visible,\n  &:focus-visible {\n    outline-color: var(--focus);\n    outline-offset: var(--focus-offset);\n    outline-style: var(--focus-style);\n    outline-width: var(--focus-width);\n  }\n}\n\n@mixin focus-soft {\n  border-color: var(--focus) !important;\n  box-shadow: 0 0 0 var(--surface-width-md) var(--focus);\n  outline: none;\n}\n\n// Ativo\n@mixin active {\n  background: var(--active);\n  color: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n  --color: var(--color-dark);\n  --color-rgb: var(--color-dark-rgb);\n  --color-hsl: var(--color-dark-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-dark);\n  --interactive-rgb: var(--interactive-dark-rgb);\n  --interactive-dark-hsl: var(--interactive-dark-hsl);\n  --visited: var(--gray-20);\n  --hover: var(--surface-opacity-sm);\n  --pressed: var(--surface-opacity-lg);\n  --focus-color: var(--gold-vivid-20);\n  --focus: var(--gold-vivid-20);\n  --active: var(--pure-0);\n}\n@mixin light-mode {\n  --color: var(--color-light);\n  --color-rgb: var(--color-light-rgb);\n  --color-hsl: var(--color-light-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-light);\n  --interactive-rgb: var(--interactive-light-rgb);\n  --interactive-hsl: var(--interactive-light-hsl);\n  --visited: var(--blue-warm-vivid-80);\n  --hover: var(--surface-opacity-xs);\n  --pressed: var(--surface-opacity-md);\n  --focus-color: var(--gold-vivid-40);\n  --focus: var(--gold-vivid-40);\n  --active: var(--blue-warm-vivid-80);\n}\n"],"names":[],"sourceRoot":""}