{"version":3,"file":"components/upload/upload.css","mappings":"AAOA;EC2GE;ED/GA;EACA;EAMA;AALF;ACkHM;EACE,kCALkB;AD3G1B;ACkHM;EACE;EACA,gCATkB;EAUlB;EACA;EACA;EACA;EACA;ADhHR;ACsGM;EACE,iCALkB;AD/F1B;ACsGM;EACE;EACA,+BATkB;EAUlB;EACA;EACA;EACA;EACA;ADpGR;AC0FM;EACE,kCALkB;ADnF1B;AC0FM;EACE;EACA,gCATkB;EAUlB;EACA;EACA;EACA;EACA;ADxFR;AC2FQ;EACE;ADzFV;AC2EM;EACE,+BALkB;ADpE1B;AC2EM;EACE;EACA,6BATkB;EAUlB;EACA;EACA;EACA;EACA;ADzER;AExBE;EFnBE;IACE;IACA;IACA;EA8CJ;EA1CI;IACE;IACA;EA4CN;EAxCE;IACE;EA0CJ;EAvCE;IACE;IACA;EAyCJ;AACF;AAtCE;EACE;AAwCJ;AApCI;EACE;AAsCN;AApCM;;EAEE;EACA;AAsCR;AAjCE;EACE;EACA;AAmCJ;AAjCI;EACE;AAmCN;AA/BE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAiCJ;AA/BI;EACE;EACA;EACA;AAiCN;AA9BI;EACE;EACA;EACA;EACA;EACA;AAgCN;AA5BE;EACE;EACA;AA8BJ;AA5BI;EACE;EACA;EACA;EACA;EACA;AA8BN;AA3BI;EACE;EACA;AA6BN;AA1BI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AA4BN;AAxBE;EACE;AA0BJ;AAvBE;EACE;qDAAA;EAEA;EACA;AAyBJ;AAvBI;EACE;AAyBN,C","sources":["webpack://@govbr/dsgov/./src/components/upload/_upload.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_upload.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_grid.scss"],"sourcesContent":["@import \"../../partial/scss/base\";\n\n@mixin upload-tokens {\n  --onboarding-dragging-color: var(--color-danger);\n  --upload-z-index: var(--z-index-layer-0);\n}\n\n.#{$prefix}upload {\n  @include upload_state;\n  @include upload-tokens;\n  z-index: var(--upload-z-index);\n\n  @include media-breakpoint-down(xs) {\n    .br-button.upload-button {\n      height: auto;\n      padding: v(spacing-scale-base) v(spacing-scale-2x);\n      width: 100% !important;\n    }\n\n    .upload-button {\n      span {\n        font-size: v(font-size-scale-down-01);\n        white-space: break-spaces;\n      }\n    }\n\n    .item {\n      flex-wrap: nowrap;\n    }\n\n    .upload-list .support {\n      flex-shrink: 0;\n      margin-right: var(--spacing-scale-base);\n    }\n  }\n\n  input {\n    display: none;\n  }\n\n  &.dragging {\n    .upload-button {\n      background-color: v(color-support-01);\n\n      span,\n      svg {\n        color: var(--interactive);\n        pointer-events: none;\n      }\n    }\n  }\n\n  .br-button.upload-button {\n    max-width: 550px;\n    width: 100%;\n\n    &:active * {\n      color: v(color-primary-pastel-01);\n    }\n  }\n\n  .upload-button {\n    border: var(--surface-width-sm) dashed;\n    border-color: var(--interactive);\n    border-radius: var(--surface-rounder-sm);\n    display: block;\n    padding-left: v(spacing-scale-2x);\n    padding-right: v(spacing-scale-2x);\n    text-align: left;\n    width: 100%;\n\n    svg {\n      color: var(--interactive);\n      font-size: v(icon-size-lg);\n      padding-left: var(--spacing-scale-2x);\n    }\n\n    span {\n      color: var(--interactive);\n      font-size: v(font-size-scale-base);\n      font-style: italic;\n      font-weight: v(font-weight-regular);\n      padding-left: v(spacing-scale-half);\n    }\n  }\n\n  .upload-list {\n    max-width: 550px;\n    position: relative;\n\n    .content {\n      align-self: center;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      width: 70%;\n    }\n\n    .support {\n      align-items: center;\n      display: flex;\n    }\n\n    .cargas {\n      box-sizing: border-box;\n      color: v(color-secondary-08);\n      display: inline-block;\n      left: 54%;\n      position: relative;\n      text-align: right;\n      top: 4px;\n    }\n  }\n\n  .br-tooltip {\n    max-width: 93%;\n  }\n\n  .#{$prefix}item {\n    --item-padding: var(--spacing-scale-half) var(--spacing-scale-base)\n      var(--spacing-scale-half) var(--spacing-scale-2x);\n    align-items: center;\n    display: flex;\n\n    &:first-child {\n      margin-top: calc(var(--spacing-scale-half) * 2);\n    }\n  }\n}\n","@mixin upload($color: v(color-info, $color-info)) {\n  border: 1px solid v(color-secondary-01, $color-secondary-01);\n  box-shadow: 0 3px 6px v(color-secondary-04, $color-secondary-04);\n  margin-bottom: v(spacing-scale-2xh);\n  min-height: 248px;\n  padding-bottom: v(spacing-scale-2x);\n  padding-left: 360px;\n  padding-right: v(spacing-scale-6x);\n  padding-top: v(spacing-scale-4x);\n  @include media-breakpoint-down(sm) {\n    background-position: center 0;\n    padding-left: v(spacing-scale-2x);\n    padding-right: v(spacing-scale-2x);\n    padding-top: 180px;\n\n    .br-button {\n      &:hover {\n        background-color: transparent;\n      }\n    }\n\n    &:hover {\n      border: 1px solid v(color-primary-pastel-02, $color-primary-pastel-02);\n      // cursor: pointer;\n      cursor: copy;\n    }\n  }\n\n  &:hover {\n    border: 1px solid v(color-primary-pastel-02, $color-primary-pastel-02);\n    // cursor: pointer;\n    cursor: copy;\n  }\n\n  .upload-header {\n    color: v(color-secondary-07, $color-secondary-07);\n    font-size: v(font-size-scale-up-03, $font-size-scale-up-03) !important;\n    font-weight: v(font-weight-regular, $font-weight-regular) !important;\n  }\n\n  .upload-input {\n    display: none;\n  }\n\n  .upload-info {\n    color: v(color-info, $color-info);\n    display: block;\n    margin: v(spacing-scale-2x) 0;\n    padding-left: v(spacing-scale-5x);\n\n    .fa-info-circle {\n      font-size: v(font-size-scale-up-03, $font-size-scale-up-03) !important;\n      margin-left: calc(#{v(spacing-scale-5x)} * -1);\n      position: absolute;\n    }\n  }\n\n  .upload-file-list {\n    ul {\n      padding-left: 0;\n    }\n\n    li {\n      border-bottom: 1px solid v(color-secondary-04, $color-secondary-04);\n      color: v(color-info, $color-info);\n      font-size: v(font-size-scale-base, $font-size-scale-base) !important;\n      list-style: none;\n      padding: v(spacing-scale-base) 0 v(spacing-scale-base) v(spacing-scale-base);\n      position: relative;\n      width: 100%;\n\n      .del {\n        cursor: pointer;\n        display: inline;\n        line-height: 24px;\n        position: absolute;\n        right: 8px;\n      }\n    }\n\n    span {\n      display: inline-block;\n      overflow: hidden;\n      padding-right: v(spacing-scale-3x);\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      width: 100%;\n    }\n  }\n\n  .upload-add {\n    color: v(color-info, $color-info);\n    // cursor: pointer;\n    cursor: copy;\n    display: block;\n    font-weight: v(font-weight-regular, $font-weight-regular);\n    margin: v(spacing-scale-4x) 0;\n    padding-left: v(spacing-scale-4x);\n\n    .fa-plus {\n      font-size: v(font-size-scale-up-01, $font-size-scale-up-01) !important;\n      margin-left: calc(#{v(spacing-scale-3xh)} * -1);\n      margin-top: 0;\n      position: relative;\n    }\n  }\n\n  .upload-size {\n    text-align: right;\n    visibility: hidden;\n  }\n}\n\n@mixin upload_state {\n  /*** Estados ***/\n  @each $state, $color in (success, v(color-success)), (danger, v(color-danger)),\n    (warning, v(color-warning)), (info, v(color-info)) {\n    &.#{$state},\n    &[data-#{$state}] {\n      .upload-button {\n        border-color: $color;\n      }\n      .feedback.color-#{$state} {\n        align-items: center;\n        background: $color;\n        color: var(--color-secondary-01) !important;\n        display: inline-flex;\n        height: 35px;\n        margin-bottom: var(--spacing-scale-base);\n        padding: 5px;\n      }\n      @if ($state == warning) {\n        .feedback.color-warning {\n          color: var(--color-secondary-08) !important;\n        }\n      }\n    }\n  }\n}\n","// Dependência para calcular divisão\n@use \"sass:math\";\n\n// Função para retornar próximo breakpoint\n@function next-breakpoint($breakpoint) {\n  @if $breakpoint == \"xs\" {\n    @return \"sm\";\n  }\n  @if $breakpoint == \"sm\" {\n    @return \"md\";\n  }\n  @if $breakpoint == \"md\" {\n    @return \"lg\";\n  }\n  @if $breakpoint == \"lg\" {\n    @return \"xl\";\n  }\n}\n\n/// Aplica estilos no breakpoint informado para cima\n/// Modo de uso: @include media-breakpoint-up(sm) {}\n@mixin media-breakpoint-up($breakpoint) {\n  $size: map-get($breakpoints, $breakpoint);\n  @media (min-width: $size) {\n    @content;\n  }\n}\n\n/// Aplica estilos no breakpoint informado para baixo\n/// Modo de uso: @include media-breakpoint-down(sm) {}\n@mixin media-breakpoint-down($breakpoint) {\n  $value: map-get($breakpoints, next-breakpoint($breakpoint)) - 1px;\n  @media (max-width: $value) {\n    @content;\n  }\n}\n\n/// Cria as colunas de acordo com número de colunas informado.\n/// As colunas terão breakpoint caso seja ele seja informado.\n/// Modo de uso: @include columns(4); ou @include columns(8, \"sm\");\n@mixin columns($columns, $breakpoint: null) {\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")} {\n    flex: 1 0 0%;\n    min-width: math.div(1, $columns) * 100%;\n  }\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  @for $i from 1 through $columns {\n    .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-#{$i} {\n      flex-basis: math.div($i, $columns) * 100%;\n      max-width: math.div($i, $columns) * 100%;\n    }\n  }\n}\n\n/// Cria os containers responsivos para a Grid.\n/// A versão fluida sempre terá largura de 100%.\n/// As versões fixas recebem limite de largura de acordo com o breakpoint.\n/// Modo de uso: @include grid-breakpoint(\"576px\", \"sm\", \"tablet\");\n@mixin grid-breakpoint($var, $breakpoint, $name) {\n  @media (min-width: $var) {\n    .container,\n    .container-sm,\n    .container-md,\n    .container-lg,\n    .container-xl,\n    .container-fluid {\n      --grid-margin: var(--grid-#{$name}-margin);\n    }\n\n    .row {\n      --grid-gutter: var(--grid-#{$name}-gutter);\n    }\n    @if $breakpoint == \"sm\" {\n      .container,\n      .container-sm {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"md\" {\n      .container,\n      .container-sm,\n      .container-md {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"lg\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"xl\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg,\n      .container-xl {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @include columns($grid-desktop-columns, $breakpoint);\n  }\n}\n"],"names":[],"sourceRoot":""}