{"version":3,"file":"components/tab/tab.min.css","mappings":"AA0LA,QA5KE,0CACA,iCACA,8BACA,6CACA,4CACA,gEACA,2CACA,sCACA,6BACA,oCACA,qCACA,qCAZF,CAgBE,iBACE,yCAdJ,CAmBE,iBACE,gBACA,UAjBJ,CCYE,yBDGA,iBAII,aACA,gBACA,UAfJ,CACF,CAiBI,oBACE,kDACA,aACA,gBACA,aACA,UACA,UAfN,CAoBE,kBACE,mBACA,aACA,uBACA,kBACA,kBAlBJ,CAoBI,6CAEE,iCACA,qCACA,kDAGA,6BAEA,gDACA,uBACA,qBACA,2BACA,+BACA,cACA,2CACA,kBACA,kBApBN,CEOE,yDACE,YFJJ,CEOE,kJAEE,2BACA,mCACA,iCACA,gCFJJ,CE1DI,uFACE,qHF6DN,CEzDI,yFACE,yHF4DN,CAGI,8BACE,cADN,CAII,6BACE,eAFN,CAOM,mEACE,0BACA,qCALR,CAQM,uEACE,2CACA,mBANR,CAWE,iBACE,aACA,+BACA,uBACA,mCACA,kBACA,QATJ,CAgBM,uCACE,sGAdR,CAsBI,gCACE,wBACA,YApBN,CAsBM,iFAEE,aArBR,CA6BI,8CAGE,2BA7BN,CA0BI,iDAGE,4BA1BN,CAuBI,8CAGE,2BAvBN","sources":["webpack://@govbr/dsgov/./src/components/tab/_tab.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_grid.scss","webpack://@govbr/dsgov/./src/partial/scss/mixins/_states.scss"],"sourcesContent":["@import \"../../partial/scss/base\";\n\n@import \"../../partial/scss/base\";\n\n@mixin tab {\n  @include tab-tokens;\n  @include tab-darkmode;\n  @include tab-nav;\n  @include tab-count;\n  @include tab-content;\n  @include tab-sizes;\n}\n\n@mixin tab-tokens {\n  --interactive-rgb: var(--rgb-secondary-08);\n  --tab-background: var(--bg-color);\n  --tab-color: var(--text-color);\n  --tab-font-size: var(--font-size-scale-up-02);\n  --tab-font-weight: var(--font-weight-medium);\n  --tab-active-border: var(--surface-width-lg) solid var(--active);\n  --tab-nav-border: var(--color-secondary-04);\n  --tab-padding: var(--spacing-scale-3x);\n  --tab-size: var(--tab-medium);\n  --tab-large: var(--spacing-scale-3x);\n  --tab-medium: var(--spacing-scale-2x);\n  --tab-small: var(--spacing-scale-base);\n}\n\n@mixin tab-darkmode {\n  &.inverted {\n    --interactive-rgb: var(--rgb-secondary-01);\n  }\n}\n\n@mixin tab-nav {\n  .tab-nav {\n    overflow-x: auto;\n    width: 100%;\n    @include media-breakpoint-down(sm) {\n      display: flex;\n      overflow-x: auto;\n      width: 100%;\n    }\n\n    ul {\n      border-bottom: 1px solid var(--color-secondary-04);\n      display: flex;\n      margin-bottom: 0;\n      margin-top: 0;\n      padding: 0;\n      width: 100%;\n\n    }\n  }\n\n  .tab-item {\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    position: relative;\n    white-space: nowrap;\n\n    button,\n    a {\n      --font-size: var(--tab-font-size);\n      --font-weight: var(--tab-font-weight);\n      --focus-offset: calc(var(--spacing-scale-half) * -1);\n      @include focus;\n      @include hover;\n      background-color: transparent;\n      border: none;\n      border-bottom: 4px solid transparent;\n      color: var(--tab-color);\n      display: inline-block;\n      font-size: var(--font-size);\n      font-weight: var(--font-weight);\n      line-height: 1;\n      padding: var(--tab-size) var(--tab-padding);\n      text-align: center;\n      white-space: nowrap;\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n\n    &.is-active,\n    &.active {\n      button {\n        --tab-color: var(--active);\n        border-bottom: 4px solid var(--active);\n      }\n\n      .results {\n        --font-weight: var(--font-weight-semi-bold);\n        color: var(--active);\n      }\n    }\n  }\n\n  .results {\n    display: flex;\n    font-weight: var(--font-weight);\n    justify-content: center;\n    margin-top: var(--spacing-scale-2x);\n    position: absolute;\n    top: 100%;\n  }\n}\n\n@mixin tab-count {\n  &[data-counter=\"true\"] {\n    .tab-nav {\n      ul {\n        margin-bottom: calc(var(--spacing-scale-2x) + var(--font-size-scale-up-02) + var(--spacing-scale-base));\n      }\n    }\n  }\n}\n\n@mixin tab-content {\n  .tab-content {\n    .tab-panel {\n      color: var(--text-color);\n      display: none;\n\n      &.is-active,\n      &.active {\n        display: block;\n      }\n    }\n  }\n}\n\n@mixin tab-sizes {\n  @each $size in \"small\", \"medium\", \"large\" {\n    &.#{$size},\n    &[#{$size}],\n    &.is-#{$size} {\n      --tab-size: var(--tab-#{$size});\n    }\n  }\n}\n\n@mixin tab-nav-gradiente {\n  .tab-nav-right::after {\n    //TODO: Atualizar o código com padrão de gradiente quando estiver pronto\n    background: linear-gradient(to right,\n    rgba(0, 0, 0, var(--surface-opacity-none)),\n    rgba(var(--rgb-secondary-09), 0.2));\n    content: \"\";\n    height: var(--height-nav, 10px);\n    // --height-nav:60px;\n    left: var(--right-gradient-nav, 0);\n    opacity: 1;\n    pointer-events: none;\n    position: absolute;\n    transition: opacity 0.3s 0s, visibility 0s 0s;\n    visibility: visible;\n    width: 3%;\n    z-index: var(--z-index-layer-0);\n  }\n\n  .tab-nav-left::before {\n    background: linear-gradient(to left,\n    rgba(0, 0, 0, var(--surface-opacity-none)),\n    rgba(var(--rgb-secondary-09), 0.2));\n    content: \"\";\n    height: var(--height-nav, 10px);\n    // --height-nav:60px;\n    left: 0;\n    opacity: 1;\n    pointer-events: none;\n    position: absolute;\n    transition: opacity 0.3s 0s, visibility 0s 0s;\n\n    visibility: visible;\n    width: 3%;\n    z-index: var(--z-index-layer-0);\n  }\n}\n\n.#{$prefix}tab {\n  @include tab;\n}\n","// Dependência para calcular divisão\n@use \"sass:math\";\n\n// Função para retornar próximo breakpoint\n@function next-breakpoint($breakpoint) {\n  @if $breakpoint == \"xs\" {\n    @return \"sm\";\n  }\n  @if $breakpoint == \"sm\" {\n    @return \"md\";\n  }\n  @if $breakpoint == \"md\" {\n    @return \"lg\";\n  }\n  @if $breakpoint == \"lg\" {\n    @return \"xl\";\n  }\n}\n\n/// Aplica estilos no breakpoint informado para cima\n/// Modo de uso: @include media-breakpoint-up(sm) {}\n@mixin media-breakpoint-up($breakpoint) {\n  $size: map-get($breakpoints, $breakpoint);\n  @media (min-width: $size) {\n    @content;\n  }\n}\n\n/// Aplica estilos no breakpoint informado para baixo\n/// Modo de uso: @include media-breakpoint-down(sm) {}\n@mixin media-breakpoint-down($breakpoint) {\n  $value: map-get($breakpoints, next-breakpoint($breakpoint)) - 1px;\n  @media (max-width: $value) {\n    @content;\n  }\n}\n\n/// Cria as colunas de acordo com número de colunas informado.\n/// As colunas terão breakpoint caso seja ele seja informado.\n/// Modo de uso: @include columns(4); ou @include columns(8, \"sm\");\n@mixin columns($columns, $breakpoint: null) {\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")} {\n    flex: 1 0 0%;\n    min-width: math.div(1, $columns) * 100%;\n  }\n  .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  @for $i from 1 through $columns {\n    .col#{if($breakpoint, \"-#{$breakpoint}\", \"\")}-#{$i} {\n      flex-basis: math.div($i, $columns) * 100%;\n      max-width: math.div($i, $columns) * 100%;\n    }\n  }\n}\n\n/// Cria os containers responsivos para a Grid.\n/// A versão fluida sempre terá largura de 100%.\n/// As versões fixas recebem limite de largura de acordo com o breakpoint.\n/// Modo de uso: @include grid-breakpoint(\"576px\", \"sm\", \"tablet\");\n@mixin grid-breakpoint($var, $breakpoint, $name) {\n  @media (min-width: $var) {\n    .container,\n    .container-sm,\n    .container-md,\n    .container-lg,\n    .container-xl,\n    .container-fluid {\n      --grid-margin: var(--grid-#{$name}-margin);\n    }\n\n    .row {\n      --grid-gutter: var(--grid-#{$name}-gutter);\n    }\n    @if $breakpoint == \"sm\" {\n      .container,\n      .container-sm {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"md\" {\n      .container,\n      .container-sm,\n      .container-md {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"lg\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @if $breakpoint == \"xl\" {\n      .container,\n      .container-sm,\n      .container-md,\n      .container-lg,\n      .container-xl {\n        --grid-maxwidth: calc(var(--grid-breakpoint-#{$breakpoint}) - var(--grid-#{$name}-margin));\n      }\n    }\n    @include columns($grid-desktop-columns, $breakpoint);\n  }\n}\n","// Desabilitado\n@mixin disabled {\n  cursor: not-allowed;\n  opacity: var(--disabled);\n\n  * {\n    pointer-events: none;\n  }\n}\n\n// Hover\n@mixin hover {\n  &:not(:disabled) {\n    &:hover {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--hover)),\n      rgba(var(--interactive-rgb), var(--hover)));\n    }\n\n    &:active {\n      background-image: linear-gradient(rgba(var(--interactive-rgb), var(--pressed)),\n      rgba(var(--interactive-rgb), var(--pressed)));\n    }\n  }\n}\n\n/// Focus\n/// De acordo com o Fundamento Estado existem 2 tipos de focus:\n/// 1. Foco padrão: É a versão tracejada.\n/// 2. Foco tênue: É a versão atenuada.\n///\n/// Ambos podem ser aplicados em navegação por tab, porém apenas o focus tênue\n/// pode ser aplicado ao clicar no componente. Você precisará especificar se o\n/// focus será aplicado como focus ou focus-visible.\n///\n/// 1. Foco padrão:\n///    Aplicado somente em focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        @include focus-soft;\n///      }\n///\n/// 2. Foco tênue:\n///    Pode ser aplicado em focus ou focus-visible.\n///\n///    Modo de uso:\n///      seletor {\n///        &:focus {\n///          outline: none;\n///        }\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n///\n///      ou\n///\n///      seletor {\n///        &:focus,\n///        &:focus-visible,\n///        &.focus-visible {\n///          @include focus-soft;\n///        }\n///      }\n@mixin focus {\n  &:focus {\n    outline: none;\n  }\n\n  &.focus-visible,\n  &:focus-visible {\n    outline-color: var(--focus);\n    outline-offset: var(--focus-offset);\n    outline-style: var(--focus-style);\n    outline-width: var(--focus-width);\n  }\n}\n\n@mixin focus-soft {\n  border-color: var(--focus) !important;\n  box-shadow: 0 0 0 var(--surface-width-md) var(--focus);\n  outline: none;\n}\n\n// Ativo\n@mixin active {\n  background: var(--active);\n  color: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n  --color: var(--color-dark);\n  --color-rgb: var(--color-dark-rgb);\n  --color-hsl: var(--color-dark-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-dark);\n  --interactive-rgb: var(--interactive-dark-rgb);\n  --interactive-dark-hsl: var(--interactive-dark-hsl);\n  --visited: var(--gray-20);\n  --hover: var(--surface-opacity-sm);\n  --pressed: var(--surface-opacity-lg);\n  --focus-color: var(--gold-vivid-20);\n  --focus: var(--gold-vivid-20);\n  --active: var(--pure-0);\n}\n@mixin light-mode {\n  --color: var(--color-light);\n  --color-rgb: var(--color-light-rgb);\n  --color-hsl: var(--color-light-hsl);\n  --text-color: var(--color);\n  --interactive: var(--interactive-light);\n  --interactive-rgb: var(--interactive-light-rgb);\n  --interactive-hsl: var(--interactive-light-hsl);\n  --visited: var(--blue-warm-vivid-80);\n  --hover: var(--surface-opacity-xs);\n  --pressed: var(--surface-opacity-md);\n  --focus-color: var(--gold-vivid-40);\n  --focus: var(--gold-vivid-40);\n  --active: var(--blue-warm-vivid-80);\n}\n"],"names":[],"sourceRoot":""}