{"version":3,"file":"components/textarea/textarea.min.js","mappings":"mBACA,IAAIA,EAAsB,GCD1BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,QALjB,G,MCAxB,IAAIC,EACAP,EAAoBC,EAAEO,gBAAeD,EAAYP,EAAoBC,EAAEQ,SAAW,IACtF,IAAIC,EAAWV,EAAoBC,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UACzCD,EAAQE,SAAQR,EAAYM,EAAQA,EAAQE,OAAS,GAAGH,KAK7D,IAAKL,EAAW,MAAM,IAAIS,MAAM,yDAChCT,EAAYA,EAAUU,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFjB,EAAoBkB,EAAIX,EAAY,U,SCfpC,MAAMY,EACJC,YAAYC,EAAMC,GAChBnB,KAAKkB,KAAOA,EACZlB,KAAKmB,UAAYA,EACjBnB,KAAKoB,eACLpB,KAAKqB,YAGPD,eACEpB,KAAKsB,MAAQtB,KAAKmB,UAAUI,cAAc,UAC1CvB,KAAKwB,QAAUxB,KAAKmB,UAAUI,cAAc,YACK,OAA7CvB,KAAKmB,UAAUI,cAAc,cAC/BvB,KAAKyB,QAAUzB,KAAKmB,UACjBI,cAAc,YACdG,aAAa,cAGlB1B,KAAK2B,WAAa3B,KAAKmB,UAAUI,cAAc,eAC/CvB,KAAK4B,aAAe5B,KAAKmB,UAAUI,cAAc,YAGnDF,YACErB,KAAKmB,UAAUU,iBAAiB,SAAUC,IACxC,MAAMC,EAAiB/B,KAAKmB,UAAUI,cAAc,YAAYS,WAC5DD,GAAkB/B,KAAKyB,UAAYzB,KAAK2B,aAC1C3B,KAAKsB,MAAMW,UAAY,GACvBjC,KAAK4B,aAAaK,UAAY,kBAC5BjC,KAAKyB,QAAUM,yBAId/B,KAAK2B,WAQR3B,KAAK2B,WAAWM,UAAY,WAAWF,kCAPhB,IAAnBA,GAAiD,KAAzB/B,KAAKsB,MAAMW,YACrCjC,KAAKsB,MAAMW,UAAY,4BAA4BjC,KAAKyB,8BACxDzB,KAAK4B,aAAaK,UAAY,QAYxC,MAAMC,EAAe,GACrB,IAAK,MAAMC,KAAchC,OAAOI,SAAS6B,iBAAiB,gBACxDF,EAAaG,KAAK,IAAIrB,EAAW,cAAemB,K,GChDnC,K","sources":["webpack://@govbr/dsgov/webpack/bootstrap","webpack://@govbr/dsgov/webpack/runtime/global","webpack://@govbr/dsgov/webpack/runtime/publicPath","webpack://@govbr/dsgov/./src/components/textarea/textarea.js","webpack://@govbr/dsgov/./src/components/textarea/examples.pug"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","class BRTextArea {\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this._setBehavior()\n    this._setKeyup()\n  }\n\n  _setBehavior() {\n    this.limit = this.component.querySelector('.limit')\n    this.current = this.component.querySelector('.current')\n    if (this.component.querySelector('textarea') !== null) {\n      this.maximum = this.component\n        .querySelector('textarea')\n        .getAttribute('maxlength')\n    }\n\n    this.characters = this.component.querySelector('.characters')\n    this.currentValue = this.component.querySelector('.current')\n  }\n\n  _setKeyup() {\n    this.component.addEventListener('keyup', (event) => {\n      const characterCount = this.component.querySelector('textarea').textLength\n      if (characterCount <= this.maximum && !this.characters) {\n        this.limit.innerHTML = ''\n        this.currentValue.innerHTML = `Restam <strong>${\n          this.maximum - characterCount\n        }</strong> caracteres`\n      }\n      // Com limite de caracteres\n      if (!this.characters) {\n        if (characterCount === 0 && this.limit.innerHTML === '') {\n          this.limit.innerHTML = `Limite m√°ximo de <strong>${this.maximum}</strong> caracteres`\n          this.currentValue.innerHTML = ''\n        }\n      }\n      // Sem limite de caracteres\n      else {\n        this.characters.innerHTML = `<strong>${characterCount}</strong> caracteres digitados`\n      }\n    })\n  }\n}\n\n/* Instancia a classe */\nconst textareaList = []\nfor (const brTextArea of window.document.querySelectorAll('.br-textarea')) {\n  textareaList.push(new BRTextArea('br-textarea', brTextArea))\n}\nexport default BRTextArea\n","export default __webpack_public_path__ + \"components/textarea/examples.html\";"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","BRTextArea","constructor","name","component","_setBehavior","_setKeyup","limit","querySelector","current","maximum","getAttribute","characters","currentValue","addEventListener","event","characterCount","textLength","innerHTML","textareaList","brTextArea","querySelectorAll","push"],"sourceRoot":""}