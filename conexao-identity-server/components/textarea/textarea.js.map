{"version":3,"file":"components/textarea/textarea.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6DAA6D,aAAa;AAC1E;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sEAAe,0DAAU;;;;;;AClDzB;;;;;;ACAA,sEAAe,qBAAuB,sCAAsC,E;;;;;ACA5E,sEAAe,qBAAuB,uDAAuD,E;;;;;ACA7F,sEAAe,qBAAuB,qDAAqD,E;;;;;ACA3F,sEAAe,qBAAuB,sDAAsD,E;;;;;ACA5F,sEAAe,qBAAuB,0DAA0D,E;;;;;ACAhG,sEAAe,qBAAuB,wDAAwD,E;;;;;ACA9F,sEAAe,qBAAuB,uDAAuD,E;;;;;ACA7F,sEAAe,qBAAuB,gEAAgE,E","sources":["webpack://@govbr/dsgov/webpack/bootstrap","webpack://@govbr/dsgov/webpack/runtime/global","webpack://@govbr/dsgov/webpack/runtime/publicPath","webpack://@govbr/dsgov/./src/components/textarea/textarea.js","webpack://@govbr/dsgov/./src/components/textarea/_textarea.scss?0d16","webpack://@govbr/dsgov/./src/components/textarea/examples.pug","webpack://@govbr/dsgov/./src/components/textarea/examples/textarea-default.pug","webpack://@govbr/dsgov/./src/components/textarea/examples/textarea-sizes.pug","webpack://@govbr/dsgov/./src/components/textarea/examples/textarea-states.pug","webpack://@govbr/dsgov/./src/components/textarea/examples/textarea-label-left.pug","webpack://@govbr/dsgov/./src/components/textarea/examples/textarea-inverted.pug","webpack://@govbr/dsgov/./src/components/textarea/examples/textarea-counter.pug","webpack://@govbr/dsgov/./src/components/textarea/examples/textarea-counter-no-limit.pug"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","class BRTextArea {\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this._setBehavior()\n    this._setKeyup()\n  }\n\n  _setBehavior() {\n    this.limit = this.component.querySelector('.limit')\n    this.current = this.component.querySelector('.current')\n    if (this.component.querySelector('textarea') !== null) {\n      this.maximum = this.component\n        .querySelector('textarea')\n        .getAttribute('maxlength')\n    }\n\n    this.characters = this.component.querySelector('.characters')\n    this.currentValue = this.component.querySelector('.current')\n  }\n\n  _setKeyup() {\n    this.component.addEventListener('keyup', (event) => {\n      const characterCount = this.component.querySelector('textarea').textLength\n      if (characterCount <= this.maximum && !this.characters) {\n        this.limit.innerHTML = ''\n        this.currentValue.innerHTML = `Restam <strong>${\n          this.maximum - characterCount\n        }</strong> caracteres`\n      }\n      // Com limite de caracteres\n      if (!this.characters) {\n        if (characterCount === 0 && this.limit.innerHTML === '') {\n          this.limit.innerHTML = `Limite m√°ximo de <strong>${this.maximum}</strong> caracteres`\n          this.currentValue.innerHTML = ''\n        }\n      }\n      // Sem limite de caracteres\n      else {\n        this.characters.innerHTML = `<strong>${characterCount}</strong> caracteres digitados`\n      }\n    })\n  }\n}\n\n/* Instancia a classe */\nconst textareaList = []\nfor (const brTextArea of window.document.querySelectorAll('.br-textarea')) {\n  textareaList.push(new BRTextArea('br-textarea', brTextArea))\n}\nexport default BRTextArea\n","// extracted by mini-css-extract-plugin\nexport {};","export default __webpack_public_path__ + \"components/textarea/examples.html\";","export default __webpack_public_path__ + \"components/textarea/examples/textarea-default.html\";","export default __webpack_public_path__ + \"components/textarea/examples/textarea-sizes.html\";","export default __webpack_public_path__ + \"components/textarea/examples/textarea-states.html\";","export default __webpack_public_path__ + \"components/textarea/examples/textarea-label-left.html\";","export default __webpack_public_path__ + \"components/textarea/examples/textarea-inverted.html\";","export default __webpack_public_path__ + \"components/textarea/examples/textarea-counter.html\";","export default __webpack_public_path__ + \"components/textarea/examples/textarea-counter-no-limit.html\";"],"names":[],"sourceRoot":""}