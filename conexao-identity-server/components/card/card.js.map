{"version":3,"file":"components/card/card.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;ACfA;AACA;AACA;AACA;AACA,6CAA6C,GAAG;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sEAAe,sDAAM;;;;;;AClOrB;;;;;;ACAA,sEAAe,qBAAuB,kCAAkC,E;;;;;ACAxE,sEAAe,qBAAuB,gDAAgD,E;;;;;ACAtF,sEAAe,qBAAuB,kDAAkD,E;;;;;ACAxF,sEAAe,qBAAuB,gDAAgD,E;;;;;ACAtF,sEAAe,qBAAuB,4CAA4C,E;;;;;ACAlF,sEAAe,qBAAuB,+CAA+C,E;;;;;ACArF,sEAAe,qBAAuB,6CAA6C,E","sources":["webpack://@govbr/dsgov/webpack/bootstrap","webpack://@govbr/dsgov/webpack/runtime/global","webpack://@govbr/dsgov/webpack/runtime/publicPath","webpack://@govbr/dsgov/./src/components/card/card.js","webpack://@govbr/dsgov/./src/components/card/_card.scss?506e","webpack://@govbr/dsgov/./src/components/card/examples.pug","webpack://@govbr/dsgov/./src/components/card/examples/card-completo.pug","webpack://@govbr/dsgov/./src/components/card/examples/card-desativado.pug","webpack://@govbr/dsgov/./src/components/card/examples/card-expansao.pug","webpack://@govbr/dsgov/./src/components/card/examples/card-flip.pug","webpack://@govbr/dsgov/./src/components/card/examples/card-simples.pug","webpack://@govbr/dsgov/./src/components/card/examples/card-hover.pug"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","class BRCard {\n  constructor(name, component, id) {\n    this.name = name\n    this.component = component\n    this.component.setAttribute('id', `card${id}`)\n    this._setBehavior()\n    new BRCardFlip()\n    new BRCardCollapse(component)\n  }\n\n  _setBehavior() {\n    this._setFlipBehavior()\n    // this._setExpandBehavior()\n    this._setDragBehavior()\n    this._setDisableBehavior()\n  }\n\n  _setDisableBehavior() {\n    if (this.component.classList.contains('disabled')) {\n      this.component.setAttribute('aria-hidden', 'true')\n      const buttons = this.component.querySelectorAll('button')\n      const inputs = this.component.querySelectorAll('input')\n      const selects = this.component.querySelectorAll('select')\n      const textareas = this.component.querySelectorAll('textarea')\n      for (const button of buttons) {\n        button.setAttribute('disabled', 'disabled')\n      }\n      for (const input of inputs) {\n        input.setAttribute('disabled', 'disabled')\n      }\n      for (const select of selects) {\n        input.setAttribute('disabled', 'disabled')\n      }\n      for (const textarea of textareas) {\n        input.setAttribute('disabled', 'disabled')\n      }\n    }\n  }\n\n  _setFlipBehavior() {\n    for (const flip of this.component.querySelectorAll('button.flip')) {\n      flip.addEventListener('click', () => {\n        if (this.component.getAttribute('flipped') === 'off') {\n          this.component.setAttribute('flipped', 'on')\n        } else {\n          this.component.setAttribute('flipped', 'off')\n        }\n      })\n    }\n  }\n\n  // _setExpandBehavior() {\n  //   for (const expand of this.component.querySelectorAll('[data-expanded]')) {\n  //     expand.addEventListener('click', () => {\n  //       console.log('teste')\n  //       if (this.component.getAttribute('data-expanded') === 'off') {\n  //         this.component.setAttribute('data-expanded', 'on')\n  //       } else {\n  //         this.component.setAttribute('data-expanded', 'off')\n  //       }\n  //     })\n  //   }\n  // }\n\n  _setDragBehavior() {\n    for (const img of this.component.querySelectorAll('img')) {\n      img.setAttribute('draggable', 'false')\n    }\n    for (const link of this.component.querySelectorAll('a')) {\n      link.setAttribute('draggable', 'false')\n    }\n    this.component.addEventListener('dragstart', (event) => {\n      event.stopPropagation()\n      event.dataTransfer.setData(\n        'text/plain',\n        this.component.getAttribute('id')\n      )\n      event.dropEffect = 'move'\n    })\n  }\n}\n\nclass BRCardFlip {\n  constructor() {\n    this._setBehavior()\n  }\n\n  _setBehavior() {\n    const cardFlippers = document.querySelectorAll('.br-card[data-flip]')\n\n    for (const cardFlip of cardFlippers) {\n      const cardFront = cardFlip.querySelector('.front')\n      const cardBack = cardFlip.querySelector('.back')\n      const cardFrontTrigger = cardFlip.querySelector(\n        '.front [data-toggle=\"flip\"]'\n      )\n      const cardBackTrigger = cardFlip.querySelector(\n        '.back [data-toggle=\"flip\"]'\n      )\n      this._cardFlipInit(cardFront, cardBack, cardFrontTrigger, cardBackTrigger)\n      this._setCardFrontTrigger(\n        cardFrontTrigger,\n        cardFront,\n        cardBack,\n        cardBackTrigger\n      )\n      this._setCardBackTrigger(\n        cardBackTrigger,\n        cardFront,\n        cardBack,\n        cardFrontTrigger\n      )\n    }\n  }\n\n  _setCardFrontTrigger(cardFrontTrigger, cardFront, cardBack, cardBackTrigger) {\n    cardFrontTrigger.addEventListener('click', () => {\n      return this._cardFlipShowBack(\n        cardFront,\n        cardBack,\n        cardFrontTrigger,\n        cardBackTrigger\n      )\n    })\n  }\n\n  _setCardBackTrigger(cardBackTrigger, cardFront, cardBack, cardFrontTrigger) {\n    cardBackTrigger.addEventListener('click', () => {\n      return this._cardFlipShowFront(\n        cardFront,\n        cardBack,\n        cardFrontTrigger,\n        cardBackTrigger\n      )\n    })\n  }\n\n  _cardFlipInit(cardFront, cardBack, cardFrontTrigger, cardBackTrigger) {\n    this._cardFlipShowFront(\n      cardFront,\n      cardBack,\n      cardFrontTrigger,\n      cardBackTrigger\n    )\n  }\n\n  _cardFlipShowFront(cardFront, cardBack, cardFrontTrigger, cardBackTrigger) {\n    cardFront.removeAttribute('hidden')\n    cardFront.setAttribute('aria-hidden', 'false')\n    cardFrontTrigger.setAttribute('aria-expanded', 'true')\n    cardBack.setAttribute('aria-hidden', 'true')\n    cardBack.setAttribute('hidden', '')\n    cardBackTrigger.setAttribute('aria-expanded', 'false')\n  }\n\n  _cardFlipShowBack(cardFront, cardBack, cardFrontTrigger, cardBackTrigger) {\n    cardFront.setAttribute('hidden', '')\n    cardFront.setAttribute('aria-hidden', 'true')\n    cardFrontTrigger.setAttribute('aria-expanded', 'false')\n    cardBack.removeAttribute('hidden')\n    cardBack.setAttribute('aria-hidden', 'false')\n    cardBackTrigger.setAttribute('aria-expanded', 'true')\n  }\n}\n\nclass BRCardCollapse {\n  constructor(component) {\n    this.component = component\n    this._setBehavior()\n  }\n\n  _setBehavior() {\n    // PadrÃ£o de toggle no card\n    const cardToggler = this.component.querySelector('[data-expanded]')\n\n    if (cardToggler !== null) {\n      const cardTogglerTarget = this.component.querySelector(\n        cardToggler.dataset.target\n      )\n      this._cardCollapseInit(cardToggler, cardTogglerTarget)\n      cardToggler.addEventListener('click', () => {\n        if (cardToggler.getAttribute('data-expanded') === 'on') {\n          this._cardHiddenContent(cardToggler, cardTogglerTarget)\n        } else {\n          this._cardShowContent(cardToggler, cardTogglerTarget)\n        }\n      })\n    }\n  }\n\n  _cardShowContent(cardToggler, cardTogglerTarget) {\n    cardToggler.setAttribute('data-expanded', 'on')\n    cardTogglerTarget.setAttribute('aria-hidden', 'false')\n    cardTogglerTarget.removeAttribute('hidden')\n    cardToggler.querySelector('i').classList.remove('fa-angle-down')\n    cardToggler.querySelector('i').classList.add('fa-angle-up')\n  }\n\n  _cardHiddenContent(cardToggler, cardTogglerTarget) {\n    cardToggler.setAttribute('data-expanded', 'off')\n    cardTogglerTarget.setAttribute('aria-hidden', 'true')\n    cardTogglerTarget.setAttribute('hidden', '')\n    cardToggler.querySelector('i').classList.remove('fa-angle-up')\n    cardToggler.querySelector('i').classList.add('fa-angle-down')\n  }\n\n  _cardCollapseInit(cardToggler, cardTogglerTarget) {\n    if (cardToggler.dataset.visible) {\n      if (cardToggler.dataset.visible === 'true') {\n        this._cardShowContent(cardToggler, cardTogglerTarget)\n      } else {\n        this._cardHiddenContent(cardToggler, cardTogglerTarget)\n      }\n    } else {\n      this._cardHiddenContent(cardToggler, cardTogglerTarget)\n    }\n  }\n}\n\nconst listCard = []\nfor (const [index, brCard] of window.document\n  .querySelectorAll('.br-card')\n  .entries()) {\n  listCard.push(new BRCard('br-card', brCard, index))\n}\n\nexport default BRCard\n","// extracted by mini-css-extract-plugin\nexport {};","export default __webpack_public_path__ + \"components/card/examples.html\";","export default __webpack_public_path__ + \"components/card/examples/card-completo.html\";","export default __webpack_public_path__ + \"components/card/examples/card-desativado.html\";","export default __webpack_public_path__ + \"components/card/examples/card-expansao.html\";","export default __webpack_public_path__ + \"components/card/examples/card-flip.html\";","export default __webpack_public_path__ + \"components/card/examples/card-simples.html\";","export default __webpack_public_path__ + \"components/card/examples/card-hover.html\";"],"names":[],"sourceRoot":""}